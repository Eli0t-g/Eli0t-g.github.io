{"title":"pygame使用","uid":"7ceb9bfebefe73ecc89b8753e3a43190","slug":"pygame使用","date":"2021-05-12T12:25:39.000Z","updated":"2021-05-13T13:05:28.997Z","comments":true,"path":"api/articles/pygame使用.json","keywords":null,"cover":"https://i.loli.net/2021/05/06/flvMEUJHAYwSNq2.jpg","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>了解，学习一个第三方模块，最好是去官网学习，因为官方有第一手资料，而在其他人手里则是第二手，使用要学好还是得去<a href=\"https://www.pygame.org/wiki/GettingStarted\">官网</a>。在这里我就直接拿实例讲pygame</p></blockquote>\n<h1 id=\"安装pygame-windows\"><a href=\"#安装pygame-windows\" class=\"headerlink\" title=\"安装pygame (windows)\"></a>安装pygame (windows)</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m pip install -U pygame --user</span><br></pre></td></tr></table></figure>\n\n<p>可能的报错：</p>\n<ul>\n<li>输入python可能会报错，改成python3</li>\n<li>无法下载，检查网络是否正常，确认无误还是无法下载，查看是否使用了梯子，如果使用就关闭。</li>\n</ul>\n<h1 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h1><p>设计一个游戏必须先有思路，这里我引用了一个大佬的图片，基本思路差不多，接下来就根据这个思路开始设计这个游戏</p>\n<p><img src=\"https://i.loli.net/2021/05/12/jgWlDs5pc1rQUVN.png\" alt=\"图片链接https://blog.csdn.net/weixin_45634606/article/details/105574019\"></p>\n<p>首先，在设计时要明确游戏有哪些元素，从而创建对应的类。在飞机大战中，要创建以下几个类：</p>\n<ul>\n<li><p>用于管理游戏资源和行为的类（我是将它放在alien_invasion.py文件中，作为游戏的入口）</p>\n</li>\n<li><p>存储游戏设置的类（settings.py）</p>\n</li>\n<li><p>存储飞机的类（ship.py）</p>\n</li>\n<li><p>存储子弹的类（bullet.py）</p>\n</li>\n<li><p>存储敌机的类（Alien.py）</p>\n</li>\n<li><p>存储游戏初始数据的类（game_stats.py）</p>\n</li>\n<li><p>存储得分的类（scoreboard.py）</p>\n</li>\n<li><p>存储初始游戏界面的类（bottom.py）</p>\n<h1 id=\"alien-invasion-py\"><a href=\"#alien-invasion-py\" class=\"headerlink\" title=\"alien_invasion.py\"></a>alien_invasion.py</h1><p>首先要初始化要显示的窗口或屏幕</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> pygame</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AlienInvasion</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span>                            </span><br><span class=\"line\">        pygame.init()                                                                                   <span class=\"comment\">#pygame.init()安全地初始化了所有导入的pygame模块</span></span><br><span class=\"line\">        self.screen = pygame.display.set_mode((<span class=\"number\">1200</span>,<span class=\"number\">800</span>))         <span class=\"comment\">#初始屏幕，1200是屏幕宽度，800是屏幕高度</span></span><br><span class=\"line\">        pygame.display.set_caption(<span class=\"string\">&quot;Alien Invasion&quot;</span>)                      <span class=\"comment\">#在屏幕边框上面添加游戏名Alien Invasion</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_game</span>(<span class=\"params\">self</span>):</span>                                                                         <span class=\"comment\">#游戏主循环，让游戏不断持续下去</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> event <span class=\"keyword\">in</span> pygame.event.get():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> event.<span class=\"built_in\">type</span> == pygame.QUIT:                                          <span class=\"comment\"># 如果用户输入q游戏就结束</span></span><br><span class=\"line\">                    sys.exit()</span><br><span class=\"line\">            pygame.display.flip()</span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:  </span><br><span class=\"line\">    ai = AlienInvasion()</span><br><span class=\"line\">    ai.run_game()</span><br></pre></td></tr></table></figure>\n\n<p><strong>相关代码解释</strong>：</p>\n<p>**if __ name __ == ‘ __ main <strong>： ‘**：</strong> name __ 是当前模块名，当模块被直接运行时模块名为 __ main __ 。这句话的意思就是，当模块被直接运行时，以下代码块将被运行，当模块是被导入时，代码块不被运行。（如果还是有疑惑查看<a href=\"https://www.sohu.com/a/426575177_671965\">链接</a>）</p>\n<p><strong>for event in pygame.event.get()：</strong>Pygame会接受用户的各种操作（比如按键盘，移动鼠标等）产生事件，事件随时可能发生，而且量也可能会很大，Pygame的做法是把一系列的事件存放一个队列里，逐个的处理。这行代码就是将事件逐一读取。</p>\n<h1 id=\"settings-py\"><a href=\"#settings-py\" class=\"headerlink\" title=\"settings.py\"></a>settings.py</h1><p>存储游戏元素属性</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Settings</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        self.screen_width = <span class=\"number\">1200</span>                 <span class=\"comment\">#屏幕宽度</span></span><br><span class=\"line\">        self.screen_height = <span class=\"number\">600</span>                 <span class=\"comment\">#屏幕高度</span></span><br><span class=\"line\">        self.bg_color = (<span class=\"number\">230</span>, <span class=\"number\">230</span>, <span class=\"number\">230</span>)      <span class=\"comment\">#背景颜色</span></span><br><span class=\"line\">        self.ship_speed = <span class=\"number\">1.5</span>              \t        <span class=\"comment\">#飞船移动速度</span></span><br><span class=\"line\">        self.bullet_speed = <span class=\"number\">1.5</span>          \t     <span class=\"comment\">#子弹速度</span></span><br><span class=\"line\">        self.bullet_width = <span class=\"number\">3</span>            \t      <span class=\"comment\">#子弹宽度</span></span><br><span class=\"line\">        self.bullet_height = <span class=\"number\">15</span>           \t      <span class=\"comment\">#子弹长度</span></span><br><span class=\"line\">        self.bullet_color = (<span class=\"number\">60</span>,<span class=\"number\">60</span>,<span class=\"number\">60</span>)        <span class=\"comment\">#子弹颜色</span></span><br><span class=\"line\">        self.bullet_allowed = <span class=\"number\">5</span>           \t     <span class=\"comment\">#子弹数量</span></span><br><span class=\"line\">        self.alien_speed = <span class=\"number\">1.0</span>            \t     <span class=\"comment\">#外星人移动速度</span></span><br><span class=\"line\">        self.fleet_drop_speed = <span class=\"number\">10</span>           <span class=\"comment\">#外星人设置</span></span><br><span class=\"line\">        self.fleet_direction = <span class=\"number\">1</span>          \t     <span class=\"comment\">#1是右移，-1是左移动</span></span><br><span class=\"line\">        self.ship_limit = <span class=\"number\">3</span>                           <span class=\"comment\">#设置生命次数</span></span><br><span class=\"line\">        self.speedup_scale = <span class=\"number\">1.1</span>               <span class=\"comment\">#游戏运行的速度</span></span><br><span class=\"line\">        self.score_scale = <span class=\"number\">1.5</span>                    <span class=\"comment\">#根据游戏速度提高外星人的分数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">initialize_dynamic_settings</span>(<span class=\"params\">self</span>):</span>                              <span class=\"comment\">#初始化在整个游戏中更改的设置</span></span><br><span class=\"line\">        self.ship_speed = <span class=\"number\">1.5</span>                                                         <span class=\"comment\">#飞船移动速度</span></span><br><span class=\"line\">        self.bullet_speed = <span class=\"number\">3.0</span>                                                     <span class=\"comment\">#子弹移动速度</span></span><br><span class=\"line\">        self.alien_speed = <span class=\"number\">1.0</span>                                                       <span class=\"comment\">#外星人移动速度</span></span><br><span class=\"line\">        self.fleet_direction = <span class=\"number\">1</span>                                                       <span class=\"comment\">#外星人移动方向</span></span><br><span class=\"line\">        self.alien_points = <span class=\"number\">50</span>                                                         <span class=\"comment\">#每个外星人的分数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">increase_speed</span>(<span class=\"params\">self</span>):</span>                                                                       <span class=\"comment\">#提高速度设置和外星人分数</span></span><br><span class=\"line\">        self.ship_speed *= self.speedup_scale</span><br><span class=\"line\">        self.bullet_speed *= self.speedup_scale</span><br><span class=\"line\">        self.alien_speed *= self.speedup_scale</span><br><span class=\"line\"></span><br><span class=\"line\">        self.alien_points = <span class=\"built_in\">int</span>(self.alien_points * self.score_scale)</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"ship-py\"><a href=\"#ship-py\" class=\"headerlink\" title=\"ship.py\"></a>ship.py</h1></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pygame</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Plane</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self,ai_game</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 初始化小飞机并设置其初始位置</span></span><br><span class=\"line\">        self.screen = ai_game.screen                                                              <span class=\"comment\">#加载图像，并获得其矩形区域</span></span><br><span class=\"line\">        self.settings = ai_game.settings                                                         <span class=\"comment\">#读取设置里面的信息</span></span><br><span class=\"line\">        self.img_plane = pygame.image.load(<span class=\"string\">&quot;images/ship.bmp&quot;</span>)          <span class=\"comment\">#加载飞船照片</span></span><br><span class=\"line\">        self.screen_rect = ai_game.screen.get_rect()                              <span class=\"comment\">#得到飞船的的矩形区域</span></span><br><span class=\"line\">        self.screen_rect = self.screen.get_rect()                                        <span class=\"comment\">#得到screen的矩形区域</span></span><br><span class=\"line\">        self.rect.midbottom = self.screen_rect.midbottom                      <span class=\"comment\"># 将飞船放到底部中央</span></span><br><span class=\"line\">        self.x = <span class=\"built_in\">float</span>(self.rect.x)                                                                        <span class=\"comment\">#存储飞机的位置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">blitme</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 在指定位置绘制小飞机</span></span><br><span class=\"line\">        self.screen.blit(self.image, self.rect)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update</span>(<span class=\"params\">self</span>):</span>                                                                                                       <span class=\"comment\">#根据运动标记更新飞船的位置</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.moving_right <span class=\"keyword\">and</span> self.rect.right &lt; self.screen_rect.right:            <span class=\"comment\">#如果飞船向右移动没有超过边界，飞船就向右移动x（x大小根据设置里面的飞船速度）</span></span><br><span class=\"line\">            self.x += self.settings.ship_speed</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.moving_left <span class=\"keyword\">and</span> self.rect.left &gt; <span class=\"number\">0</span>:                                                        <span class=\"comment\">#如果飞船向左移动没有超过边界，飞船就向左移动x </span></span><br><span class=\"line\">            self.x -= self.settings.ship_speed </span><br><span class=\"line\">            self.rect.x = self.x                                                                                             <span class=\"comment\">#更新飞船位置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">center_ship</span>(<span class=\"params\">self</span>):</span>                                                                                 <span class=\"comment\">#将飞船居中</span></span><br><span class=\"line\">        self.rect.midbottom = self.screen_rect.midbottom                       <span class=\"comment\">#定义飞船居中位置为屏幕下面底部中央</span></span><br><span class=\"line\">        self.x = <span class=\"built_in\">float</span>(self.rect.x)                                                                         <span class=\"comment\">#更新飞船位置</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"bullet-py\"><a href=\"#bullet-py\" class=\"headerlink\" title=\"bullet.py\"></a>bullet.py</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pygame</span><br><span class=\"line\"><span class=\"keyword\">from</span> pygame.sprite <span class=\"keyword\">import</span> Sprite</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bullet</span>(<span class=\"params\">Sprite</span>):</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, ai_game</span>):</span>                                                                   <span class=\"comment\">#在舰船的当前位置创建一个子弹对象</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()                                                                                   <span class=\"comment\">#继承</span></span><br><span class=\"line\">        self.screen = ai_game.screen</span><br><span class=\"line\">        self.settings = ai_game.settings</span><br><span class=\"line\">        self.color = self.settings.bullet_color</span><br><span class=\"line\">        self.rect = pygame.Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, self.settings.bullet_width,self.settings.bullet_height)              <span class=\"comment\">#创建一个子弹并放置在正确位置</span></span><br><span class=\"line\">        self.rect.midtop = ai_game.ship.rect.midtop</span><br><span class=\"line\">        self.y = <span class=\"built_in\">float</span>(self.rect.y)                                                                          <span class=\"comment\">#存储子弹的位置</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update</span>(<span class=\"params\">self</span>):</span>                                                                                            <span class=\"comment\">#更新子弹位置</span></span><br><span class=\"line\">        self.y -= self.settings.bullet_speed</span><br><span class=\"line\">        self.rect.y = self.y</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_bullet</span>(<span class=\"params\">self</span>):</span>                                                                                   <span class=\"comment\">#在屏幕上绘制子弹</span></span><br><span class=\"line\">        pygame.draw.rect(self.screen, self.color, self.rect)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"game-stats-py\"><a href=\"#game-stats-py\" class=\"headerlink\" title=\"game_stats.py\"></a>game_stats.py</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GameStats</span>:</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Track statistics for Alien Invasion.&quot;&quot;&quot;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, ai_game</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Initialize statistics.&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.settings = ai_game.settings</span><br><span class=\"line\">        self.reset_stats()</span><br><span class=\"line\">        self.game_active = <span class=\"literal\">False</span>                                           <span class=\"comment\">#自动开启游戏</span></span><br><span class=\"line\">        self.high_score = <span class=\"number\">0</span>\t\t\t\t\t\t       <span class=\"comment\">#高分永远不要重置。</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">reset_stats</span>(<span class=\"params\">self</span>):</span>\t\t\t\t\t\t    <span class=\"comment\">#初始化游戏数据</span></span><br><span class=\"line\">        self.ships_left = self.settings.ship_limit</span><br><span class=\"line\">        self.score = <span class=\"number\">0</span></span><br><span class=\"line\">        self.level = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"scoreboard-py\"><a href=\"#scoreboard-py\" class=\"headerlink\" title=\"scoreboard.py\"></a>scoreboard.py</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pygame.font</span><br><span class=\"line\"><span class=\"keyword\">from</span> pygame.sprite <span class=\"keyword\">import</span> Group</span><br><span class=\"line\"><span class=\"keyword\">from</span> ship <span class=\"keyword\">import</span> Ship</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Scoreboard</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, ai_game</span>):</span>                       <span class=\"comment\">#初始化得分属性</span></span><br><span class=\"line\">        self.ai_game = ai_game</span><br><span class=\"line\">        self.screen = ai_game.screen</span><br><span class=\"line\">        self.screen_rect = self.screen.get_rect()</span><br><span class=\"line\">        self.settings = ai_game.settings</span><br><span class=\"line\">        </span><br><span class=\"line\">        self.stats = ai_game.stats                                      <span class=\"comment\">#得分信息的字体设置</span></span><br><span class=\"line\">        self.text_color = (<span class=\"number\">30</span>, <span class=\"number\">30</span>, <span class=\"number\">30</span>)</span><br><span class=\"line\">        self.font = pygame.font.SysFont(<span class=\"literal\">None</span>, <span class=\"number\">48</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.prep_score()                                                       <span class=\"comment\">#初始乐谱图像</span></span><br><span class=\"line\">        self.prep_high_score()</span><br><span class=\"line\">        self.prep_level()</span><br><span class=\"line\">        self.prep_ships()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">prep_score</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Turn the score into a rendered image.&quot;&quot;&quot;</span></span><br><span class=\"line\">        rounded_score = <span class=\"built_in\">round</span>(self.stats.score, -<span class=\"number\">1</span>)</span><br><span class=\"line\">        score_str = <span class=\"string\">&quot;&#123;:,&#125;&quot;</span>.<span class=\"built_in\">format</span>(rounded_score)</span><br><span class=\"line\">        self.score_image = self.font.render(score_str, <span class=\"literal\">True</span>,</span><br><span class=\"line\">                self.text_color, self.settings.bg_color)</span><br><span class=\"line\">        </span><br><span class=\"line\">        self.score_rect = self.score_image.get_rect()               <span class=\"comment\">#在屏幕右上方显示分数</span></span><br><span class=\"line\">        self.score_rect.right = self.screen_rect.right - <span class=\"number\">20</span></span><br><span class=\"line\">        self.score_rect.top = <span class=\"number\">20</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">prep_high_score</span>(<span class=\"params\">self</span>):</span>                                                     <span class=\"comment\">#将高分转换为图像</span></span><br><span class=\"line\">        high_score = <span class=\"built_in\">round</span>(self.stats.high_score, -<span class=\"number\">1</span>)</span><br><span class=\"line\">        high_score_str = <span class=\"string\">&quot;&#123;:,&#125;&quot;</span>.<span class=\"built_in\">format</span>(high_score)</span><br><span class=\"line\">        self.high_score_image = self.font.render(high_score_str, <span class=\"literal\">True</span>,</span><br><span class=\"line\">                self.text_color, self.settings.bg_color)</span><br><span class=\"line\">            </span><br><span class=\"line\">        self.high_score_rect = self.high_score_image.get_rect()          <span class=\"comment\">#将高分居中显示在屏幕顶部</span></span><br><span class=\"line\">        self.high_score_rect.centerx = self.screen_rect.centerx</span><br><span class=\"line\">        self.high_score_rect.top = self.score_rect.top</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">prep_level</span>(<span class=\"params\">self</span>):</span>                                                                      <span class=\"comment\">#将等级转换为渲染的图像。</span></span><br><span class=\"line\">        level_str = <span class=\"built_in\">str</span>(self.stats.level)</span><br><span class=\"line\">        self.level_image = self.font.render(level_str, <span class=\"literal\">True</span>,</span><br><span class=\"line\">                self.text_color, self.settings.bg_color)</span><br><span class=\"line\">    </span><br><span class=\"line\">        self.level_rect = self.level_image.get_rect()                 <span class=\"comment\">#将级别定位在分数下方</span></span><br><span class=\"line\">        self.level_rect.right = self.score_rect.right</span><br><span class=\"line\">        self.level_rect.top = self.score_rect.bottom + <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">prep_ships</span>(<span class=\"params\">self</span>):</span>                                                                 <span class=\"comment\">#显示生命值</span></span><br><span class=\"line\">        self.ships = Group()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> ship_number <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.stats.ships_left):</span><br><span class=\"line\">            ship = Ship(self.ai_game)</span><br><span class=\"line\">            ship.rect.x = <span class=\"number\">10</span> + ship_number * ship.rect.width</span><br><span class=\"line\">            ship.rect.y = <span class=\"number\">10</span></span><br><span class=\"line\">            self.ships.add(ship)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_high_score</span>(<span class=\"params\">self</span>):</span>                                               <span class=\"comment\">#检查是否有新高分</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.stats.score &gt; self.stats.high_score:</span><br><span class=\"line\">            self.stats.high_score = self.stats.score</span><br><span class=\"line\">            self.prep_high_score()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show_score</span>(<span class=\"params\">self</span>):</span>                                                            <span class=\"comment\">#在屏幕上面绘制分数和其它信息</span></span><br><span class=\"line\">        self.screen.blit(self.score_image, self.score_rect)</span><br><span class=\"line\">        self.screen.blit(self.high_score_image, self.high_score_rect)</span><br><span class=\"line\">        self.screen.blit(self.level_image, self.level_rect)</span><br><span class=\"line\">        self.ships.draw(self.screen)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"botto-py\"><a href=\"#botto-py\" class=\"headerlink\" title=\"botto.py\"></a>botto.py</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pygame.font</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Button</span>:</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, ai_game, msg</span>):</span>                 <span class=\"comment\">#初始化</span></span><br><span class=\"line\">        self.screen = ai_game.screen</span><br><span class=\"line\">        self.screen_rect = self.screen.get_rect()</span><br><span class=\"line\">        </span><br><span class=\"line\">        self.width, self.height = <span class=\"number\">200</span>, <span class=\"number\">50</span>               <span class=\"comment\">#设置按钮的尺寸和属性</span></span><br><span class=\"line\">        self.button_color = (<span class=\"number\">0</span>, <span class=\"number\">255</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">        self.text_color = (<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>)</span><br><span class=\"line\">        self.font = pygame.font.SysFont(<span class=\"literal\">None</span>, <span class=\"number\">48</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        self.rect = pygame.Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, self.width, self.height)    <span class=\"comment\">#放置play图标</span></span><br><span class=\"line\">        self.rect.center = self.screen_rect.center</span><br><span class=\"line\">        </span><br><span class=\"line\">        self._prep_msg(msg)                                  <span class=\"comment\">#该按钮仅需准备一次</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_prep_msg</span>(<span class=\"params\">self, msg</span>):</span>                              <span class=\"comment\">#将其转换为渲染的图像，然后在按钮上居中显示文本。</span></span><br><span class=\"line\">        self.msg_image = self.font.render(msg, <span class=\"literal\">True</span>, self.text_color,</span><br><span class=\"line\">                self.button_color)</span><br><span class=\"line\">        self.msg_image_rect = self.msg_image.get_rect()</span><br><span class=\"line\">        self.msg_image_rect.center = self.rect.center</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_button</span>(<span class=\"params\">self</span>):</span>                                     <span class=\"comment\">#在屏幕上面绘制</span></span><br><span class=\"line\">        self.screen.fill(self.button_color, self.rect)</span><br><span class=\"line\">        self.screen.blit(self.msg_image, self.msg_image_rect)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"重构alien-invasion-py\"><a href=\"#重构alien-invasion-py\" class=\"headerlink\" title=\"重构alien_invasion.py\"></a>重构alien_invasion.py</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> pygame</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> settings <span class=\"keyword\">import</span> Settings</span><br><span class=\"line\"><span class=\"keyword\">from</span> game_stats <span class=\"keyword\">import</span> GameStats</span><br><span class=\"line\"><span class=\"keyword\">from</span> scoreboard <span class=\"keyword\">import</span> Scoreboard</span><br><span class=\"line\"><span class=\"keyword\">from</span> button <span class=\"keyword\">import</span> Button</span><br><span class=\"line\"><span class=\"keyword\">from</span> ship <span class=\"keyword\">import</span> Ship</span><br><span class=\"line\"><span class=\"keyword\">from</span> bullet <span class=\"keyword\">import</span> Bullet</span><br><span class=\"line\"><span class=\"keyword\">from</span> alien <span class=\"keyword\">import</span> Alien</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;管理游戏资源和行为的类&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AlienInvasion</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;初始化游戏并创建游戏资源&quot;&quot;&quot;</span></span><br><span class=\"line\">        pygame.init()</span><br><span class=\"line\">        self.settings = Settings()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.screen = pygame.display.set_mode((<span class=\"number\">0</span>, <span class=\"number\">0</span>), pygame.FULLSCREEN)</span><br><span class=\"line\">        self.settings.screen_width = self.screen.get_rect().width</span><br><span class=\"line\">        self.settings.screen_height = self.screen.get_rect().height</span><br><span class=\"line\">        pygame.display.set_caption(<span class=\"string\">&quot;Alien Invasion&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;创建一个实例来存储游戏统计信息，并创建一个记分板。&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.stats = GameStats(self)</span><br><span class=\"line\">        self.sb = Scoreboard(self)</span><br><span class=\"line\"></span><br><span class=\"line\">        self.ship = Ship(self)</span><br><span class=\"line\">        self.bullets = pygame.sprite.Group()</span><br><span class=\"line\">        self.aliens = pygame.sprite.Group()</span><br><span class=\"line\"></span><br><span class=\"line\">        self._create_fleet()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;设置play&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.play_button = Button(self, <span class=\"string\">&quot;Play&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;开启游戏并循环&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_game</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            self._check_events()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.stats.game_active:</span><br><span class=\"line\">                self.ship.update()</span><br><span class=\"line\">                self._update_bullets()</span><br><span class=\"line\">                self._update_aliens()</span><br><span class=\"line\"></span><br><span class=\"line\">            self._update_screen()</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;响应按键和鼠标事件&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_check_events</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> event <span class=\"keyword\">in</span> pygame.event.get():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> event.<span class=\"built_in\">type</span> == pygame.QUIT:</span><br><span class=\"line\">                sys.exit()</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> event.<span class=\"built_in\">type</span> == pygame.KEYDOWN:</span><br><span class=\"line\">                self._check_keydown_events(event)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> event.<span class=\"built_in\">type</span> == pygame.KEYUP:</span><br><span class=\"line\">                self._check_keyup_events(event)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> event.<span class=\"built_in\">type</span> == pygame.MOUSEBUTTONDOWN:</span><br><span class=\"line\">                mouse_pos = pygame.mouse.get_pos()</span><br><span class=\"line\">                self._check_play_button(mouse_pos)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;当玩家单击播放时开始新游戏&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_check_play_button</span>(<span class=\"params\">self, mouse_pos</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Start a new game when the player clicks Play.&quot;&quot;&quot;</span></span><br><span class=\"line\">        button_clicked = self.play_button.rect.collidepoint(mouse_pos)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> button_clicked <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> self.stats.game_active:</span><br><span class=\"line\">            <span class=\"comment\">#重置游戏设置</span></span><br><span class=\"line\">            self.settings.initialize_dynamic_settings()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#重置游戏统计信息</span></span><br><span class=\"line\">            self.stats.reset_stats()</span><br><span class=\"line\">            self.stats.game_active = <span class=\"literal\">True</span></span><br><span class=\"line\">            self.sb.prep_score()</span><br><span class=\"line\">            self.sb.prep_level()</span><br><span class=\"line\">            self.sb.prep_ships()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#摆脱任何剩余的外星人和子弹</span></span><br><span class=\"line\">            self.aliens.empty()</span><br><span class=\"line\">            self.bullets.empty()</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">#建立一个新的舰队并集中舰船</span></span><br><span class=\"line\">            self._create_fleet()</span><br><span class=\"line\">            self.ship.center_ship()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#隐藏鼠标光标</span></span><br><span class=\"line\">            pygame.mouse.set_visible(<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;响应按键&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_check_keydown_events</span>(<span class=\"params\">self, event</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> event.key == pygame.K_RIGHT:</span><br><span class=\"line\">            self.ship.moving_right = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> event.key == pygame.K_LEFT:</span><br><span class=\"line\">            self.ship.moving_left = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> event.key == pygame.K_q:</span><br><span class=\"line\">            sys.exit()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> event.key == pygame.K_SPACE:</span><br><span class=\"line\">            self._fire_bullet()</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;释放按键&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_check_keyup_events</span>(<span class=\"params\">self, event</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> event.key == pygame.K_RIGHT:</span><br><span class=\"line\">            self.ship.moving_right = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> event.key == pygame.K_LEFT:</span><br><span class=\"line\">            self.ship.moving_left = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;创建一个新的项目符号并将其添加到项目符号组&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_fire_bullet</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(self.bullets) &lt; self.settings.bullets_allowed:</span><br><span class=\"line\">            new_bullet = Bullet(self)</span><br><span class=\"line\">            self.bullets.add(new_bullet)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;更新项目符号的位置并摆脱旧项目符号&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_update_bullets</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 更新子弹位置</span></span><br><span class=\"line\">        self.bullets.update()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 消除子弹</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> bullet <span class=\"keyword\">in</span> self.bullets.copy():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> bullet.rect.bottom &lt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                 self.bullets.remove(bullet)</span><br><span class=\"line\"></span><br><span class=\"line\">        self._check_bullet_alien_collisions()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;子弹与外星人的碰撞&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_check_bullet_alien_collisions</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 消除被打到的子弹和外星人</span></span><br><span class=\"line\">        collisions = pygame.sprite.groupcollide(</span><br><span class=\"line\">                self.bullets, self.aliens, <span class=\"literal\">True</span>, <span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> collisions:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> aliens <span class=\"keyword\">in</span> collisions.values():</span><br><span class=\"line\">                self.stats.score += self.settings.alien_points * <span class=\"built_in\">len</span>(aliens)</span><br><span class=\"line\">            self.sb.prep_score()</span><br><span class=\"line\">            self.sb.check_high_score()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> self.aliens:</span><br><span class=\"line\">            <span class=\"comment\"># 销毁现有子弹并建立新的舰队</span></span><br><span class=\"line\">            self.bullets.empty()</span><br><span class=\"line\">            self._create_fleet()</span><br><span class=\"line\">            self.settings.increase_speed()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># Increase level.</span></span><br><span class=\"line\">            self.stats.level += <span class=\"number\">1</span></span><br><span class=\"line\">            self.sb.prep_level()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;检查舰队是否处于边缘，然后更新舰队中所有外星人的位置。&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_update_aliens</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        self._check_fleet_edges()</span><br><span class=\"line\">        self.aliens.update()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 寻找与外星人的碰撞</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> pygame.sprite.spritecollideany(self.ship, self.aliens):</span><br><span class=\"line\">            self._ship_hit()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 寻找外星人撞到屏幕底部</span></span><br><span class=\"line\">        self._check_aliens_bottom()</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;检查是否有任何外星人到达屏幕底部&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_check_aliens_bottom</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        screen_rect = self.screen.get_rect()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> self.aliens.sprites():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> alien.rect.bottom &gt;= screen_rect.bottom:</span><br><span class=\"line\">                <span class=\"comment\"># Treat this the same as if the ship got hit.</span></span><br><span class=\"line\">                self._ship_hit()</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;被外星人击中&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_ship_hit</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.stats.ships_left &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 减少生命，并更新记分板.</span></span><br><span class=\"line\">            self.stats.ships_left -= <span class=\"number\">1</span></span><br><span class=\"line\">            self.sb.prep_ships()</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 摆脱任何剩余的外星人和子弹.</span></span><br><span class=\"line\">            self.aliens.empty()</span><br><span class=\"line\">            self.bullets.empty()</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 建立一个新的舰队并集中舰船.</span></span><br><span class=\"line\">            self._create_fleet()</span><br><span class=\"line\">            self.ship.center_ship()</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 暂停</span></span><br><span class=\"line\">            sleep(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            self.stats.game_active = <span class=\"literal\">False</span></span><br><span class=\"line\">            pygame.mouse.set_visible(<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;建立外星人的舰队&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_create_fleet</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 创建一个外星人并连续查找外星人的数量。</span></span><br><span class=\"line\">        <span class=\"comment\"># 每个外星人之间的间距等于一个外星人的宽度。</span></span><br><span class=\"line\">        alien = Alien(self)</span><br><span class=\"line\">        alien_width, alien_height = alien.rect.size</span><br><span class=\"line\">        available_space_x = self.settings.screen_width - (<span class=\"number\">2</span> * alien_width)</span><br><span class=\"line\">        number_aliens_x = available_space_x // (<span class=\"number\">2</span> * alien_width)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 确定适合屏幕的外星人行数</span></span><br><span class=\"line\">        ship_height = self.ship.rect.height</span><br><span class=\"line\">        available_space_y = (self.settings.screen_height -</span><br><span class=\"line\">                                (<span class=\"number\">3</span> * alien_height) - ship_height)</span><br><span class=\"line\">        number_rows = available_space_y // (<span class=\"number\">2</span> * alien_height)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 建立完整的外星人舰队.</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> row_number <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(number_rows):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> alien_number <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(number_aliens_x):</span><br><span class=\"line\">                self._create_alien(alien_number, row_number)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;创建外星人并将其放置在行中&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_create_alien</span>(<span class=\"params\">self, alien_number, row_number</span>):</span></span><br><span class=\"line\">        alien = Alien(self)</span><br><span class=\"line\">        alien_width, alien_height = alien.rect.size</span><br><span class=\"line\">        alien.x = alien_width + <span class=\"number\">2</span> * alien_width * alien_number</span><br><span class=\"line\">        alien.rect.x = alien.x</span><br><span class=\"line\">        alien.rect.y = alien.rect.height + <span class=\"number\">2</span> * alien.rect.height * row_number</span><br><span class=\"line\">        self.aliens.add(alien)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;如果有任何外星人到达边缘，请做出适当的反应&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_check_fleet_edges</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> self.aliens.sprites():</span><br><span class=\"line\">            <span class=\"keyword\">if</span> alien.check_edges():</span><br><span class=\"line\">                self._change_fleet_direction()</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_change_fleet_direction</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;放下整个舰队并更改舰队的方向.&quot;&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> self.aliens.sprites():</span><br><span class=\"line\">            alien.rect.y += self.settings.fleet_drop_speed</span><br><span class=\"line\">        self.settings.fleet_direction *= -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;更新屏幕上的图像，然后切换到新屏幕&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_update_screen</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;Update images on the screen, and flip to the new screen.&quot;&quot;&quot;</span></span><br><span class=\"line\">        self.screen.fill(self.settings.bg_color)</span><br><span class=\"line\">        self.ship.blitme()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> bullet <span class=\"keyword\">in</span> self.bullets.sprites():</span><br><span class=\"line\">            bullet.draw_bullet()</span><br><span class=\"line\">        self.aliens.draw(self.screen)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 绘制分数信息.</span></span><br><span class=\"line\">        self.sb.show_score()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#如果游戏处于非活动状态，请绘制播放按钮.</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> self.stats.game_active:</span><br><span class=\"line\">            self.play_button.draw_button()</span><br><span class=\"line\"></span><br><span class=\"line\">        pygame.display.flip()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 运行游戏</span></span><br><span class=\"line\">    ai = AlienInvasion()</span><br><span class=\"line\">    ai.run_game()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>在设计时是需要不断对每个模块进行重构，重构的目的一是为了使代码看起来更简洁，而是优化代码，减少不必要的代码。除此之外，还需要对项目进行不断检查，检查是否有bug，对bug要进行即使修改。还有，python虽然使用起来非常方便，但是需要记住的函数却很多，要熟练的使用，必须要能够熟悉相关的第三方库，这样才能做到游刃有余。</p>\n","text":" 了解，学习一个第三方模块，最好是去官网学习，因为官方有第一手资料，而在其他人手里则是第二手，使用要学好还是得去官网。在这里我就直接拿实例讲pygame 安装pygame (windows)1python -m pip install -U pygame --user 可能的报错...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"19 mins."},"categories":[{"name":"心得","slug":"心得","count":2,"path":"api/categories/心得.json"}],"tags":[{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85pygame-windows\"><span class=\"toc-text\">安装pygame (windows)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">设计思路</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#alien-invasion-py\"><span class=\"toc-text\">alien_invasion.py</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#settings-py\"><span class=\"toc-text\">settings.py</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ship-py\"><span class=\"toc-text\">ship.py</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#bullet-py\"><span class=\"toc-text\">bullet.py</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#game-stats-py\"><span class=\"toc-text\">game_stats.py</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#scoreboard-py\"><span class=\"toc-text\">scoreboard.py</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#botto-py\"><span class=\"toc-text\">botto.py</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%87%8D%E6%9E%84alien-invasion-py\"><span class=\"toc-text\">重构alien_invasion.py</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CISCN复现","uid":"dde0577c288faf648c0d6f90bbb39dc6","slug":"CISCN复现","date":"2021-05-18T11:25:16.000Z","updated":"2021-05-23T05:52:38.991Z","comments":true,"path":"api/articles/CISCN复现.json","keywords":null,"cover":"https://i.loli.net/2021/05/18/oDJvw6ieQjbXmrq.jpg","text":"前言初次参加这种大型比赛，给我的感觉就是题目出的挺不错（一题都没做出来），但是这个比赛形式着实令人不解。不仅如此，在写完选择题后系统崩溃也是我没想得到（虽然没有停滞很久，但是感觉很意外，毕竟是国赛）。 MISC隔空传话附件是一个txt文件，里面全是十六进制码，根据题目搜索发现是P...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"MISC","slug":"MISC","count":4,"path":"api/categories/MISC.json"}],"tags":[{"name":"wp","slug":"wp","count":3,"path":"api/tags/wp.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"蓝帽杯MISC","uid":"1521d5bfeaaa79eb316ce7916671f885","slug":"蓝帽杯MISC","date":"2021-05-04T02:34:09.000Z","updated":"2021-05-06T05:10:01.819Z","comments":true,"path":"api/articles/蓝帽杯MISC.json","keywords":null,"cover":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","text":"冰墩墩拿到附件拖进虚拟机中使用binwalk查看 发现里面存在rar压缩包，使用foremost进行分离 发现音频和提示 将音频放进010，在结尾发现cipher 将对应的十六进制码复制下来，搜索以0~F编码的加密方式，发现是url编码。 对十六进制码进行处理 解码后发现是一堆表...","link":"","photos":[],"count_time":{"symbolsCount":389,"symbolsTime":"1 mins."},"categories":[{"name":"MISC","slug":"MISC","count":4,"path":"api/categories/MISC.json"}],"tags":[{"name":"write up","slug":"write-up","count":2,"path":"api/tags/write-up.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}