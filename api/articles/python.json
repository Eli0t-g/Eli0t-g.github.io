{"title":"python学习心得","uid":"87c5f340a99857dbb6ed12c46a0d0a8b","slug":"python","date":"2021-02-16T11:15:39.000Z","updated":"2021-04-19T11:12:36.292Z","comments":true,"path":"api/articles/python.json","keywords":null,"cover":null,"content":"<blockquote>\n<p>寒假学习python是我没想到的，但是的确学到了不少知识。在这里分享一下我所学到的与我总结一些的关于python内置函数的知识</p>\n</blockquote>\n<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><h2 id=\"与字符相关的函数\"><a href=\"#与字符相关的函数\" class=\"headerlink\" title=\"与字符相关的函数\"></a>与字符相关的函数</h2><p>isinstance() </p>\n<p>作用：判断一个对象是否是一个已知的类型，类似 type()。</p>\n<p>用法：isinstance(object, classinfo)</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;a = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">isinstance</span> (a,<span class=\"built_in\">int</span>)</span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">isinstance</span> (a,<span class=\"built_in\">str</span>)</span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">isinstance</span> (a,(<span class=\"built_in\">str</span>,<span class=\"built_in\">int</span>,<span class=\"built_in\">list</span>))    <span class=\"comment\"># 是元组中的一个返回 True</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>divmod()  </p>\n<p>作用：输入除数和余数，返回商和余数  </p>\n<p>用法：divmod(number,number)</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">divmod</span>(<span class=\"number\">7</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\">(<span class=\"number\">2</span>, <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>ord()  </p>\n<p>作用：返回指定对象的ASCII码对应的十进制  </p>\n<p>用法：ord(object)</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;<span class=\"built_in\">ord</span>(<span class=\"string\">&#x27;a&#x27;</span>) </span><br><span class=\"line\"><span class=\"number\">97</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"与字符串相关的函数\"><a href=\"#与字符串相关的函数\" class=\"headerlink\" title=\"与字符串相关的函数\"></a>与字符串相关的函数</h2><p>eval()</p>\n<p>作用：用来执行一个字符串表达式，并返回表达式的值</p>\n<p>用法：eval(string)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;<span class=\"built_in\">eval</span>(<span class=\"string\">&#x27;5+3&#x27;</span>)</span><br><span class=\"line\"><span class=\"number\">8</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>format() 函数</p>\n<p>作用：格式化字符串  </p>\n<p>用法：str.format()</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;print(<span class=\"string\">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&quot;hello&quot;</span>, <span class=\"string\">&quot;world&quot;</span>)<span class=\"string\">&quot;)   # 不设置指定位置</span></span><br><span class=\"line\"><span class=\"string\">&#x27;hello world&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&gt;&gt;&gt;print(&quot;</span>&#123;<span class=\"number\">1</span>&#125; &#123;<span class=\"number\">0</span>&#125; &#123;<span class=\"number\">1</span>&#125;<span class=\"string\">&quot;.format(&quot;</span>hello<span class=\"string\">&quot;, &quot;</span>world<span class=\"string\">&quot;)&quot;</span>)  <span class=\"comment\"># 设置指定位置</span></span><br><span class=\"line\"><span class=\"string\">&#x27;world hello world&#x27;</span>  </span><br><span class=\"line\">&gt;&gt;&gt;print(<span class=\"string\">&#x27;Hello &#123;w&#125;&#x27;</span>.<span class=\"built_in\">format</span>(w=<span class=\"string\">&#x27;World&#x27;</span>)) <span class=\"comment\"># 指定参数</span></span><br><span class=\"line\">Hello World</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"与列表相关的函数\"><a href=\"#与列表相关的函数\" class=\"headerlink\" title=\"与列表相关的函数\"></a>与列表相关的函数</h2><p>enumerate()  函数</p>\n<p>作用：遍历的数据对象组合为一个索引序列，同时列出数据和数据下标  </p>\n<p>用法：enumerate(sequence, [start=0])</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> x,y <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(a):</span><br><span class=\"line\">    print(x,y)</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<p>0 a</p>\n<p>1 b</p>\n<p>2 c</p>\n<hr>\n<p>sort() 函数</p>\n<p>作用：列表进行排序，如果指定参数，则使用比较函数指定的比较函数</p>\n<p>用法：list.sort(key=None, reverse=False)</p>\n<ul>\n<li>key：主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。</li>\n<li>reverse – 排序规则，<strong>reverse = True</strong> 降序， <strong>reverse = False</strong> 升序（默认）</li>\n</ul>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">takeSecond</span>(<span class=\"params\">elem</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> elem[<span class=\"number\">1</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 列表</span></span><br><span class=\"line\">random = [(<span class=\"number\">2</span>, <span class=\"number\">2</span>), (<span class=\"number\">3</span>, <span class=\"number\">4</span>), (<span class=\"number\">4</span>, <span class=\"number\">1</span>), (<span class=\"number\">1</span>, <span class=\"number\">3</span>)]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 指定第二个元素排序</span></span><br><span class=\"line\">random.sort(key=takeSecond)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 输出类别</span></span><br><span class=\"line\">print(<span class=\"string\">&#x27;排序列表：&#x27;</span>)</span><br><span class=\"line\">print(random)</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">排序列表：</span><br><span class=\"line\">[(4, 1), (2, 2), (1, 3), (3, 4)]</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列表</span></span><br><span class=\"line\">vowels = [<span class=\"string\">&#x27;e&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;u&#x27;</span>, <span class=\"string\">&#x27;o&#x27;</span>, <span class=\"string\">&#x27;i&#x27;</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 降序</span></span><br><span class=\"line\">vowels.sort(reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 输出结果</span></span><br><span class=\"line\">print(<span class=\"string\">&#x27;降序输出:&#x27;</span>)</span><br><span class=\"line\">print( vowels )</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">降序输出:</span><br><span class=\"line\">[&#39;u&#39;, &#39;o&#39;, &#39;i&#39;, &#39;e&#39;, &#39;a&#39;]</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>zip()</p>\n<p>作用：用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。</p>\n<p>用法：zip(iterable, …)</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>c = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>zipped = <span class=\"built_in\">zip</span>(a,b)     <span class=\"comment\"># 打包为元组的列表</span></span><br><span class=\"line\">[(<span class=\"number\">1</span>, <span class=\"number\">4</span>), (<span class=\"number\">2</span>, <span class=\"number\">5</span>), (<span class=\"number\">3</span>, <span class=\"number\">6</span>)]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">zip</span>(a,c)              <span class=\"comment\"># 元素个数与最短的列表一致</span></span><br><span class=\"line\">[(<span class=\"number\">1</span>, <span class=\"number\">4</span>), (<span class=\"number\">2</span>, <span class=\"number\">5</span>), (<span class=\"number\">3</span>, <span class=\"number\">6</span>)]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">zip</span>(*zipped)          <span class=\"comment\"># 与 zip 相反，*zipped 可理解为解压，返回二维矩阵式</span></span><br><span class=\"line\">[(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)]</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>all()</p>\n<p>作用：用于判断给定的可迭代参数 iterable 中的所有元素是否都为 TRUE，如果是返回 True，否则返回 False。</p>\n<p>用法：all(iterable)</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">all</span>([<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>])  <span class=\"comment\"># 列表list，元素都不为空或0</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">all</span>([<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>])   <span class=\"comment\"># 列表list，存在一个为空的元素</span></span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">all</span>([<span class=\"number\">0</span>, <span class=\"number\">1</span>，<span class=\"number\">2</span>, <span class=\"number\">3</span>])          <span class=\"comment\"># 列表list，存在一个为0的元素</span></span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">all</span>((<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>))  <span class=\"comment\"># 元组tuple，元素都不为空或0</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">all</span>((<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>))   <span class=\"comment\"># 元组tuple，存在一个为空的元素</span></span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">all</span>((<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>))          <span class=\"comment\"># 元组tuple，存在一个为0的元素</span></span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">all</span>([])             <span class=\"comment\"># 空列表</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">all</span>(())             <span class=\"comment\"># 空元组</span></span><br><span class=\"line\"><span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>sort()和sorted()</p>\n<p>作用：对所有可迭代的对象进行排序操作。</p>\n<p>用法：sorted(iterable, cmp=None, key=None, reverse=False)(sort也是一样)</p>\n<p>区别：sort会改变原对象的序列而sorted不会</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;a = [<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b = <span class=\"built_in\">sorted</span>(a)       <span class=\"comment\"># 保留原列表</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a </span><br><span class=\"line\">[<span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">6</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>L=[(<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"number\">2</span>),(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"number\">1</span>),(<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"number\">3</span>),(<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">sorted</span>(L, cmp=<span class=\"keyword\">lambda</span> x,y:cmp(x[<span class=\"number\">1</span>],y[<span class=\"number\">1</span>]))   <span class=\"comment\"># 利用cmp函数</span></span><br><span class=\"line\">[(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">1</span>), (<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"number\">2</span>), (<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"number\">3</span>), (<span class=\"string\">&#x27;d&#x27;</span>, <span class=\"number\">4</span>)]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">sorted</span>(L, key=<span class=\"keyword\">lambda</span> x:x[<span class=\"number\">1</span>])               <span class=\"comment\"># 利用key</span></span><br><span class=\"line\">[(<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"number\">1</span>), (<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"number\">2</span>), (<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"number\">3</span>), (<span class=\"string\">&#x27;d&#x27;</span>, <span class=\"number\">4</span>)]</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>students = [(<span class=\"string\">&#x27;john&#x27;</span>, <span class=\"string\">&#x27;A&#x27;</span>, <span class=\"number\">15</span>), (<span class=\"string\">&#x27;jane&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">12</span>), (<span class=\"string\">&#x27;dave&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">10</span>)]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">sorted</span>(students, key=<span class=\"keyword\">lambda</span> s: s[<span class=\"number\">2</span>])            <span class=\"comment\"># 按年龄排序</span></span><br><span class=\"line\">[(<span class=\"string\">&#x27;dave&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">10</span>), (<span class=\"string\">&#x27;jane&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">12</span>), (<span class=\"string\">&#x27;john&#x27;</span>, <span class=\"string\">&#x27;A&#x27;</span>, <span class=\"number\">15</span>)]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"built_in\">sorted</span>(students, key=<span class=\"keyword\">lambda</span> s: s[<span class=\"number\">2</span>], reverse=<span class=\"literal\">True</span>)       <span class=\"comment\"># 按降序</span></span><br><span class=\"line\">[(<span class=\"string\">&#x27;john&#x27;</span>, <span class=\"string\">&#x27;A&#x27;</span>, <span class=\"number\">15</span>), (<span class=\"string\">&#x27;jane&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">12</span>), (<span class=\"string\">&#x27;dave&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>, <span class=\"number\">10</span>)]</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>set()</p>\n<p>作用：删除列表里面重复的元素，（不会改变原有序列）</p>\n<p>用法：set(iterable)</p>\n<p>实例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list1=[<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;zhang&#x27;</span>,<span class=\"string\">&#x27;kang&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>]</span><br><span class=\"line\">list2=[<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>]</span><br><span class=\"line\">s1=<span class=\"built_in\">set</span>(list1)</span><br><span class=\"line\">s2=<span class=\"built_in\">set</span>(list2)</span><br><span class=\"line\">print(s1)</span><br><span class=\"line\">print(s2)</span><br><span class=\"line\">print(list1)</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;kang&#x27;</span>, <span class=\"string\">&#x27;zhang&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>&#125;</span><br><span class=\"line\">[<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;zhang&#x27;</span>, <span class=\"string\">&#x27;kang&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>]</span><br></pre></td></tr></table></figure>\n\n<hr>\n","text":" 寒假学习python是我没想到的，但是的确学到了不少知识。在这里分享一下我所学到的与我总结一些的关于python内置函数的知识 函数与字符相关的函数isinstance() 作用：判断一个对象是否是一个已知的类型，类似 type()。 用法：isinstance(object,...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"基础知识","slug":"基础知识","count":4,"path":"api/categories/基础知识.json"}],"tags":[{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%9B%B8%E5%85%B3%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">与字符相关的函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">与字符串相关的函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8E%E5%88%97%E8%A1%A8%E7%9B%B8%E5%85%B3%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">与列表相关的函数</span></a></li></ol></li></ol>","author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SSH连接失败及hexo命令失效","uid":"9f625a615c8ebfb571548bd146557e6b","slug":"SSH连接失败及hexo命令失效","date":"2021-03-15T13:29:03.000Z","updated":"2021-04-20T09:36:36.471Z","comments":true,"path":"api/articles/SSH连接失败及hexo命令失效.json","keywords":null,"cover":null,"text":" 闲的无聊就整了一下博客，结果出大问题了，之前的备份又删了，所以不得不重建，这次重建花了整整一天，虽说浪费时间但是还是有所收获 搭建博客视频网上一大堆，这里就不多讲了，这里就讲一些错误和如何解决 ssh: connect to host github.com port 22: C...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"问题","slug":"问题","count":2,"path":"api/categories/问题.json"}],"tags":[{"name":"博客","slug":"博客","count":2,"path":"api/tags/博客.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"bugku","uid":"ffd87d4d875bb16286fecb1469508ba7","slug":"bugku","date":"2021-02-02T13:24:11.000Z","updated":"2021-04-19T11:09:16.721Z","comments":true,"path":"api/articles/bugku.json","keywords":null,"cover":[],"text":"BUGKU misc部分1 这是一张单纯的图片先看了一下属性，发现并没有什么有用的信息，打开就是上面那张图，没有上面异样， 直接丢winhex，拖至最底，发现是unicode加密 发现是unicode加密，直接解码成ASCII，得到flag 2 隐写看到题目就知道是图片隐写，对图...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"MISC","slug":"MISC","count":2,"path":"api/categories/MISC.json"}],"tags":[{"name":"wp","slug":"wp","count":1,"path":"api/tags/wp.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}