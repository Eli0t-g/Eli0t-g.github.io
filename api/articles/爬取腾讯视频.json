{"title":"爬取腾讯视频","uid":"5069ff540e4994664021502c262e84cf","slug":"爬取腾讯视频","date":"2022-01-24T14:06:18.000Z","updated":"2022-01-25T03:38:30.535Z","comments":true,"path":"api/articles/爬取腾讯视频.json","keywords":null,"cover":[],"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近在腾讯视频看《开端》，想着把视频搞下来顺便学一下爬虫，网上看了一些资料，最后也爬取成功了。以下是我爬取腾讯视频视频的过程，这里拿《开端》举例。</p>\n<h1 id=\"创建IP池\"><a href=\"#创建IP池\" class=\"headerlink\" title=\"创建IP池\"></a>创建IP池</h1><p>为了防止IP被ban先建立好IP池</p>\n<p><img src=\"https://s2.loli.net/2022/01/24/CdREAyh4KIjnf2x.png\" alt=\"image.png\"></p>\n<h1 id=\"模拟登陆\"><a href=\"#模拟登陆\" class=\"headerlink\" title=\"模拟登陆\"></a>模拟登陆</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在一些视频网站上看电影可能不需要登陆直接可以看，但是腾讯视频看VIP视频一定要登陆，所以需要先进行模拟登陆。</p></blockquote>\n<p>输入网址后会弹出需要登陆的弹窗，点击之后就是常规的登入步骤</p>\n<p><img src=\"https://s2.loli.net/2022/01/24/MuQBP26dDWqKlg1.png\" alt=\"image.png\"></p>\n<p>这里可以采取selenium进行模拟登入，寻找相应元素并点击，不知道什么原因采取xpath路径寻找会找不到，所以采取css表达式进行寻找</p>\n<p><img src=\"https://s2.loli.net/2022/01/24/3F4278fYLTGlZ6W.png\" alt=\"image.png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wd.find_element_by_css_selector(<span class=\"string\">&#x27;div[class=&quot;action mt_15&quot;]&#x27;</span>).click()  <span class=\"comment\"># 点击登陆按钮</span></span><br><span class=\"line\">wd.find_element_by_class_name(<span class=\"string\">&quot;un-selected&quot;</span>).click()  <span class=\"comment\"># 勾选服务</span></span><br><span class=\"line\">wd.find_elements_by_css_selector(<span class=\"string\">&#x27;span[class=&quot;type-icon&quot;]&#x27;</span>)[<span class=\"number\">0</span>].click()  <span class=\"comment\"># 选择qq登陆</span></span><br></pre></td></tr></table></figure>\n\n<p>之后选择qq的登录方式时，<strong>账号密码登录</strong>框架被嵌套两次，需要进行跳转到对应框架才能获取对应元素</p>\n<p><img src=\"https://s2.loli.net/2022/01/24/U2K6cbplgCZLWQX.png\" alt=\"image.png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wd.switch_to.frame(<span class=\"string\">&quot;_login_frame_quick_&quot;</span>)  <span class=\"comment\"># 进入登陆框架</span></span><br><span class=\"line\">wd.switch_to.frame(<span class=\"string\">&quot;ptlogin_iframe&quot;</span>)</span><br><span class=\"line\">wd.find_element_by_id(<span class=\"string\">&#x27;switcher_plogin&#x27;</span>).click() <span class=\"comment\"># 选择登陆方式</span></span><br><span class=\"line\">account = wd.find_element_by_id(<span class=\"string\">&#x27;u&#x27;</span>)  <span class=\"comment\"># 账号</span></span><br><span class=\"line\">account.send_keys(account)</span><br><span class=\"line\">pd = wd.find_element_by_id(<span class=\"string\">&#x27;p&#x27;</span>)  <span class=\"comment\"># 密码</span></span><br><span class=\"line\">pd.send_keys(password)</span><br><span class=\"line\">wd.find_element_by_css_selector(<span class=\"string\">&#x27;a[class=&quot;login_button&quot;]&#x27;</span>).click()  <span class=\"comment\"># 登陆</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"获取m3u8\"><a href=\"#获取m3u8\" class=\"headerlink\" title=\"获取m3u8\"></a>获取m3u8</h1><p>腾讯视频和常规播放一样是使用m3u8格式的ts流进行播放，只要能够截取到ts片段进行合成就可以获得整个视频，而ts链接存储在m3u8中，需要先获取m3u8文件</p>\n<p>腾讯视频的m3u8文件是隐藏的，通过开发者模式寻找比较费时。但是腾讯视频封装在window全局对象下边，可以通过js快速获取，避免大量寻找</p>\n<p><img src=\"C:\\Users\\Krito\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220125111744325.png\" alt=\"image-20220125111744325\"></p>\n<p>通过selenium执行js即可获得m3u8的下载地址从而获取m3u8</p>\n<p><img src=\"https://s2.loli.net/2022/01/25/eEAIJFk6gUTWlyp.png\" alt=\"image.png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_m3u8</span>(<span class=\"params\">txt</span>):</span></span><br><span class=\"line\">    r = requests.get(txt,timeout=<span class=\"number\">5</span>,proxies=proxy)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;movies.txt&#x27;</span>,<span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(r.content)</span><br><span class=\"line\"></span><br><span class=\"line\">wd.execute_script(<span class=\"string\">&#x27;alert(PLAYER._DownloadMonitor.context.dataset.currentVideoUrl);&#x27;</span>)</span><br><span class=\"line\">m3u8 = wd.switch_to.alert.text</span><br><span class=\"line\">get_m3u8(m3u8)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"获取ts片段\"><a href=\"#获取ts片段\" class=\"headerlink\" title=\"获取ts片段\"></a>获取ts片段</h1><p>打开m3u8文件发现里面ts片段的地址是不全的，缺少前半部分，通过验证发现缺少的前半部分链接每次刷新视频后会更改，并不是固定的所以还是需要获取，经过验证发现缺少的链接包含在m3u8链接里面，所以ts片段完整链接=m3u8的部分链接+m3u8里面记载的ts链接</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_ts</span>(<span class=\"params\">n</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;movies/&quot;</span> + <span class=\"built_in\">str</span>(n)+<span class=\"string\">&#x27;.ts&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            r = requests.get(main_url+urls[n], timeout=<span class=\"number\">5</span> ,proxies=proxy)</span><br><span class=\"line\">            r.raise_for_status()</span><br><span class=\"line\">            f.write(r.content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> flag == <span class=\"number\">1</span>:</span><br><span class=\"line\">                failure_list.remove(n)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> n <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> failure_list:</span><br><span class=\"line\">                failure_list.append(n)</span><br><span class=\"line\"></span><br><span class=\"line\">main_url = <span class=\"string\">&#x27;/&#x27;</span>.join(m3u8.split(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">0</span>:-<span class=\"number\">1</span>])+<span class=\"string\">&#x27;/&#x27;</span></span><br><span class=\"line\">urls = get_ts_url()  <span class=\"comment\"># 存储ts链接</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> tqdm(ts_list, desc=<span class=\"string\">&quot;正在获取片段：&quot;</span>):</span><br><span class=\"line\">    get_ts(i,proxies=proxy,timeout=<span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"拼接\"><a href=\"#拼接\" class=\"headerlink\" title=\"拼接\"></a>拼接</h1><p>检查每个ts片段是否异常，当所有片段是正常的后进行拼接，从而获取到视频</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 合成ts片段</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_video</span>():</span></span><br><span class=\"line\">    files = [<span class=\"built_in\">str</span>(i)+<span class=\"string\">&#x27;.ts&#x27;</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(os.listdir(<span class=\"string\">&quot;movies/&quot;</span>)))]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">&quot;movies.mp4&quot;</span>):</span><br><span class=\"line\">        os.remove(<span class=\"string\">&quot;movies.mp4&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> tqdm(files, desc=<span class=\"string\">&quot;正在转换视频格式：&quot;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">&quot;movies/&quot;</span> + file):</span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;movies/&quot;</span> + file, <span class=\"string\">&#x27;rb&#x27;</span>) <span class=\"keyword\">as</span> f1:</span><br><span class=\"line\">                <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;movies.mp4&quot;</span>, <span class=\"string\">&#x27;ab&#x27;</span>) <span class=\"keyword\">as</span> f2:</span><br><span class=\"line\">                    f2.write(f1.read())</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">&quot;失败&quot;</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"comment\"># 检查是否片段是否完好</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">check_ts</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> failure_list:</span><br><span class=\"line\">        print(<span class=\"string\">&quot;异常片段：&quot;</span>)</span><br><span class=\"line\">        print(failure_list)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> failure_list:</span><br><span class=\"line\">            get_ts(i)</span><br><span class=\"line\">    get_video()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h1><p>selenium会在终端显示日志，导致进度条重复出现，这里关掉日志显示</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options = webdriver.ChromeOptions()</span><br><span class=\"line\">options.add_experimental_option(<span class=\"string\">&#x27;excludeSwitches&#x27;</span>, [<span class=\"string\">&#x27;enable-logging&#x27;</span>])</span><br><span class=\"line\">wd = webdriver.Chrome(chrome_options=options)</span><br></pre></td></tr></table></figure>\n\n<p>爬取完后发现，这样爬取的视频清晰度度是默认的，不是高清的。同时，切换清晰度的按钮是隐藏的，如果通过元素寻找直接点击会报错，但是将鼠标放在视频窗口上就可以显示清晰度按钮，进而点击切换清晰度</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换清晰度</span></span><br><span class=\"line\">video = wd.find_element_by_css_selector(<span class=\"string\">&#x27;txpdiv[class=&quot;txp_shadow&quot;]&#x27;</span>)</span><br><span class=\"line\">ActionChains(wd).move_to_element(video).perform()  <span class=\"comment\"># 控制鼠标移动到视频位置</span></span><br><span class=\"line\">wd.find_elements_by_css_selector(<span class=\"string\">&#x27;txpdiv[class=&quot;txp_label&quot;]&#x27;</span>)[<span class=\"number\">1</span>].click()</span><br><span class=\"line\">wd.find_element_by_css_selector(<span class=\"string\">&#x27;txpdiv[data-role=&quot;txp-ui-control-definition-list&quot;] txpdiv:nth-of-type(2)&#x27;</span>).click()  <span class=\"comment\"># 选择对应清晰度</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://s2.loli.net/2022/01/25/mx3C1NBLErzYcRA.png\" alt=\"image.png\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>获取ts片段时采用requests能够快速获取，而在模拟登陆和获取m3u8上采取selenium比较浪费时间，效率不高，之后看看能不能采用requests代替selenium实现快速爬取。可能是反爬机制，尝试采取多线程直接拒绝访问了，所以只能采取单线程，后续看看能不能通过其他方式加快获取速度。</p>\n","feature":true,"text":"前言最近在腾讯视频看《开端》，想着把视频搞下来顺便学一下爬虫，网上看了一些资料，最后也爬取成功了。以下是我爬取腾讯视频视频的过程，这里拿《开端》举例。 创建IP池为了防止IP被ban先建立好IP池 模拟登陆 在一些视频网站上看电影可能不需要登陆直接可以看，但是腾讯视频看VIP视频...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"感想","slug":"感想","count":3,"path":"api/tags/感想.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAIP%E6%B1%A0\"><span class=\"toc-text\">创建IP池</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86\"><span class=\"toc-text\">模拟登陆</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96m3u8\"><span class=\"toc-text\">获取m3u8</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96ts%E7%89%87%E6%AE%B5\"><span class=\"toc-text\">获取ts片段</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8B%BC%E6%8E%A5\"><span class=\"toc-text\">拼接</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E5%85%85\"><span class=\"toc-text\">补充</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"堆风水与堆排布","uid":"f86621641a641a4d6db180a8f81d528f","slug":"堆风水与堆排布","date":"2022-01-14T01:50:00.000Z","updated":"2022-01-14T14:11:01.408Z","comments":true,"path":"api/articles/堆风水与堆排布.json","keywords":null,"cover":"https://s2.loli.net/2022/01/14/nzTZPVIb1c3B8WO.jpg","text":"介绍所谓堆风水也叫作堆排布，其实说严格了并不是一种漏洞的利用方法，而是一种灵活布置堆块来控制堆布局的方法，在一些其他漏洞的利用中起到效果。接下来拿由清华蓝莲花战队出的babyfengshui来讲一下。 babyfengshui分析检查一下保护机制，32位，没有开pie保护 接下来...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"pwn","slug":"pwn","count":4,"path":"api/categories/pwn.json"}],"tags":[{"name":"笔记","slug":"笔记","count":4,"path":"api/tags/笔记.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true}}