[{"title":"绕过canary的六种方法","uid":"3c52b98d7c3f3c00c8108b428bc990ce","slug":"绕过canary的方法","date":"2021-12-29T12:49:23.000Z","updated":"2021-12-29T10:29:56.048Z","comments":true,"path":"api/articles/绕过canary的方法.json","cover":"https://s2.loli.net/2021/12/29/hg8E94WFwYpo1RD.jpg","text":"文章首发于安全客 简介canary保护又称金丝雀保护，作用是为了防止栈溢出的一种保护机制。工作原理是从fs/gs寄存器取值放在rbp-4或者rbp-8的位置（32位/64位），当用户输入结束后，程序会从rbp-4或者rbp-8的位置取出并与fs/gs寄存器对应位置的值进行比较，如...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"pwn","slug":"pwn","count":3,"path":"api/categories/pwn.json"}],"tags":[{"name":"笔记","slug":"笔记","count":3,"path":"api/tags/笔记.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"off-by-one","uid":"bd9db8b2380b14fbad4621ba09b4c803","slug":"off-by-one","date":"2021-12-03T13:24:02.000Z","updated":"2021-12-26T12:50:48.560Z","comments":true,"path":"api/articles/off-by-one.json","cover":"https://s2.loli.net/2021/12/26/8dARZTCroeUzIg5.jpg","text":"介绍off-by-one 指程序向缓冲区中写入时，写入的字节数超过了这个缓冲区本身所申请的字节数并且只越界了一个字节。这个字节可能是任意可控的或者是NULL字节。以下是对两种情况的利用方法 溢出字节为可控制任意字节：通过修改大小造成块结构之间出现重叠，从而泄露其他块数据，或是覆盖...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"学习记录","slug":"学习记录","count":3,"path":"api/categories/学习记录.json"}],"tags":[{"name":"pwn","slug":"pwn","count":7,"path":"api/tags/pwn.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"堆","uid":"c4bf9a47934395d80559cc60b6290065","slug":"堆","date":"2021-11-23T14:10:20.000Z","updated":"2021-12-05T05:02:19.781Z","comments":true,"path":"api/articles/堆.json","cover":"https://i.loli.net/2021/11/25/Z485hvdikxGYrAS.jpg","text":" 在栈上拖了好久才进入堆，这里就介绍一下这几天所学的内容 什么是堆 堆不同于栈，栈是静态分布，也就是程序加载进内存就会分配，而堆则是在程序执行时需要才会分配（由malloc、alloc、realloc函数分配内存后出现）。 堆其实就是程序虚拟地址空间的一块连续的线性区域，生长方向...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"pwn","slug":"pwn","count":3,"path":"api/categories/pwn.json"}],"tags":[{"name":"笔记","slug":"笔记","count":3,"path":"api/tags/笔记.json"}],"author":{"name":"Krito","slug":"blog-author","avatar":"https://i.loli.net/2021/05/05/GFiJQZM1pxK3AyC.jpg","link":"/","description":"不要等待，时机永远不会恰到好处。","socials":{"github":"https://github.com/Eli0t-g","twitter":"https://twitter.com/home","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/wu-sheng-85-17-66","csdn":"https://blog.csdn.net/qq_52053150?spm=1000.2115.3001.5343","juejin":"","customs":{}}},"feature":true}]